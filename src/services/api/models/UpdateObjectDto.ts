/* tslint:disable */
/* eslint-disable */
/**
 * пожликбез.рф API
 * API спецификация пожликбез.рф
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateObjectDto
 */
export interface UpdateObjectDto {
    /**
     * 
     * @type {string}
     * @memberof UpdateObjectDto
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateObjectDto
     */
    sp2type?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateObjectDto
     */
    sp2name?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateObjectDto
     */
    sp2questions?: string;
    /**
     * 
     * @type {number}
     * @memberof UpdateObjectDto
     */
    upFloors?: number;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateObjectDto
     */
    isUnderFloor?: boolean;
    /**
     * 
     * @type {number}
     * @memberof UpdateObjectDto
     */
    underFloors?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateObjectDto
     */
    fireRoomArea?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateObjectDto
     */
    tradeArea?: number;
    /**
     * 
     * @type {boolean}
     * @memberof UpdateObjectDto
     */
    blackTradeRooms?: boolean;
    /**
     * 
     * @type {number}
     * @memberof UpdateObjectDto
     */
    height?: number;
    /**
     * 
     * @type {number}
     * @memberof UpdateObjectDto
     */
    volume?: number;
    /**
     * 
     * @type {string}
     * @memberof UpdateObjectDto
     */
    _class?: string;
    /**
     * 
     * @type {string}
     * @memberof UpdateObjectDto
     */
    degree?: string;
}

/**
 * Check if a given object implements the UpdateObjectDto interface.
 */
export function instanceOfUpdateObjectDto(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UpdateObjectDtoFromJSON(json: any): UpdateObjectDto {
    return UpdateObjectDtoFromJSONTyped(json, false);
}

export function UpdateObjectDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateObjectDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'sp2type': !exists(json, 'sp2type') ? undefined : json['sp2type'],
        'sp2name': !exists(json, 'sp2name') ? undefined : json['sp2name'],
        'sp2questions': !exists(json, 'sp2questions') ? undefined : json['sp2questions'],
        'upFloors': !exists(json, 'upFloors') ? undefined : json['upFloors'],
        'isUnderFloor': !exists(json, 'isUnderFloor') ? undefined : json['isUnderFloor'],
        'underFloors': !exists(json, 'underFloors') ? undefined : json['underFloors'],
        'fireRoomArea': !exists(json, 'fireRoomArea') ? undefined : json['fireRoomArea'],
        'tradeArea': !exists(json, 'tradeArea') ? undefined : json['tradeArea'],
        'blackTradeRooms': !exists(json, 'blackTradeRooms') ? undefined : json['blackTradeRooms'],
        'height': !exists(json, 'height') ? undefined : json['height'],
        'volume': !exists(json, 'volume') ? undefined : json['volume'],
        '_class': !exists(json, 'class') ? undefined : json['class'],
        'degree': !exists(json, 'degree') ? undefined : json['degree'],
    };
}

export function UpdateObjectDtoToJSON(value?: UpdateObjectDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'sp2type': value.sp2type,
        'sp2name': value.sp2name,
        'sp2questions': value.sp2questions,
        'upFloors': value.upFloors,
        'isUnderFloor': value.isUnderFloor,
        'underFloors': value.underFloors,
        'fireRoomArea': value.fireRoomArea,
        'tradeArea': value.tradeArea,
        'blackTradeRooms': value.blackTradeRooms,
        'height': value.height,
        'volume': value.volume,
        'class': value._class,
        'degree': value.degree,
    };
}

