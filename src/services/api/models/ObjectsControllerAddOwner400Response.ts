/* tslint:disable */
/* eslint-disable */
/**
 * пожликбез.рф API
 * API спецификация пожликбез.рф
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Владелец уже существует.
 * @export
 * @interface ObjectsControllerAddOwner400Response
 */
export interface ObjectsControllerAddOwner400Response {
    /**
     * 
     * @type {number}
     * @memberof ObjectsControllerAddOwner400Response
     */
    statusCode: number;
    /**
     * 
     * @type {string}
     * @memberof ObjectsControllerAddOwner400Response
     */
    message: string;
    /**
     * 
     * @type {string}
     * @memberof ObjectsControllerAddOwner400Response
     */
    error?: string;
}

/**
 * Check if a given object implements the ObjectsControllerAddOwner400Response interface.
 */
export function instanceOfObjectsControllerAddOwner400Response(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "statusCode" in value;
    isInstance = isInstance && "message" in value;

    return isInstance;
}

export function ObjectsControllerAddOwner400ResponseFromJSON(json: any): ObjectsControllerAddOwner400Response {
    return ObjectsControllerAddOwner400ResponseFromJSONTyped(json, false);
}

export function ObjectsControllerAddOwner400ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObjectsControllerAddOwner400Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'statusCode': json['statusCode'],
        'message': json['message'],
        'error': !exists(json, 'error') ? undefined : json['error'],
    };
}

export function ObjectsControllerAddOwner400ResponseToJSON(value?: ObjectsControllerAddOwner400Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'statusCode': value.statusCode,
        'message': value.message,
        'error': value.error,
    };
}

