Subject: [PATCH] fix: codegen, ts errors
---
Index: .env.example
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.env.example b/.env.example
--- a/.env.example	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/.env.example	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -1,4 +1,4 @@
-VITE_BASE_URL=http://localhost:5173
+VITE_APP_URL=http://localhost:5173
 VITE_API_URL=https://пожликбез.рф/api/
 
 VITE_LOGTO_ENDPOINT=https://logto.dev
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/.gitignore	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -25,4 +25,4 @@
 *.sw?
 
 .env*
-!.env.example
\ No newline at end of file
+!.env.example
Index: openapitools.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/openapitools.json b/openapitools.json
--- a/openapitools.json	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/openapitools.json	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -2,6 +2,21 @@
   "$schema": "./node_modules/@openapitools/openapi-generator-cli/config.schema.json",
   "spaces": 2,
   "generator-cli": {
-    "version": "6.5.0"
+    "version": "6.5.0",
+    "useDocker": true,
+    "generators": {
+      "prod": {
+        "inputSpec": "https://xn--90aibgcmfwi.xn--p1ai/api/swagger.json",
+        "generatorName": "typescript-fetch",
+        "output": "#{cwd}/src/services/api",
+        "skipValidateSpec": true,
+        "additionalProperties": {
+          "useSingleRequestParameter": true,
+          "withSeparateModelsAndApi": true,
+          "modelPackage": "models",
+          "apiPackage": "api"
+        }
+      }
+    }
   }
 }
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
--- a/package.json	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/package.json	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -3,12 +3,15 @@
   "private": true,
   "version": "0.0.0",
   "scripts": {
-    "postinstall": "pnpm swagger",
+    "postinstall": "is-ci || pnpm swagger:prod",
     "dev": "vite",
     "build": "tsc && vite build",
     "preview": "vite preview",
-    "lint": "eslint src --cache --ext .ts,.tsx --quiet --fix",
-    "swagger": "openapi-generator-cli generate -i https://api.test.bmw-nsk.ru/swagger.json -g typescript-axios -o ./src/services/api/ --skip-validate-spec --additional-properties=useSingleRequestParameter=true,withSeparateModelsAndApi=true,modelPackage=models,apiPackage=api"
+    "test": "pnpm test:typescript && pnpm test:lint && pnpm test:prettier",
+    "test:typescript": "tsc --noEmit",
+    "test:lint": "eslint \"src/**/*.{ts,tsx}\"",
+    "test:prettier": "prettier . --ignore-unknown",
+    "swagger:prod": "openapi-generator-cli generate --generator-key prod --enable-post-process-file"
   },
   "dependencies": {
     "@ant-design/icons": "^5.1.4",
@@ -25,7 +28,8 @@
     "react-dadata": "^2.23.1",
     "react-dom": "18.2.0",
     "react-is": "18.2.0",
-    "styled-components": "5.3.9"
+    "styled-components": "5.3.9",
+    "zod": "^3.21.4"
   },
   "devDependencies": {
     "@openapitools/openapi-generator-cli": "2.5.2",
@@ -43,6 +47,7 @@
     "eslint-plugin-prettier": "4.2.1",
     "eslint-plugin-sonarjs": "0.18.0",
     "eslint-plugin-unused-imports": "2.0.0",
+    "is-ci": "^3.0.1",
     "prettier": "2.8.4",
     "react-router-dom": "6.8.2",
     "typescript": "4.9.3",
Index: pnpm-lock.yaml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pnpm-lock.yaml b/pnpm-lock.yaml
--- a/pnpm-lock.yaml	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/pnpm-lock.yaml	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -1,4 +1,8 @@
-lockfileVersion: '6.0'
+lockfileVersion: '6.1'
+
+settings:
+  autoInstallPeers: true
+  excludeLinksFromLockfile: false
 
 dependencies:
   '@ant-design/icons':
@@ -46,6 +50,9 @@
   styled-components:
     specifier: 5.3.9
     version: 5.3.9(react-dom@18.2.0)(react-is@18.2.0)(react@18.2.0)
+  zod:
+    specifier: ^3.21.4
+    version: 3.21.4
 
 devDependencies:
   '@openapitools/openapi-generator-cli':
@@ -93,6 +100,9 @@
   eslint-plugin-unused-imports:
     specifier: 2.0.0
     version: 2.0.0(@typescript-eslint/eslint-plugin@5.54.1)(eslint@8.35.0)
+  is-ci:
+    specifier: ^3.0.1
+    version: 3.0.1
   prettier:
     specifier: 2.8.4
     version: 2.8.4
@@ -1564,6 +1574,11 @@
   /chardet@0.7.0:
     resolution: {integrity: sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==}
     dev: true
+
+  /ci-info@3.8.0:
+    resolution: {integrity: sha512-eXTggHWSooYhq49F2opQhuHWgzucfF2YgODK4e1566GQs5BIfP30B0oenwBJHfWxAs2fyPB1s7Mg949zLf61Yw==}
+    engines: {node: '>=8'}
+    dev: true
 
   /classnames@2.3.2:
     resolution: {integrity: sha512-CSbhY4cFEJRe6/GQzIk5qXZ4Jeg5pcsP7b5peFSDpffpe1cqjASH/n9UTjBwOp6XpMSTwQ8Za2K5V02ueA7Tmw==}
@@ -2578,6 +2593,13 @@
     resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}
     engines: {node: '>= 0.4'}
     dev: true
+
+  /is-ci@3.0.1:
+    resolution: {integrity: sha512-ZYvCgrefwqoQ6yTyYUbQu64HsITZ3NfKX1lzaEYdkTDcfKzzCI/wthRRYKkdjHKFVgNiXKAKm65Zo1pk2as/QQ==}
+    hasBin: true
+    dependencies:
+      ci-info: 3.8.0
+    dev: true
 
   /is-core-module@2.11.0:
     resolution: {integrity: sha512-RRjxlvLDkD1YJwDbroBHMb+cukurkDWNyHx7D3oNB5x9rb5ogcksMC5wHCadcXoo67gVr/+3GFySh3134zi6rw==}
@@ -4376,3 +4398,7 @@
     resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}
     engines: {node: '>=10'}
     dev: true
+
+  /zod@3.21.4:
+    resolution: {integrity: sha512-m46AKbrzKVzOzs/DZgVnG5H55N1sv1M8qZU3A8RIKbs3mrACDNeIOeilDymVb2HdmP8uwshOCF4uJ8uM9rCqJw==}
+    dev: false
Index: src/app/providers/with-api/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/app/providers/with-api/index.tsx b/src/app/providers/with-api/index.tsx
--- a/src/app/providers/with-api/index.tsx	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/app/providers/with-api/index.tsx	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -1,18 +1,30 @@
-import React, { useContext } from 'react';
+import React, { useCallback, useMemo } from 'react';
 
 import { useLogto } from '@logto/react';
-import { Api } from 'services/api/apiAdapter';
-
-const ApiContext = React.createContext<Api | null>(null);
-
-export const useApi = () => {
-  return useContext(ApiContext)!;
-};
+import { Configuration, DefaultApi } from 'services/api';
+import { Resources } from 'shared/config/logto';
+import { ApiContext } from 'shared/hooks/useApi';
 
 export function withApi(WrappedComponent: React.ComponentType) {
   function WithApi() {
-    const { getAccessToken } = useLogto();
-    const api = new Api(getAccessToken);
+    const { getAccessToken, signOut } = useLogto();
+
+    const tokenIssuer = useCallback(async () => {
+      try {
+        return getAccessToken(Resources.API);
+      } catch (e) {
+        await signOut();
+      }
+    }, [getAccessToken]);
+
+    const api = useMemo(() => {
+      const configuration = new Configuration({
+        //@ts-expect-error skip
+        accessToken: tokenIssuer,
+      });
+
+      return new DefaultApi(configuration);
+    }, [tokenIssuer]);
 
     return (
       <ApiContext.Provider value={api}>
@@ -20,6 +32,7 @@
       </ApiContext.Provider>
     );
   }
+
   WithApi.displayName = 'WithApi';
   return WithApi;
 }
Index: src/components/Header/UserTools/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Header/UserTools/index.tsx b/src/components/Header/UserTools/index.tsx
--- a/src/components/Header/UserTools/index.tsx	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/components/Header/UserTools/index.tsx	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -1,15 +1,21 @@
 import React, { FC } from 'react';
 
 import { useUserInfo } from 'app/providers/with-user-info';
+import { useToggle } from 'shared/hooks/useToggle';
 
 import { UserToolsWrapper } from './styles';
-import { UserInfo } from './ui/UserInfoDropdown';
+import { UserInfoDropdown } from './ui/UserInfoDropdown';
+import { UserInfoModal } from './ui/UserInfoModal';
 
 export const UserTools: FC = () => {
   const { userData } = useUserInfo();
+
+  const [modal, , setModal] = useToggle();
+
   return (
     <UserToolsWrapper>
-      <UserInfo avatar={userData?.picture} shortName={userData?.name} />
+      <UserInfoModal open={modal} setOpen={setModal} />
+      <UserInfoDropdown avatar={userData?.picture} shortName={userData?.name} setModal={setModal} />
     </UserToolsWrapper>
   );
 };
Index: src/components/Header/UserTools/ui/UserInfoDropdown/UserItems/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Header/UserTools/ui/UserInfoDropdown/UserItems/index.tsx b/src/components/Header/UserTools/ui/UserInfoDropdown/UserItems/index.tsx
--- a/src/components/Header/UserTools/ui/UserInfoDropdown/UserItems/index.tsx	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/components/Header/UserTools/ui/UserInfoDropdown/UserItems/index.tsx	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -1,13 +1,20 @@
-import { Logout } from '@styled-icons/material';
+import { Dispatch } from 'react';
+
+import { Logout, Edit } from '@styled-icons/material';
 import { useUserInfo } from 'app/providers/with-user-info';
 
 import { MenuItem } from './MenuItem';
 
-export function UserItems() {
+type Props = {
+  setModal: Dispatch<boolean>;
+};
+
+export function UserItems({ setModal }: Props) {
   const { signOut } = useUserInfo();
 
   return (
     <>
+      <MenuItem title={'Редактировать'} icon={<Edit height={24} width={24} />} onClick={() => setModal(true)} />
       <MenuItem title={'Выйти'} icon={<Logout height={24} width={24} color="red" />} onClick={signOut} />
     </>
   );
Index: src/components/Header/UserTools/ui/UserInfoDropdown/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Header/UserTools/ui/UserInfoDropdown/index.tsx b/src/components/Header/UserTools/ui/UserInfoDropdown/index.tsx
--- a/src/components/Header/UserTools/ui/UserInfoDropdown/index.tsx	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/components/Header/UserTools/ui/UserInfoDropdown/index.tsx	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -1,4 +1,4 @@
-import React from 'react';
+import React, { Dispatch } from 'react';
 
 import { Avatar } from 'antd';
 import Dropdown from 'antd/es/dropdown';
@@ -12,10 +12,11 @@
   shortName?: string | null;
   avatarSize?: number;
   avatar?: string | null;
+  setModal: Dispatch<boolean>;
 };
 
-export const UserInfo: React.VFC<UserInfoDropdownProps> = (props) => {
-  const { avatar, shortName, avatarSize = 40 } = props;
+export const UserInfoDropdown: React.VFC<UserInfoDropdownProps> = (props) => {
+  const { avatar, shortName, avatarSize = 40, setModal } = props;
 
   return (
     <UserInfoContainer>
@@ -29,7 +30,7 @@
                 {shortName}
               </Title>
             </StyledTitleContainer>
-            <UserItems />
+            <UserItems setModal={setModal} />
           </DefaultOverlay>
         }
       >
Index: src/components/Header/UserTools/ui/UserInfoModal/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Header/UserTools/ui/UserInfoModal/index.tsx b/src/components/Header/UserTools/ui/UserInfoModal/index.tsx
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/components/Header/UserTools/ui/UserInfoModal/index.tsx	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,110 @@
+import React, { Dispatch, useEffect } from 'react';
+
+import { useLogto } from '@logto/react';
+import { Upload as UploadIcon } from '@styled-icons/material/Upload';
+import { Button, Form, Input, message, Modal, Upload } from 'antd';
+import { useUserInfo } from 'app/providers/with-user-info';
+import { Resources } from 'shared/config/logto';
+import { z } from 'zod';
+
+import { UpdateProfileFormData, updateProfileSchema } from './model';
+
+type ModalProps = {
+  open: boolean;
+  setOpen: Dispatch<boolean>;
+};
+
+export const UserInfoModal = ({ open, setOpen }: ModalProps) => {
+  const logto = useLogto();
+  const { userData } = useUserInfo();
+  const [form] = Form.useForm();
+
+  useEffect(() => {
+    if (userData) {
+      form.setFieldsValue({
+        username: userData.username || '',
+        primaryEmail: userData.email || '',
+        primaryPhone: userData.phone_number || '',
+        name: userData.name || '',
+        avatar: userData.picture ? [{ url: userData.picture, status: 'done' }] : [],
+      });
+    }
+  }, [userData, form]);
+
+  const validateMessages = {
+    required: '${label} обязательное!',
+    types: {
+      email: '${label} не валидный email!',
+    },
+  };
+
+  const handleSubmit = async (values: UpdateProfileFormData) => {
+    try {
+      const token = await logto.getAccessToken(Resources.API);
+      const validatedData = updateProfileSchema.parse(values);
+
+      const formData = new FormData();
+
+      if (validatedData.avatar?.file?.originFileObj) {
+        formData.append('avatar', validatedData.avatar?.file?.originFileObj);
+      }
+
+      formData.append('username', validatedData.username);
+      formData.append('primaryEmail', validatedData.primaryEmail);
+      formData.append('primaryPhone', validatedData.primaryPhone);
+      formData.append('name', validatedData.name);
+
+      await fetch('https://пожликбез.рф/api/profile', {
+        method: 'PATCH',
+        body: formData,
+        headers: {
+          Authorization: 'Bearer ' + token,
+        },
+      });
+
+      await logto.fetchUserInfo();
+
+      message.success('Профиль успешно обновлен');
+    } catch (err) {
+      if (err instanceof z.ZodError) {
+        form.setFields(
+          err.errors.map((error) => ({
+            name: error.path,
+            errors: [error.message],
+          })),
+        );
+      } else {
+        message.error('Произошла ошибка при обновлении профиля');
+      }
+    }
+  };
+
+  return (
+    <Modal open={open} title="Редактировать профиль" footer={null} onCancel={() => setOpen(false)}>
+      <Form form={form} onFinish={handleSubmit} validateMessages={validateMessages} autoComplete="off">
+        <Form.Item name="username" label="Имя пользователя" rules={[{ required: true }]}>
+          <Input />
+        </Form.Item>
+        <Form.Item name="primaryEmail" label="Email" rules={[{ type: 'email' }]}>
+          <Input />
+        </Form.Item>
+        <Form.Item name="primaryPhone" label="Телефон" rules={[{ required: true }]}>
+          <Input />
+        </Form.Item>
+        <Form.Item name="name" label="Имя" rules={[{ required: true }]}>
+          <Input />
+        </Form.Item>
+        <Form.Item name="avatar" label="Аватар" valuePropName="file">
+          <Upload name="avatar" listType="picture">
+            <Button icon={<UploadIcon />}>Выбрать файл</Button>
+          </Upload>
+        </Form.Item>
+        <Form.Item>
+          <Button type="primary" htmlType="submit">
+            Сохранить
+          </Button>
+        </Form.Item>
+      </Form>
+    </Modal>
+  );
+};
Index: src/components/Header/UserTools/ui/UserInfoModal/model.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Header/UserTools/ui/UserInfoModal/model.ts b/src/components/Header/UserTools/ui/UserInfoModal/model.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/components/Header/UserTools/ui/UserInfoModal/model.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,27 @@
+import { z } from 'zod';
+
+const MAX_FILE_SIZE = 500000;
+const ACCEPTED_IMAGE_TYPES = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];
+
+// Создайте схему zod для валидации данных формы
+export const updateProfileSchema = z.object({
+  username: z.string().nonempty({ message: 'Имя пользователя не может быть пустым' }),
+  primaryEmail: z.string().email({ message: 'Введите действительный адрес электронной почты' }),
+  primaryPhone: z.string().nonempty({ message: 'Телефон не может быть пустым' }),
+  name: z.string().nonempty({ message: 'Имя не может быть пустым' }),
+  avatar: z
+    .any()
+    .refine(({ file }) => !file || file?.size <= MAX_FILE_SIZE, `Максимальный размер 5MB`)
+    .refine(
+      ({ file }) => !file || ACCEPTED_IMAGE_TYPES.includes(file?.type),
+      'Изображение должно быть в формате.jpg, .jpeg, .png and .webp',
+    ),
+});
+
+export type UpdateProfileFormData = {
+  username: string;
+  primaryEmail: string;
+  primaryPhone: string;
+  name: string;
+  avatar: any;
+};
Index: src/pages/Audit/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/Audit/index.tsx b/src/pages/Audit/index.tsx
--- a/src/pages/Audit/index.tsx	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/pages/Audit/index.tsx	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -6,11 +6,10 @@
 import { DeleteTwoTone, EditTwoTone, PlusOutlined } from '@ant-design/icons';
 import { Card, Space, Row, Col, Popover, FloatButton } from 'antd';
 import Paragraph from 'antd/es/typography/Paragraph';
+import { useApi } from 'shared/hooks/useApi';
 import { TooltipCustom } from 'shared/ui/TooltipCustom';
 // import Button from 'antd/es/button';
 
-import { useApi } from '../../app/providers/with-api';
-
 // import { objectsPaths } from './routes';
 
 const floatingBtnStyle = {
@@ -40,19 +39,10 @@
 
   const api = useApi();
 
-  const deleteObject = (id: string) => () => {
-    api.partners.partnersControllerRemove({ id }).then(() => {
-      setUpdateFlag(true);
-    });
-  };
+  const deleteObject = (id: string) => () => {};
 
   useEffect(() => {
     if (updateFlag === true) {
-      api.partners.partnersControllerFind().then((data: unknown) => {
-        if (data && data?.data?.data) {
-          setObjectsList(data?.data?.data);
-        }
-      });
       setUpdateFlag(false);
     }
   }, [updateFlag]);
Index: src/pages/Calculators/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/Calculators/index.tsx b/src/pages/Calculators/index.tsx
--- a/src/pages/Calculators/index.tsx	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/pages/Calculators/index.tsx	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -4,8 +4,7 @@
 
 import Button from 'antd/es/button';
 import Paragraph from 'antd/es/typography/Paragraph';
-
-import { useApi } from '../../app/providers/with-api';
+import { useApi } from 'shared/hooks/useApi';
 
 import { calcsPaths } from './routes';
 
@@ -14,9 +13,7 @@
 
   const api = useApi();
 
-  useEffect(() => {
-    api.partners.partnersControllerFind().then((d: unknown) => console.log(d));
-  }, []);
+  useEffect(() => {}, []);
 
   return (
     <div>
Index: src/pages/Journal/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/Journal/index.tsx b/src/pages/Journal/index.tsx
--- a/src/pages/Journal/index.tsx	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/pages/Journal/index.tsx	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -6,11 +6,10 @@
 import { DeleteTwoTone, EditTwoTone, PlusOutlined } from '@ant-design/icons';
 import { Card, Space, Row, Col, Popover, FloatButton } from 'antd';
 import Paragraph from 'antd/es/typography/Paragraph';
+import { useApi } from 'shared/hooks/useApi';
 import { TooltipCustom } from 'shared/ui/TooltipCustom';
 // import Button from 'antd/es/button';
 
-import { useApi } from '../../app/providers/with-api';
-
 // import { objectsPaths } from './routes';
 
 const floatingBtnStyle = {
@@ -41,18 +40,13 @@
   const api = useApi();
 
   const deleteObject = (id: string) => () => {
-    api.partners.partnersControllerRemove({ id }).then(() => {
+    api.objectsControllerRemove({ id }).then(() => {
       setUpdateFlag(true);
     });
   };
 
   useEffect(() => {
     if (updateFlag === true) {
-      api.partners.partnersControllerFind().then((data: unknown) => {
-        if (data && data?.data?.data) {
-          setObjectsList(data?.data?.data);
-        }
-      });
       setUpdateFlag(false);
     }
   }, [updateFlag]);
Index: src/pages/Object/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/Object/index.tsx b/src/pages/Object/index.tsx
--- a/src/pages/Object/index.tsx	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/pages/Object/index.tsx	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -1,23 +1,13 @@
-import { useEffect } from 'react';
-
 import { useNavigate } from 'react-router-dom';
 
 import Button from 'antd/es/button';
 import Paragraph from 'antd/es/typography/Paragraph';
 
-import { useApi } from '../../app/providers/with-api';
-
 import { partnersPaths } from './routes';
 
 const Object = () => {
   const navigate = useNavigate();
 
-  const api = useApi();
-
-  useEffect(() => {
-    api.partners.partnersControllerFind().then((d: unknown) => console.log(d));
-  }, []);
-
   return (
     <div>
       <Paragraph>Список объектов</Paragraph>
Index: src/pages/Objects/ModifyObject/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/Objects/ModifyObject/index.tsx b/src/pages/Objects/ModifyObject/index.tsx
--- a/src/pages/Objects/ModifyObject/index.tsx	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/pages/Objects/ModifyObject/index.tsx	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -1,19 +1,19 @@
-// @ts-nocheck
 import { useEffect, useState } from 'react';
 
 import { DaDataAddress, DaDataSuggestion } from 'react-dadata';
 import { useParams } from 'react-router-dom';
 
 import { Button, Radio, Form, Input, Select, notification } from 'antd';
+import { CreateObjectDto } from 'services/api';
+import { useApi } from 'shared/hooks/useApi';
 import { DadataGeoPicker } from 'shared/ui/DadataGeoPicker';
 
-import { useApi } from '../../../app/providers/with-api';
 import { getDataByType, getFloorsByType, getAreasByTypeAndFloor, getHeightByTypeAndFloor } from '../utils';
 
 import { default as SP2_DATA } from './data_sp2_.json';
 import { default as F_DATA } from './f_sp2.json';
 
-const makeOptionValue = (data) => `${data.f}#${data.name}`;
+const makeOptionValue = (data: { f: string; name: string }) => `${data.f}#${data.name}`;
 const CATEGORIES = ['А', 'Б', 'В1', 'В2', 'В3', 'В4', 'Г', 'Д'];
 
 const ModifyObject = () => {
@@ -21,7 +21,7 @@
   const [areas, setAreas] = useState([]);
   const [heights, setHeights] = useState([]);
   const [dataByType, setDataByType] = useState([]);
-  const [typeF, setTypeF] = useState(null);
+  const [typeF, setTypeF] = useState<string | null>(null);
   const { id: objectId } = useParams();
   const [form] = Form.useForm();
   const api = useApi();
@@ -34,8 +34,7 @@
     });
   };
   const onFinish = (values: any) => {
-    console.log('Success:', SP2_DATA, values);
-    const createPartnerDto = {
+    const createObjectDto: CreateObjectDto = {
       name: values.name,
       // type: values.type,
       sp2type: values.sp2.split('#')[0] as string,
@@ -49,24 +48,22 @@
       blackTradeRooms: true,
       height: 22,
       volume: 235,
-      class: 'C01',
+      _class: 'C01',
       degree: 'IV',
     };
 
     if (objectId && objectId === 'new') {
-      api.partners
-        .partnersControllerCreate({
-          createPartnerDto,
-        })
+      api
+        .objectsControllerCreate({ createObjectDto })
         .then(() => {
           openNotification(values.name, 'Объект сохранен');
         })
         .catch(() => console.log('error'));
     } else if (objectId) {
-      api.partners
-        .partnersControllerUpdate({
-          id: objectId,
-          updatePartnerDto: createPartnerDto,
+      api
+        .objectsControllerUpdate({
+          id: Number(objectId),
+          updateObjectDto: createObjectDto,
         })
         .then(() => {
           openNotification(values.name, 'Объект обновлен');
@@ -82,8 +79,8 @@
 
   useEffect(() => {
     if (objectId) {
-      api.partners.partnersControllerFindOne({ id: objectId }).then((data) => {
-        form.setFieldsValue(data?.data);
+      api.objectsControllerFindOne({ id: Number(objectId) }).then((data) => {
+        form.setFieldsValue(data);
       });
     }
   }, [objectId]);
@@ -102,7 +99,7 @@
   // );
   console.log(typeF);
 
-  const sp2Change = (val) => {
+  const sp2Change = (val: string) => {
     // console.log(changed, allValues);
     const typeF = val?.split('#')[0];
     const dataByType = getDataByType(SP2_DATA, typeF);
@@ -121,7 +118,7 @@
     //   currentHeight,
     // );
   };
-  const floorsChange = (val) => {
+  const floorsChange = (val: number) => {
     const areas = getAreasByTypeAndFloor(dataByType, val);
     setAreas(areas);
 
@@ -134,7 +131,10 @@
     //   currentHeight,
     // );
   };
-  const areaChange = (val, vals) => {
+  const areaChange = (val: unknown, vals: { objectFloors: number }) => {
+    console.log('dbt', dataByType);
+    console.log('vals', vals);
+
     const heights = getHeightByTypeAndFloor(dataByType, vals.objectFloors, val);
     setHeights(heights);
     console.log(val, heights, vals);
@@ -215,7 +215,7 @@
       >
         <Select>
           {floors.map((item) => (
-            <Select.Option id={item} value={item} />
+            <Select.Option id={item} value={item} children={item} />
           ))}
         </Select>
       </Form.Item>
@@ -228,7 +228,7 @@
       >
         <Select>
           {areas.map((item) => (
-            <Select.Option id={item} value={item} />
+            <Select.Option id={item} value={item} children={item} />
           ))}
         </Select>
       </Form.Item>
@@ -241,7 +241,7 @@
       >
         <Select>
           {heights.map((item) => (
-            <Select.Option id={item} value={item} />
+            <Select.Option id={item} value={item} children={item} />
           ))}
         </Select>
       </Form.Item>
@@ -253,7 +253,7 @@
       >
         <Select>
           {CATEGORIES.map((item) => (
-            <Select.Option id={item} value={item} />
+            <Select.Option id={item} value={item} children={item} />
           ))}
         </Select>
       </Form.Item>
Index: src/pages/Objects/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/Objects/index.tsx b/src/pages/Objects/index.tsx
--- a/src/pages/Objects/index.tsx	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/pages/Objects/index.tsx	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -6,10 +6,9 @@
 import { PlusOutlined, DeleteTwoTone, EditTwoTone } from '@ant-design/icons';
 import { Space, FloatButton, Card, Col, Row, Popover } from 'antd';
 import Paragraph from 'antd/es/typography/Paragraph';
+import { useApi } from 'shared/hooks/useApi';
 import { TooltipCustom } from 'shared/ui/TooltipCustom';
 
-import { useApi } from '../../app/providers/with-api';
-
 const floatingBtnStyle = {
   right: '10%',
   bottom: '10%',
@@ -40,10 +39,10 @@
   const navigate = useNavigate();
 
   const deleteObject = (id: string) => () => {
-    api.partners.partnersControllerRemove({ id }).then(() => {
-      api.partners.partnersControllerFind().then((data: unknown) => {
-        if (data && data?.data?.data) {
-          setObjectsList(data?.data?.data);
+    api.objectsControllerRemove({ id }).then(() => {
+      api.objectsControllerFind().then((data: unknown) => {
+        if (data && data?.data) {
+          setObjectsList(data?.data);
         }
       });
     });
@@ -54,9 +53,9 @@
   };
 
   useEffect(() => {
-    api.partners.partnersControllerFind().then((data: unknown) => {
-      if (data && data?.data?.data) {
-        setObjectsList(data?.data?.data);
+    api.objectsControllerFind().then((data: unknown) => {
+      if (data && data?.data) {
+        setObjectsList(data?.data);
       }
     });
   }, []);
Index: src/pages/Profile/index.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/pages/Profile/index.tsx b/src/pages/Profile/index.tsx
--- a/src/pages/Profile/index.tsx	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/pages/Profile/index.tsx	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -5,18 +5,12 @@
 import Button from 'antd/es/button';
 import Paragraph from 'antd/es/typography/Paragraph';
 
-import { useApi } from '../../app/providers/with-api';
-
 import { partnersPaths } from './routes';
 
 const Objects = () => {
   const navigate = useNavigate();
 
-  const api = useApi();
-
-  useEffect(() => {
-    api.partners.partnersControllerFind().then((d: unknown) => console.log(d));
-  }, []);
+  useEffect(() => {}, []);
 
   return (
     <div>
Index: src/services/api/.gitignore
===================================================================
diff --git a/src/services/api/.gitignore b/src/services/api/.gitignore
deleted file mode 100644
--- a/src/services/api/.gitignore	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,4 +0,0 @@
-wwwroot/*.js
-node_modules
-typings
-dist
Index: src/services/api/.openapi-generator-ignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/.openapi-generator-ignore b/src/services/api/.openapi-generator-ignore
--- a/src/services/api/.openapi-generator-ignore	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/services/api/.openapi-generator-ignore	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -21,5 +21,3 @@
 #docs/*.md
 # Then explicitly reverse the ignore rule for a single file:
 #!docs/README.md
-
-/base.ts
Index: src/services/api/.openapi-generator/FILES
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/.openapi-generator/FILES b/src/services/api/.openapi-generator/FILES
--- a/src/services/api/.openapi-generator/FILES	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/services/api/.openapi-generator/FILES	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -1,86 +1,21 @@
-.gitignore
-.npmignore
-api.ts
-api/building-categories-api.ts
-api/building-offers-api.ts
-api/buildings-api.ts
-api/categories-on-buildings-api.ts
-api/common-api.ts
-api/partners-api.ts
-api/post-categories-api.ts
-api/posts-api.ts
-api/public-api.ts
-api/users-api.ts
-common.ts
-configuration.ts
-git_push.sh
+.openapi-generator-ignore
+apis/DefaultApi.ts
+apis/index.ts
 index.ts
-models/building-categories-controller-find-one404-response.ts
-models/building-categories-controller-find200-response-all-of.ts
-models/building-categories-controller-find200-response.ts
-models/building-categories-sorting-dto.ts
-models/building-category-entity.ts
-models/building-entity-categories-inner.ts
-models/building-entity-offers-inner.ts
-models/building-entity.ts
-models/building-offer-entity.ts
-models/building-offers-controller-create404-response.ts
-models/building-offers-controller-remove404-response.ts
-models/buildings-controller-create404-response.ts
-models/buildings-controller-find-one404-response.ts
-models/buildings-controller-find200-response-all-of.ts
-models/buildings-controller-find200-response.ts
-models/buildings-sorting-dto.ts
-models/create-building-category-dto.ts
-models/create-building-dto.ts
-models/create-building-offer-dto.ts
-models/create-partner-dto.ts
-models/create-post-category-dto.ts
-models/create-post-dto.ts
-models/create-user-dto.ts
-models/filters-dto.ts
-models/get-buildings-result-dto-buildings-value.ts
-models/get-buildings-result-dto-partners-value.ts
-models/get-buildings-result-dto.ts
+models/CreateObjectDto.ts
+models/CreateOwnerDto.ts
+models/ObjectEntity.ts
+models/ObjectsControllerAddOwner400Response.ts
+models/ObjectsControllerFind200Response.ts
+models/ObjectsControllerFind200ResponseAllOf.ts
+models/ObjectsControllerFind401Response.ts
+models/ObjectsControllerFindOne404Response.ts
+models/ObjectsControllerGetOwners200Response.ts
+models/ObjectsControllerGetOwners200ResponseAllOf.ts
+models/ObjectsControllerRemoveOwner400Response.ts
+models/ObjectsControllerRemoveOwner404Response.ts
+models/OwnerEntity.ts
+models/PaginationResultDto.ts
+models/UpdateObjectDto.ts
 models/index.ts
-models/paginated-entity.ts
-models/pagination-dto.ts
-models/partner-entity.ts
-models/partners-controller-create400-response.ts
-models/partners-controller-find-one404-response.ts
-models/partners-controller-find200-response-all-of.ts
-models/partners-controller-find200-response.ts
-models/partners-controller-find400-response.ts
-models/partners-controller-find403-response.ts
-models/partners-sorting-dto.ts
-models/post-categories-controller-find-one404-response.ts
-models/post-categories-controller-find200-response-all-of.ts
-models/post-categories-controller-find200-response.ts
-models/post-categories-sorting-dto.ts
-models/post-category-entity.ts
-models/post-entity-assets-inner.ts
-models/post-entity.ts
-models/post-preview-entity.ts
-models/posts-controller-find-one404-response.ts
-models/posts-controller-find200-response-all-of.ts
-models/posts-controller-find200-response.ts
-models/posts-sorting-dto.ts
-models/public-controller-find-one404-response.ts
-models/public-controller-posts200-response-all-of.ts
-models/public-controller-posts200-response.ts
-models/public-post-entity.ts
-models/public-post-preview-entity.ts
-models/update-building-categories-on-building-dto.ts
-models/update-building-category-dto.ts
-models/update-building-dto.ts
-models/update-building-offer-dto.ts
-models/update-partner-dto.ts
-models/update-post-category-dto.ts
-models/update-post-dto.ts
-models/update-user-dto.ts
-models/upload-controller-upload401-response.ts
-models/upload-controller-upload422-response.ts
-models/upload-result-dto-files-inner.ts
-models/upload-result-dto.ts
-models/user-entity.ts
-models/users-controller-find-one404-response.ts
+runtime.ts
Index: src/services/api/api.ts
===================================================================
diff --git a/src/services/api/api.ts b/src/services/api/api.ts
deleted file mode 100644
--- a/src/services/api/api.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,27 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-export * from './api/building-categories-api';
-export * from './api/building-offers-api';
-export * from './api/buildings-api';
-export * from './api/categories-on-buildings-api';
-export * from './api/common-api';
-export * from './api/partners-api';
-export * from './api/post-categories-api';
-export * from './api/posts-api';
-export * from './api/public-api';
-export * from './api/users-api';
-
Index: src/services/api/api/building-categories-api.ts
===================================================================
diff --git a/src/services/api/api/building-categories-api.ts b/src/services/api/api/building-categories-api.ts
deleted file mode 100644
--- a/src/services/api/api/building-categories-api.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,547 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-import type { Configuration } from '../configuration';
-import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
-import globalAxios from 'axios';
-// Some imports not used depending on template conditions
-// @ts-ignore
-import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
-// @ts-ignore
-import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
-// @ts-ignore
-import { BuildingCategoriesControllerFind200Response } from '../models';
-// @ts-ignore
-import { BuildingCategoriesControllerFindOne404Response } from '../models';
-// @ts-ignore
-import { BuildingCategoriesSortingDto } from '../models';
-// @ts-ignore
-import { BuildingCategoryEntity } from '../models';
-// @ts-ignore
-import { CreateBuildingCategoryDto } from '../models';
-// @ts-ignore
-import { PaginationDto } from '../models';
-// @ts-ignore
-import { PartnersControllerFind400Response } from '../models';
-// @ts-ignore
-import { PartnersControllerFind403Response } from '../models';
-// @ts-ignore
-import { UpdateBuildingCategoryDto } from '../models';
-// @ts-ignore
-import { UploadControllerUpload401Response } from '../models';
-/**
- * BuildingCategoriesApi - axios parameter creator
- * @export
- */
-export const BuildingCategoriesApiAxiosParamCreator = function (configuration?: Configuration) {
-    return {
-        /**
-         * 
-         * @summary Создает новую категорию филиалов.
-         * @param {CreateBuildingCategoryDto} createBuildingCategoryDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingCategoriesControllerCreate: async (createBuildingCategoryDto: CreateBuildingCategoryDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'createBuildingCategoryDto' is not null or undefined
-            assertParamExists('buildingCategoriesControllerCreate', 'createBuildingCategoryDto', createBuildingCategoryDto)
-            const localVarPath = `/building-categories`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(createBuildingCategoryDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает список категорий филиалов.
-         * @param {PaginationDto} [pagination] 
-         * @param {BuildingCategoriesSortingDto} [sorting] 
-         * @param {string} [name] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingCategoriesControllerFind: async (pagination?: PaginationDto, sorting?: BuildingCategoriesSortingDto, name?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            const localVarPath = `/building-categories`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-            if (pagination !== undefined) {
-                localVarQueryParameter['pagination'] = pagination;
-            }
-
-            if (sorting !== undefined) {
-                localVarQueryParameter['sorting'] = sorting;
-            }
-
-            if (name !== undefined) {
-                localVarQueryParameter['name'] = name;
-            }
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает указанную категорию филиалов.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingCategoriesControllerFindOne: async (id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('buildingCategoriesControllerFindOne', 'id', id)
-            const localVarPath = `/building-categories/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Удаляет указанную категорию филиалов.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingCategoriesControllerRemove: async (id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('buildingCategoriesControllerRemove', 'id', id)
-            const localVarPath = `/building-categories/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Обновляет указанную категорию филиалов.
-         * @param {string} id 
-         * @param {UpdateBuildingCategoryDto} updateBuildingCategoryDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingCategoriesControllerUpdate: async (id: string, updateBuildingCategoryDto: UpdateBuildingCategoryDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('buildingCategoriesControllerUpdate', 'id', id)
-            // verify required parameter 'updateBuildingCategoryDto' is not null or undefined
-            assertParamExists('buildingCategoriesControllerUpdate', 'updateBuildingCategoryDto', updateBuildingCategoryDto)
-            const localVarPath = `/building-categories/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(updateBuildingCategoryDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-    }
-};
-
-/**
- * BuildingCategoriesApi - functional programming interface
- * @export
- */
-export const BuildingCategoriesApiFp = function(configuration?: Configuration) {
-    const localVarAxiosParamCreator = BuildingCategoriesApiAxiosParamCreator(configuration)
-    return {
-        /**
-         * 
-         * @summary Создает новую категорию филиалов.
-         * @param {CreateBuildingCategoryDto} createBuildingCategoryDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingCategoriesControllerCreate(createBuildingCategoryDto: CreateBuildingCategoryDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BuildingCategoryEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingCategoriesControllerCreate(createBuildingCategoryDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает список категорий филиалов.
-         * @param {PaginationDto} [pagination] 
-         * @param {BuildingCategoriesSortingDto} [sorting] 
-         * @param {string} [name] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingCategoriesControllerFind(pagination?: PaginationDto, sorting?: BuildingCategoriesSortingDto, name?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BuildingCategoriesControllerFind200Response>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingCategoriesControllerFind(pagination, sorting, name, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает указанную категорию филиалов.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingCategoriesControllerFindOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BuildingCategoryEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingCategoriesControllerFindOne(id, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Удаляет указанную категорию филиалов.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingCategoriesControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BuildingCategoryEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingCategoriesControllerRemove(id, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Обновляет указанную категорию филиалов.
-         * @param {string} id 
-         * @param {UpdateBuildingCategoryDto} updateBuildingCategoryDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingCategoriesControllerUpdate(id: string, updateBuildingCategoryDto: UpdateBuildingCategoryDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BuildingCategoryEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingCategoriesControllerUpdate(id, updateBuildingCategoryDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-    }
-};
-
-/**
- * BuildingCategoriesApi - factory interface
- * @export
- */
-export const BuildingCategoriesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
-    const localVarFp = BuildingCategoriesApiFp(configuration)
-    return {
-        /**
-         * 
-         * @summary Создает новую категорию филиалов.
-         * @param {BuildingCategoriesApiBuildingCategoriesControllerCreateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingCategoriesControllerCreate(requestParameters: BuildingCategoriesApiBuildingCategoriesControllerCreateRequest, options?: AxiosRequestConfig): AxiosPromise<BuildingCategoryEntity> {
-            return localVarFp.buildingCategoriesControllerCreate(requestParameters.createBuildingCategoryDto, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает список категорий филиалов.
-         * @param {BuildingCategoriesApiBuildingCategoriesControllerFindRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingCategoriesControllerFind(requestParameters: BuildingCategoriesApiBuildingCategoriesControllerFindRequest = {}, options?: AxiosRequestConfig): AxiosPromise<BuildingCategoriesControllerFind200Response> {
-            return localVarFp.buildingCategoriesControllerFind(requestParameters.pagination, requestParameters.sorting, requestParameters.name, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает указанную категорию филиалов.
-         * @param {BuildingCategoriesApiBuildingCategoriesControllerFindOneRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingCategoriesControllerFindOne(requestParameters: BuildingCategoriesApiBuildingCategoriesControllerFindOneRequest, options?: AxiosRequestConfig): AxiosPromise<BuildingCategoryEntity> {
-            return localVarFp.buildingCategoriesControllerFindOne(requestParameters.id, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Удаляет указанную категорию филиалов.
-         * @param {BuildingCategoriesApiBuildingCategoriesControllerRemoveRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingCategoriesControllerRemove(requestParameters: BuildingCategoriesApiBuildingCategoriesControllerRemoveRequest, options?: AxiosRequestConfig): AxiosPromise<BuildingCategoryEntity> {
-            return localVarFp.buildingCategoriesControllerRemove(requestParameters.id, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Обновляет указанную категорию филиалов.
-         * @param {BuildingCategoriesApiBuildingCategoriesControllerUpdateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingCategoriesControllerUpdate(requestParameters: BuildingCategoriesApiBuildingCategoriesControllerUpdateRequest, options?: AxiosRequestConfig): AxiosPromise<BuildingCategoryEntity> {
-            return localVarFp.buildingCategoriesControllerUpdate(requestParameters.id, requestParameters.updateBuildingCategoryDto, options).then((request) => request(axios, basePath));
-        },
-    };
-};
-
-/**
- * Request parameters for buildingCategoriesControllerCreate operation in BuildingCategoriesApi.
- * @export
- * @interface BuildingCategoriesApiBuildingCategoriesControllerCreateRequest
- */
-export interface BuildingCategoriesApiBuildingCategoriesControllerCreateRequest {
-    /**
-     * 
-     * @type {CreateBuildingCategoryDto}
-     * @memberof BuildingCategoriesApiBuildingCategoriesControllerCreate
-     */
-    readonly createBuildingCategoryDto: CreateBuildingCategoryDto
-}
-
-/**
- * Request parameters for buildingCategoriesControllerFind operation in BuildingCategoriesApi.
- * @export
- * @interface BuildingCategoriesApiBuildingCategoriesControllerFindRequest
- */
-export interface BuildingCategoriesApiBuildingCategoriesControllerFindRequest {
-    /**
-     * 
-     * @type {PaginationDto}
-     * @memberof BuildingCategoriesApiBuildingCategoriesControllerFind
-     */
-    readonly pagination?: PaginationDto
-
-    /**
-     * 
-     * @type {BuildingCategoriesSortingDto}
-     * @memberof BuildingCategoriesApiBuildingCategoriesControllerFind
-     */
-    readonly sorting?: BuildingCategoriesSortingDto
-
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoriesApiBuildingCategoriesControllerFind
-     */
-    readonly name?: string
-}
-
-/**
- * Request parameters for buildingCategoriesControllerFindOne operation in BuildingCategoriesApi.
- * @export
- * @interface BuildingCategoriesApiBuildingCategoriesControllerFindOneRequest
- */
-export interface BuildingCategoriesApiBuildingCategoriesControllerFindOneRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoriesApiBuildingCategoriesControllerFindOne
-     */
-    readonly id: string
-}
-
-/**
- * Request parameters for buildingCategoriesControllerRemove operation in BuildingCategoriesApi.
- * @export
- * @interface BuildingCategoriesApiBuildingCategoriesControllerRemoveRequest
- */
-export interface BuildingCategoriesApiBuildingCategoriesControllerRemoveRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoriesApiBuildingCategoriesControllerRemove
-     */
-    readonly id: string
-}
-
-/**
- * Request parameters for buildingCategoriesControllerUpdate operation in BuildingCategoriesApi.
- * @export
- * @interface BuildingCategoriesApiBuildingCategoriesControllerUpdateRequest
- */
-export interface BuildingCategoriesApiBuildingCategoriesControllerUpdateRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoriesApiBuildingCategoriesControllerUpdate
-     */
-    readonly id: string
-
-    /**
-     * 
-     * @type {UpdateBuildingCategoryDto}
-     * @memberof BuildingCategoriesApiBuildingCategoriesControllerUpdate
-     */
-    readonly updateBuildingCategoryDto: UpdateBuildingCategoryDto
-}
-
-/**
- * BuildingCategoriesApi - object-oriented interface
- * @export
- * @class BuildingCategoriesApi
- * @extends {BaseAPI}
- */
-export class BuildingCategoriesApi extends BaseAPI {
-    /**
-     * 
-     * @summary Создает новую категорию филиалов.
-     * @param {BuildingCategoriesApiBuildingCategoriesControllerCreateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof BuildingCategoriesApi
-     */
-    public buildingCategoriesControllerCreate(requestParameters: BuildingCategoriesApiBuildingCategoriesControllerCreateRequest, options?: AxiosRequestConfig) {
-        return BuildingCategoriesApiFp(this.configuration).buildingCategoriesControllerCreate(requestParameters.createBuildingCategoryDto, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает список категорий филиалов.
-     * @param {BuildingCategoriesApiBuildingCategoriesControllerFindRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof BuildingCategoriesApi
-     */
-    public buildingCategoriesControllerFind(requestParameters: BuildingCategoriesApiBuildingCategoriesControllerFindRequest = {}, options?: AxiosRequestConfig) {
-        return BuildingCategoriesApiFp(this.configuration).buildingCategoriesControllerFind(requestParameters.pagination, requestParameters.sorting, requestParameters.name, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает указанную категорию филиалов.
-     * @param {BuildingCategoriesApiBuildingCategoriesControllerFindOneRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof BuildingCategoriesApi
-     */
-    public buildingCategoriesControllerFindOne(requestParameters: BuildingCategoriesApiBuildingCategoriesControllerFindOneRequest, options?: AxiosRequestConfig) {
-        return BuildingCategoriesApiFp(this.configuration).buildingCategoriesControllerFindOne(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Удаляет указанную категорию филиалов.
-     * @param {BuildingCategoriesApiBuildingCategoriesControllerRemoveRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof BuildingCategoriesApi
-     */
-    public buildingCategoriesControllerRemove(requestParameters: BuildingCategoriesApiBuildingCategoriesControllerRemoveRequest, options?: AxiosRequestConfig) {
-        return BuildingCategoriesApiFp(this.configuration).buildingCategoriesControllerRemove(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Обновляет указанную категорию филиалов.
-     * @param {BuildingCategoriesApiBuildingCategoriesControllerUpdateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof BuildingCategoriesApi
-     */
-    public buildingCategoriesControllerUpdate(requestParameters: BuildingCategoriesApiBuildingCategoriesControllerUpdateRequest, options?: AxiosRequestConfig) {
-        return BuildingCategoriesApiFp(this.configuration).buildingCategoriesControllerUpdate(requestParameters.id, requestParameters.updateBuildingCategoryDto, options).then((request) => request(this.axios, this.basePath));
-    }
-}
Index: src/services/api/api/building-offers-api.ts
===================================================================
diff --git a/src/services/api/api/building-offers-api.ts b/src/services/api/api/building-offers-api.ts
deleted file mode 100644
--- a/src/services/api/api/building-offers-api.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,382 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-import type { Configuration } from '../configuration';
-import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
-import globalAxios from 'axios';
-// Some imports not used depending on template conditions
-// @ts-ignore
-import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
-// @ts-ignore
-import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
-// @ts-ignore
-import { BuildingOfferEntity } from '../models';
-// @ts-ignore
-import { BuildingOffersControllerCreate404Response } from '../models';
-// @ts-ignore
-import { BuildingOffersControllerRemove404Response } from '../models';
-// @ts-ignore
-import { CreateBuildingOfferDto } from '../models';
-// @ts-ignore
-import { PartnersControllerFind400Response } from '../models';
-// @ts-ignore
-import { PartnersControllerFind403Response } from '../models';
-// @ts-ignore
-import { UpdateBuildingOfferDto } from '../models';
-// @ts-ignore
-import { UploadControllerUpload401Response } from '../models';
-/**
- * BuildingOffersApi - axios parameter creator
- * @export
- */
-export const BuildingOffersApiAxiosParamCreator = function (configuration?: Configuration) {
-    return {
-        /**
-         * 
-         * @summary Создает новое предложение филиала.
-         * @param {string} buildingId 
-         * @param {CreateBuildingOfferDto} createBuildingOfferDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingOffersControllerCreate: async (buildingId: string, createBuildingOfferDto: CreateBuildingOfferDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'buildingId' is not null or undefined
-            assertParamExists('buildingOffersControllerCreate', 'buildingId', buildingId)
-            // verify required parameter 'createBuildingOfferDto' is not null or undefined
-            assertParamExists('buildingOffersControllerCreate', 'createBuildingOfferDto', createBuildingOfferDto)
-            const localVarPath = `/buildings/{buildingId}/offers`
-                .replace(`{${"buildingId"}}`, encodeURIComponent(String(buildingId)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(createBuildingOfferDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Удаляет указанное предложение филиала.
-         * @param {string} buildingId 
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingOffersControllerRemove: async (buildingId: string, id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'buildingId' is not null or undefined
-            assertParamExists('buildingOffersControllerRemove', 'buildingId', buildingId)
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('buildingOffersControllerRemove', 'id', id)
-            const localVarPath = `/buildings/{buildingId}/offers/{id}`
-                .replace(`{${"buildingId"}}`, encodeURIComponent(String(buildingId)))
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Обновляет указанное предложение филиала.
-         * @param {string} buildingId 
-         * @param {string} id 
-         * @param {UpdateBuildingOfferDto} updateBuildingOfferDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingOffersControllerUpdate: async (buildingId: string, id: string, updateBuildingOfferDto: UpdateBuildingOfferDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'buildingId' is not null or undefined
-            assertParamExists('buildingOffersControllerUpdate', 'buildingId', buildingId)
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('buildingOffersControllerUpdate', 'id', id)
-            // verify required parameter 'updateBuildingOfferDto' is not null or undefined
-            assertParamExists('buildingOffersControllerUpdate', 'updateBuildingOfferDto', updateBuildingOfferDto)
-            const localVarPath = `/buildings/{buildingId}/offers/{id}`
-                .replace(`{${"buildingId"}}`, encodeURIComponent(String(buildingId)))
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(updateBuildingOfferDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-    }
-};
-
-/**
- * BuildingOffersApi - functional programming interface
- * @export
- */
-export const BuildingOffersApiFp = function(configuration?: Configuration) {
-    const localVarAxiosParamCreator = BuildingOffersApiAxiosParamCreator(configuration)
-    return {
-        /**
-         * 
-         * @summary Создает новое предложение филиала.
-         * @param {string} buildingId 
-         * @param {CreateBuildingOfferDto} createBuildingOfferDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingOffersControllerCreate(buildingId: string, createBuildingOfferDto: CreateBuildingOfferDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BuildingOfferEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingOffersControllerCreate(buildingId, createBuildingOfferDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Удаляет указанное предложение филиала.
-         * @param {string} buildingId 
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingOffersControllerRemove(buildingId: string, id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BuildingOfferEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingOffersControllerRemove(buildingId, id, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Обновляет указанное предложение филиала.
-         * @param {string} buildingId 
-         * @param {string} id 
-         * @param {UpdateBuildingOfferDto} updateBuildingOfferDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingOffersControllerUpdate(buildingId: string, id: string, updateBuildingOfferDto: UpdateBuildingOfferDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BuildingOfferEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingOffersControllerUpdate(buildingId, id, updateBuildingOfferDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-    }
-};
-
-/**
- * BuildingOffersApi - factory interface
- * @export
- */
-export const BuildingOffersApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
-    const localVarFp = BuildingOffersApiFp(configuration)
-    return {
-        /**
-         * 
-         * @summary Создает новое предложение филиала.
-         * @param {BuildingOffersApiBuildingOffersControllerCreateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingOffersControllerCreate(requestParameters: BuildingOffersApiBuildingOffersControllerCreateRequest, options?: AxiosRequestConfig): AxiosPromise<BuildingOfferEntity> {
-            return localVarFp.buildingOffersControllerCreate(requestParameters.buildingId, requestParameters.createBuildingOfferDto, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Удаляет указанное предложение филиала.
-         * @param {BuildingOffersApiBuildingOffersControllerRemoveRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingOffersControllerRemove(requestParameters: BuildingOffersApiBuildingOffersControllerRemoveRequest, options?: AxiosRequestConfig): AxiosPromise<BuildingOfferEntity> {
-            return localVarFp.buildingOffersControllerRemove(requestParameters.buildingId, requestParameters.id, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Обновляет указанное предложение филиала.
-         * @param {BuildingOffersApiBuildingOffersControllerUpdateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingOffersControllerUpdate(requestParameters: BuildingOffersApiBuildingOffersControllerUpdateRequest, options?: AxiosRequestConfig): AxiosPromise<BuildingOfferEntity> {
-            return localVarFp.buildingOffersControllerUpdate(requestParameters.buildingId, requestParameters.id, requestParameters.updateBuildingOfferDto, options).then((request) => request(axios, basePath));
-        },
-    };
-};
-
-/**
- * Request parameters for buildingOffersControllerCreate operation in BuildingOffersApi.
- * @export
- * @interface BuildingOffersApiBuildingOffersControllerCreateRequest
- */
-export interface BuildingOffersApiBuildingOffersControllerCreateRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingOffersApiBuildingOffersControllerCreate
-     */
-    readonly buildingId: string
-
-    /**
-     * 
-     * @type {CreateBuildingOfferDto}
-     * @memberof BuildingOffersApiBuildingOffersControllerCreate
-     */
-    readonly createBuildingOfferDto: CreateBuildingOfferDto
-}
-
-/**
- * Request parameters for buildingOffersControllerRemove operation in BuildingOffersApi.
- * @export
- * @interface BuildingOffersApiBuildingOffersControllerRemoveRequest
- */
-export interface BuildingOffersApiBuildingOffersControllerRemoveRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingOffersApiBuildingOffersControllerRemove
-     */
-    readonly buildingId: string
-
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingOffersApiBuildingOffersControllerRemove
-     */
-    readonly id: string
-}
-
-/**
- * Request parameters for buildingOffersControllerUpdate operation in BuildingOffersApi.
- * @export
- * @interface BuildingOffersApiBuildingOffersControllerUpdateRequest
- */
-export interface BuildingOffersApiBuildingOffersControllerUpdateRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingOffersApiBuildingOffersControllerUpdate
-     */
-    readonly buildingId: string
-
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingOffersApiBuildingOffersControllerUpdate
-     */
-    readonly id: string
-
-    /**
-     * 
-     * @type {UpdateBuildingOfferDto}
-     * @memberof BuildingOffersApiBuildingOffersControllerUpdate
-     */
-    readonly updateBuildingOfferDto: UpdateBuildingOfferDto
-}
-
-/**
- * BuildingOffersApi - object-oriented interface
- * @export
- * @class BuildingOffersApi
- * @extends {BaseAPI}
- */
-export class BuildingOffersApi extends BaseAPI {
-    /**
-     * 
-     * @summary Создает новое предложение филиала.
-     * @param {BuildingOffersApiBuildingOffersControllerCreateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof BuildingOffersApi
-     */
-    public buildingOffersControllerCreate(requestParameters: BuildingOffersApiBuildingOffersControllerCreateRequest, options?: AxiosRequestConfig) {
-        return BuildingOffersApiFp(this.configuration).buildingOffersControllerCreate(requestParameters.buildingId, requestParameters.createBuildingOfferDto, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Удаляет указанное предложение филиала.
-     * @param {BuildingOffersApiBuildingOffersControllerRemoveRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof BuildingOffersApi
-     */
-    public buildingOffersControllerRemove(requestParameters: BuildingOffersApiBuildingOffersControllerRemoveRequest, options?: AxiosRequestConfig) {
-        return BuildingOffersApiFp(this.configuration).buildingOffersControllerRemove(requestParameters.buildingId, requestParameters.id, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Обновляет указанное предложение филиала.
-     * @param {BuildingOffersApiBuildingOffersControllerUpdateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof BuildingOffersApi
-     */
-    public buildingOffersControllerUpdate(requestParameters: BuildingOffersApiBuildingOffersControllerUpdateRequest, options?: AxiosRequestConfig) {
-        return BuildingOffersApiFp(this.configuration).buildingOffersControllerUpdate(requestParameters.buildingId, requestParameters.id, requestParameters.updateBuildingOfferDto, options).then((request) => request(this.axios, this.basePath));
-    }
-}
Index: src/services/api/api/buildings-api.ts
===================================================================
diff --git a/src/services/api/api/buildings-api.ts b/src/services/api/api/buildings-api.ts
deleted file mode 100644
--- a/src/services/api/api/buildings-api.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,629 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-import type { Configuration } from '../configuration';
-import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
-import globalAxios from 'axios';
-// Some imports not used depending on template conditions
-// @ts-ignore
-import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
-// @ts-ignore
-import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
-// @ts-ignore
-import { BuildingEntity } from '../models';
-// @ts-ignore
-import { BuildingsControllerCreate404Response } from '../models';
-// @ts-ignore
-import { BuildingsControllerFind200Response } from '../models';
-// @ts-ignore
-import { BuildingsControllerFindOne404Response } from '../models';
-// @ts-ignore
-import { BuildingsSortingDto } from '../models';
-// @ts-ignore
-import { CreateBuildingDto } from '../models';
-// @ts-ignore
-import { PaginationDto } from '../models';
-// @ts-ignore
-import { PartnersControllerFind400Response } from '../models';
-// @ts-ignore
-import { PartnersControllerFind403Response } from '../models';
-// @ts-ignore
-import { PartnersControllerFindOne404Response } from '../models';
-// @ts-ignore
-import { UpdateBuildingDto } from '../models';
-// @ts-ignore
-import { UploadControllerUpload401Response } from '../models';
-/**
- * BuildingsApi - axios parameter creator
- * @export
- */
-export const BuildingsApiAxiosParamCreator = function (configuration?: Configuration) {
-    return {
-        /**
-         * 
-         * @summary Создает новый филиал.
-         * @param {CreateBuildingDto} createBuildingDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingsControllerCreate: async (createBuildingDto: CreateBuildingDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'createBuildingDto' is not null or undefined
-            assertParamExists('buildingsControllerCreate', 'createBuildingDto', createBuildingDto)
-            const localVarPath = `/buildings`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(createBuildingDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает список филиалов.
-         * @param {PaginationDto} [pagination] 
-         * @param {BuildingsSortingDto} [sorting] 
-         * @param {string} [phone] 
-         * @param {string} [city] 
-         * @param {string} [district] 
-         * @param {string} [street] 
-         * @param {string} [houseNumber] 
-         * @param {string} [partnerId] 
-         * @param {Array<string>} [categories] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingsControllerFind: async (pagination?: PaginationDto, sorting?: BuildingsSortingDto, phone?: string, city?: string, district?: string, street?: string, houseNumber?: string, partnerId?: string, categories?: Array<string>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            const localVarPath = `/buildings`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-            if (pagination !== undefined) {
-                localVarQueryParameter['pagination'] = pagination;
-            }
-
-            if (sorting !== undefined) {
-                localVarQueryParameter['sorting'] = sorting;
-            }
-
-            if (phone !== undefined) {
-                localVarQueryParameter['phone'] = phone;
-            }
-
-            if (city !== undefined) {
-                localVarQueryParameter['city'] = city;
-            }
-
-            if (district !== undefined) {
-                localVarQueryParameter['district'] = district;
-            }
-
-            if (street !== undefined) {
-                localVarQueryParameter['street'] = street;
-            }
-
-            if (houseNumber !== undefined) {
-                localVarQueryParameter['houseNumber'] = houseNumber;
-            }
-
-            if (partnerId !== undefined) {
-                localVarQueryParameter['partnerId'] = partnerId;
-            }
-
-            if (categories) {
-                localVarQueryParameter['categories'] = categories;
-            }
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает указанный филиал.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingsControllerFindOne: async (id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('buildingsControllerFindOne', 'id', id)
-            const localVarPath = `/buildings/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Удаляет указанный филиал.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingsControllerRemove: async (id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('buildingsControllerRemove', 'id', id)
-            const localVarPath = `/buildings/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Обновляет указанный филиал.
-         * @param {string} id 
-         * @param {UpdateBuildingDto} updateBuildingDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingsControllerUpdate: async (id: string, updateBuildingDto: UpdateBuildingDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('buildingsControllerUpdate', 'id', id)
-            // verify required parameter 'updateBuildingDto' is not null or undefined
-            assertParamExists('buildingsControllerUpdate', 'updateBuildingDto', updateBuildingDto)
-            const localVarPath = `/buildings/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(updateBuildingDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-    }
-};
-
-/**
- * BuildingsApi - functional programming interface
- * @export
- */
-export const BuildingsApiFp = function(configuration?: Configuration) {
-    const localVarAxiosParamCreator = BuildingsApiAxiosParamCreator(configuration)
-    return {
-        /**
-         * 
-         * @summary Создает новый филиал.
-         * @param {CreateBuildingDto} createBuildingDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingsControllerCreate(createBuildingDto: CreateBuildingDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BuildingEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingsControllerCreate(createBuildingDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает список филиалов.
-         * @param {PaginationDto} [pagination] 
-         * @param {BuildingsSortingDto} [sorting] 
-         * @param {string} [phone] 
-         * @param {string} [city] 
-         * @param {string} [district] 
-         * @param {string} [street] 
-         * @param {string} [houseNumber] 
-         * @param {string} [partnerId] 
-         * @param {Array<string>} [categories] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingsControllerFind(pagination?: PaginationDto, sorting?: BuildingsSortingDto, phone?: string, city?: string, district?: string, street?: string, houseNumber?: string, partnerId?: string, categories?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BuildingsControllerFind200Response>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingsControllerFind(pagination, sorting, phone, city, district, street, houseNumber, partnerId, categories, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает указанный филиал.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingsControllerFindOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BuildingEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingsControllerFindOne(id, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Удаляет указанный филиал.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingsControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BuildingEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingsControllerRemove(id, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Обновляет указанный филиал.
-         * @param {string} id 
-         * @param {UpdateBuildingDto} updateBuildingDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingsControllerUpdate(id: string, updateBuildingDto: UpdateBuildingDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BuildingEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingsControllerUpdate(id, updateBuildingDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-    }
-};
-
-/**
- * BuildingsApi - factory interface
- * @export
- */
-export const BuildingsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
-    const localVarFp = BuildingsApiFp(configuration)
-    return {
-        /**
-         * 
-         * @summary Создает новый филиал.
-         * @param {BuildingsApiBuildingsControllerCreateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingsControllerCreate(requestParameters: BuildingsApiBuildingsControllerCreateRequest, options?: AxiosRequestConfig): AxiosPromise<BuildingEntity> {
-            return localVarFp.buildingsControllerCreate(requestParameters.createBuildingDto, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает список филиалов.
-         * @param {BuildingsApiBuildingsControllerFindRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingsControllerFind(requestParameters: BuildingsApiBuildingsControllerFindRequest = {}, options?: AxiosRequestConfig): AxiosPromise<BuildingsControllerFind200Response> {
-            return localVarFp.buildingsControllerFind(requestParameters.pagination, requestParameters.sorting, requestParameters.phone, requestParameters.city, requestParameters.district, requestParameters.street, requestParameters.houseNumber, requestParameters.partnerId, requestParameters.categories, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает указанный филиал.
-         * @param {BuildingsApiBuildingsControllerFindOneRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingsControllerFindOne(requestParameters: BuildingsApiBuildingsControllerFindOneRequest, options?: AxiosRequestConfig): AxiosPromise<BuildingEntity> {
-            return localVarFp.buildingsControllerFindOne(requestParameters.id, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Удаляет указанный филиал.
-         * @param {BuildingsApiBuildingsControllerRemoveRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingsControllerRemove(requestParameters: BuildingsApiBuildingsControllerRemoveRequest, options?: AxiosRequestConfig): AxiosPromise<BuildingEntity> {
-            return localVarFp.buildingsControllerRemove(requestParameters.id, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Обновляет указанный филиал.
-         * @param {BuildingsApiBuildingsControllerUpdateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingsControllerUpdate(requestParameters: BuildingsApiBuildingsControllerUpdateRequest, options?: AxiosRequestConfig): AxiosPromise<BuildingEntity> {
-            return localVarFp.buildingsControllerUpdate(requestParameters.id, requestParameters.updateBuildingDto, options).then((request) => request(axios, basePath));
-        },
-    };
-};
-
-/**
- * Request parameters for buildingsControllerCreate operation in BuildingsApi.
- * @export
- * @interface BuildingsApiBuildingsControllerCreateRequest
- */
-export interface BuildingsApiBuildingsControllerCreateRequest {
-    /**
-     * 
-     * @type {CreateBuildingDto}
-     * @memberof BuildingsApiBuildingsControllerCreate
-     */
-    readonly createBuildingDto: CreateBuildingDto
-}
-
-/**
- * Request parameters for buildingsControllerFind operation in BuildingsApi.
- * @export
- * @interface BuildingsApiBuildingsControllerFindRequest
- */
-export interface BuildingsApiBuildingsControllerFindRequest {
-    /**
-     * 
-     * @type {PaginationDto}
-     * @memberof BuildingsApiBuildingsControllerFind
-     */
-    readonly pagination?: PaginationDto
-
-    /**
-     * 
-     * @type {BuildingsSortingDto}
-     * @memberof BuildingsApiBuildingsControllerFind
-     */
-    readonly sorting?: BuildingsSortingDto
-
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsApiBuildingsControllerFind
-     */
-    readonly phone?: string
-
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsApiBuildingsControllerFind
-     */
-    readonly city?: string
-
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsApiBuildingsControllerFind
-     */
-    readonly district?: string
-
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsApiBuildingsControllerFind
-     */
-    readonly street?: string
-
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsApiBuildingsControllerFind
-     */
-    readonly houseNumber?: string
-
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsApiBuildingsControllerFind
-     */
-    readonly partnerId?: string
-
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof BuildingsApiBuildingsControllerFind
-     */
-    readonly categories?: Array<string>
-}
-
-/**
- * Request parameters for buildingsControllerFindOne operation in BuildingsApi.
- * @export
- * @interface BuildingsApiBuildingsControllerFindOneRequest
- */
-export interface BuildingsApiBuildingsControllerFindOneRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsApiBuildingsControllerFindOne
-     */
-    readonly id: string
-}
-
-/**
- * Request parameters for buildingsControllerRemove operation in BuildingsApi.
- * @export
- * @interface BuildingsApiBuildingsControllerRemoveRequest
- */
-export interface BuildingsApiBuildingsControllerRemoveRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsApiBuildingsControllerRemove
-     */
-    readonly id: string
-}
-
-/**
- * Request parameters for buildingsControllerUpdate operation in BuildingsApi.
- * @export
- * @interface BuildingsApiBuildingsControllerUpdateRequest
- */
-export interface BuildingsApiBuildingsControllerUpdateRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsApiBuildingsControllerUpdate
-     */
-    readonly id: string
-
-    /**
-     * 
-     * @type {UpdateBuildingDto}
-     * @memberof BuildingsApiBuildingsControllerUpdate
-     */
-    readonly updateBuildingDto: UpdateBuildingDto
-}
-
-/**
- * BuildingsApi - object-oriented interface
- * @export
- * @class BuildingsApi
- * @extends {BaseAPI}
- */
-export class BuildingsApi extends BaseAPI {
-    /**
-     * 
-     * @summary Создает новый филиал.
-     * @param {BuildingsApiBuildingsControllerCreateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof BuildingsApi
-     */
-    public buildingsControllerCreate(requestParameters: BuildingsApiBuildingsControllerCreateRequest, options?: AxiosRequestConfig) {
-        return BuildingsApiFp(this.configuration).buildingsControllerCreate(requestParameters.createBuildingDto, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает список филиалов.
-     * @param {BuildingsApiBuildingsControllerFindRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof BuildingsApi
-     */
-    public buildingsControllerFind(requestParameters: BuildingsApiBuildingsControllerFindRequest = {}, options?: AxiosRequestConfig) {
-        return BuildingsApiFp(this.configuration).buildingsControllerFind(requestParameters.pagination, requestParameters.sorting, requestParameters.phone, requestParameters.city, requestParameters.district, requestParameters.street, requestParameters.houseNumber, requestParameters.partnerId, requestParameters.categories, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает указанный филиал.
-     * @param {BuildingsApiBuildingsControllerFindOneRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof BuildingsApi
-     */
-    public buildingsControllerFindOne(requestParameters: BuildingsApiBuildingsControllerFindOneRequest, options?: AxiosRequestConfig) {
-        return BuildingsApiFp(this.configuration).buildingsControllerFindOne(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Удаляет указанный филиал.
-     * @param {BuildingsApiBuildingsControllerRemoveRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof BuildingsApi
-     */
-    public buildingsControllerRemove(requestParameters: BuildingsApiBuildingsControllerRemoveRequest, options?: AxiosRequestConfig) {
-        return BuildingsApiFp(this.configuration).buildingsControllerRemove(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Обновляет указанный филиал.
-     * @param {BuildingsApiBuildingsControllerUpdateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof BuildingsApi
-     */
-    public buildingsControllerUpdate(requestParameters: BuildingsApiBuildingsControllerUpdateRequest, options?: AxiosRequestConfig) {
-        return BuildingsApiFp(this.configuration).buildingsControllerUpdate(requestParameters.id, requestParameters.updateBuildingDto, options).then((request) => request(this.axios, this.basePath));
-    }
-}
Index: src/services/api/api/categories-on-buildings-api.ts
===================================================================
diff --git a/src/services/api/api/categories-on-buildings-api.ts b/src/services/api/api/categories-on-buildings-api.ts
deleted file mode 100644
--- a/src/services/api/api/categories-on-buildings-api.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,267 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-import type { Configuration } from '../configuration';
-import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
-import globalAxios from 'axios';
-// Some imports not used depending on template conditions
-// @ts-ignore
-import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
-// @ts-ignore
-import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
-// @ts-ignore
-import { BuildingCategoriesControllerFindOne404Response } from '../models';
-// @ts-ignore
-import { PartnersControllerFind400Response } from '../models';
-// @ts-ignore
-import { PartnersControllerFind403Response } from '../models';
-// @ts-ignore
-import { UpdateBuildingCategoriesOnBuildingDto } from '../models';
-// @ts-ignore
-import { UploadControllerUpload401Response } from '../models';
-/**
- * CategoriesOnBuildingsApi - axios parameter creator
- * @export
- */
-export const CategoriesOnBuildingsApiAxiosParamCreator = function (configuration?: Configuration) {
-    return {
-        /**
-         * 
-         * @summary Добавляет категории филиалов указанному филиалу.
-         * @param {string} buildingId 
-         * @param {UpdateBuildingCategoriesOnBuildingDto} updateBuildingCategoriesOnBuildingDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingCategoriesOnBuildingsControllerCreate: async (buildingId: string, updateBuildingCategoriesOnBuildingDto: UpdateBuildingCategoriesOnBuildingDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'buildingId' is not null or undefined
-            assertParamExists('buildingCategoriesOnBuildingsControllerCreate', 'buildingId', buildingId)
-            // verify required parameter 'updateBuildingCategoriesOnBuildingDto' is not null or undefined
-            assertParamExists('buildingCategoriesOnBuildingsControllerCreate', 'updateBuildingCategoriesOnBuildingDto', updateBuildingCategoriesOnBuildingDto)
-            const localVarPath = `/buildings/{buildingId}/categories`
-                .replace(`{${"buildingId"}}`, encodeURIComponent(String(buildingId)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(updateBuildingCategoriesOnBuildingDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Удаляет категории указанного филиала.
-         * @param {string} buildingId 
-         * @param {UpdateBuildingCategoriesOnBuildingDto} updateBuildingCategoriesOnBuildingDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingCategoriesOnBuildingsControllerDelete: async (buildingId: string, updateBuildingCategoriesOnBuildingDto: UpdateBuildingCategoriesOnBuildingDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'buildingId' is not null or undefined
-            assertParamExists('buildingCategoriesOnBuildingsControllerDelete', 'buildingId', buildingId)
-            // verify required parameter 'updateBuildingCategoriesOnBuildingDto' is not null or undefined
-            assertParamExists('buildingCategoriesOnBuildingsControllerDelete', 'updateBuildingCategoriesOnBuildingDto', updateBuildingCategoriesOnBuildingDto)
-            const localVarPath = `/buildings/{buildingId}/categories`
-                .replace(`{${"buildingId"}}`, encodeURIComponent(String(buildingId)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(updateBuildingCategoriesOnBuildingDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-    }
-};
-
-/**
- * CategoriesOnBuildingsApi - functional programming interface
- * @export
- */
-export const CategoriesOnBuildingsApiFp = function(configuration?: Configuration) {
-    const localVarAxiosParamCreator = CategoriesOnBuildingsApiAxiosParamCreator(configuration)
-    return {
-        /**
-         * 
-         * @summary Добавляет категории филиалов указанному филиалу.
-         * @param {string} buildingId 
-         * @param {UpdateBuildingCategoriesOnBuildingDto} updateBuildingCategoriesOnBuildingDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingCategoriesOnBuildingsControllerCreate(buildingId: string, updateBuildingCategoriesOnBuildingDto: UpdateBuildingCategoriesOnBuildingDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingCategoriesOnBuildingsControllerCreate(buildingId, updateBuildingCategoriesOnBuildingDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Удаляет категории указанного филиала.
-         * @param {string} buildingId 
-         * @param {UpdateBuildingCategoriesOnBuildingDto} updateBuildingCategoriesOnBuildingDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async buildingCategoriesOnBuildingsControllerDelete(buildingId: string, updateBuildingCategoriesOnBuildingDto: UpdateBuildingCategoriesOnBuildingDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.buildingCategoriesOnBuildingsControllerDelete(buildingId, updateBuildingCategoriesOnBuildingDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-    }
-};
-
-/**
- * CategoriesOnBuildingsApi - factory interface
- * @export
- */
-export const CategoriesOnBuildingsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
-    const localVarFp = CategoriesOnBuildingsApiFp(configuration)
-    return {
-        /**
-         * 
-         * @summary Добавляет категории филиалов указанному филиалу.
-         * @param {CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerCreateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingCategoriesOnBuildingsControllerCreate(requestParameters: CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerCreateRequest, options?: AxiosRequestConfig): AxiosPromise<void> {
-            return localVarFp.buildingCategoriesOnBuildingsControllerCreate(requestParameters.buildingId, requestParameters.updateBuildingCategoriesOnBuildingDto, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Удаляет категории указанного филиала.
-         * @param {CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerDeleteRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        buildingCategoriesOnBuildingsControllerDelete(requestParameters: CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerDeleteRequest, options?: AxiosRequestConfig): AxiosPromise<void> {
-            return localVarFp.buildingCategoriesOnBuildingsControllerDelete(requestParameters.buildingId, requestParameters.updateBuildingCategoriesOnBuildingDto, options).then((request) => request(axios, basePath));
-        },
-    };
-};
-
-/**
- * Request parameters for buildingCategoriesOnBuildingsControllerCreate operation in CategoriesOnBuildingsApi.
- * @export
- * @interface CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerCreateRequest
- */
-export interface CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerCreateRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerCreate
-     */
-    readonly buildingId: string
-
-    /**
-     * 
-     * @type {UpdateBuildingCategoriesOnBuildingDto}
-     * @memberof CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerCreate
-     */
-    readonly updateBuildingCategoriesOnBuildingDto: UpdateBuildingCategoriesOnBuildingDto
-}
-
-/**
- * Request parameters for buildingCategoriesOnBuildingsControllerDelete operation in CategoriesOnBuildingsApi.
- * @export
- * @interface CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerDeleteRequest
- */
-export interface CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerDeleteRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerDelete
-     */
-    readonly buildingId: string
-
-    /**
-     * 
-     * @type {UpdateBuildingCategoriesOnBuildingDto}
-     * @memberof CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerDelete
-     */
-    readonly updateBuildingCategoriesOnBuildingDto: UpdateBuildingCategoriesOnBuildingDto
-}
-
-/**
- * CategoriesOnBuildingsApi - object-oriented interface
- * @export
- * @class CategoriesOnBuildingsApi
- * @extends {BaseAPI}
- */
-export class CategoriesOnBuildingsApi extends BaseAPI {
-    /**
-     * 
-     * @summary Добавляет категории филиалов указанному филиалу.
-     * @param {CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerCreateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof CategoriesOnBuildingsApi
-     */
-    public buildingCategoriesOnBuildingsControllerCreate(requestParameters: CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerCreateRequest, options?: AxiosRequestConfig) {
-        return CategoriesOnBuildingsApiFp(this.configuration).buildingCategoriesOnBuildingsControllerCreate(requestParameters.buildingId, requestParameters.updateBuildingCategoriesOnBuildingDto, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Удаляет категории указанного филиала.
-     * @param {CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerDeleteRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof CategoriesOnBuildingsApi
-     */
-    public buildingCategoriesOnBuildingsControllerDelete(requestParameters: CategoriesOnBuildingsApiBuildingCategoriesOnBuildingsControllerDeleteRequest, options?: AxiosRequestConfig) {
-        return CategoriesOnBuildingsApiFp(this.configuration).buildingCategoriesOnBuildingsControllerDelete(requestParameters.buildingId, requestParameters.updateBuildingCategoriesOnBuildingDto, options).then((request) => request(this.axios, this.basePath));
-    }
-}
Index: src/services/api/api/common-api.ts
===================================================================
diff --git a/src/services/api/api/common-api.ts b/src/services/api/api/common-api.ts
deleted file mode 100644
--- a/src/services/api/api/common-api.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,157 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-import type { Configuration } from '../configuration';
-import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
-import globalAxios from 'axios';
-// Some imports not used depending on template conditions
-// @ts-ignore
-import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
-// @ts-ignore
-import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
-// @ts-ignore
-import { UploadControllerUpload401Response } from '../models';
-// @ts-ignore
-import { UploadControllerUpload422Response } from '../models';
-// @ts-ignore
-import { UploadResultDto } from '../models';
-/**
- * CommonApi - axios parameter creator
- * @export
- */
-export const CommonApiAxiosParamCreator = function (configuration?: Configuration) {
-    return {
-        /**
-         * 
-         * @summary Загружает файлы во временное хранилище.
-         * @param {Array<File>} [files] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        uploadControllerUpload: async (files?: Array<File>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            const localVarPath = `/upload`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-            const localVarFormParams = new ((configuration && configuration.formDataCtor) || FormData)();
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-            if (files) {
-                files.forEach((element) => {
-                    localVarFormParams.append('files', element as any);
-                })
-            }
-
-    
-    
-            localVarHeaderParameter['Content-Type'] = 'multipart/form-data';
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = localVarFormParams;
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-    }
-};
-
-/**
- * CommonApi - functional programming interface
- * @export
- */
-export const CommonApiFp = function(configuration?: Configuration) {
-    const localVarAxiosParamCreator = CommonApiAxiosParamCreator(configuration)
-    return {
-        /**
-         * 
-         * @summary Загружает файлы во временное хранилище.
-         * @param {Array<File>} [files] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async uploadControllerUpload(files?: Array<File>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UploadResultDto>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.uploadControllerUpload(files, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-    }
-};
-
-/**
- * CommonApi - factory interface
- * @export
- */
-export const CommonApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
-    const localVarFp = CommonApiFp(configuration)
-    return {
-        /**
-         * 
-         * @summary Загружает файлы во временное хранилище.
-         * @param {CommonApiUploadControllerUploadRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        uploadControllerUpload(requestParameters: CommonApiUploadControllerUploadRequest = {}, options?: AxiosRequestConfig): AxiosPromise<UploadResultDto> {
-            return localVarFp.uploadControllerUpload(requestParameters.files, options).then((request) => request(axios, basePath));
-        },
-    };
-};
-
-/**
- * Request parameters for uploadControllerUpload operation in CommonApi.
- * @export
- * @interface CommonApiUploadControllerUploadRequest
- */
-export interface CommonApiUploadControllerUploadRequest {
-    /**
-     * 
-     * @type {Array<File>}
-     * @memberof CommonApiUploadControllerUpload
-     */
-    readonly files?: Array<File>
-}
-
-/**
- * CommonApi - object-oriented interface
- * @export
- * @class CommonApi
- * @extends {BaseAPI}
- */
-export class CommonApi extends BaseAPI {
-    /**
-     * 
-     * @summary Загружает файлы во временное хранилище.
-     * @param {CommonApiUploadControllerUploadRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof CommonApi
-     */
-    public uploadControllerUpload(requestParameters: CommonApiUploadControllerUploadRequest = {}, options?: AxiosRequestConfig) {
-        return CommonApiFp(this.configuration).uploadControllerUpload(requestParameters.files, options).then((request) => request(this.axios, this.basePath));
-    }
-}
Index: src/services/api/api/partners-api.ts
===================================================================
diff --git a/src/services/api/api/partners-api.ts b/src/services/api/api/partners-api.ts
deleted file mode 100644
--- a/src/services/api/api/partners-api.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,589 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-import type { Configuration } from '../configuration';
-import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
-import globalAxios from 'axios';
-// Some imports not used depending on template conditions
-// @ts-ignore
-import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
-// @ts-ignore
-import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
-// @ts-ignore
-import { CreatePartnerDto } from '../models';
-// @ts-ignore
-import { PaginationDto } from '../models';
-// @ts-ignore
-import { PartnerEntity } from '../models';
-// @ts-ignore
-import { PartnersControllerCreate400Response } from '../models';
-// @ts-ignore
-import { PartnersControllerFind200Response } from '../models';
-// @ts-ignore
-import { PartnersControllerFind400Response } from '../models';
-// @ts-ignore
-import { PartnersControllerFind403Response } from '../models';
-// @ts-ignore
-import { PartnersControllerFindOne404Response } from '../models';
-// @ts-ignore
-import { PartnersSortingDto } from '../models';
-// @ts-ignore
-import { UpdatePartnerDto } from '../models';
-// @ts-ignore
-import { UploadControllerUpload401Response } from '../models';
-/**
- * PartnersApi - axios parameter creator
- * @export
- */
-export const PartnersApiAxiosParamCreator = function (configuration?: Configuration) {
-    return {
-        /**
-         * 
-         * @summary Создает новый объект
-         * @param {CreatePartnerDto} createPartnerDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        partnersControllerCreate: async (createPartnerDto: CreatePartnerDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'createPartnerDto' is not null or undefined
-            // TODO найти время и перепилить на объект
-            // assertParamExists('partnersControllerCreate', 'createPartnerDto', createPartnerDto)
-            const localVarPath = `/objects`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(createPartnerDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает список партнёров.
-         * @param {PaginationDto} [pagination] 
-         * @param {PartnersSortingDto} [sorting] 
-         * @param {string} [name] 
-         * @param {string} [url] 
-         * @param {string} [phone] 
-         * @param {'true' | 'false'} [servicePartner] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        partnersControllerFind: async (pagination?: PaginationDto, sorting?: PartnersSortingDto, name?: string, url?: string, phone?: string, servicePartner?: 'true' | 'false', options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            const localVarPath = `/objects`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-            if (pagination !== undefined) {
-                localVarQueryParameter['pagination'] = pagination;
-            }
-
-            if (sorting !== undefined) {
-                localVarQueryParameter['sorting'] = sorting;
-            }
-
-            if (name !== undefined) {
-                localVarQueryParameter['name'] = name;
-            }
-
-            if (url !== undefined) {
-                localVarQueryParameter['url'] = url;
-            }
-
-            if (phone !== undefined) {
-                localVarQueryParameter['phone'] = phone;
-            }
-
-            if (servicePartner !== undefined) {
-                localVarQueryParameter['servicePartner'] = servicePartner;
-            }
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает указанного партнёра.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        partnersControllerFindOne: async (id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('partnersControllerFindOne', 'id', id)
-            const localVarPath = `/objects/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Удаляет указанного партнёра.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        partnersControllerRemove: async (id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('partnersControllerRemove', 'id', id)
-            const localVarPath = `/objects/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Обновляет указанного партнёра.
-         * @param {string} id 
-         * @param {UpdatePartnerDto} updatePartnerDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        partnersControllerUpdate: async (id: string, updatePartnerDto: UpdatePartnerDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('partnersControllerUpdate', 'id', id)
-            // verify required parameter 'updatePartnerDto' is not null or undefined
-            // assertParamExists('partnersControllerUpdate', 'updatePartnerDto', updatePartnerDto)
-            const localVarPath = `/objects/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(updatePartnerDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-    }
-};
-
-/**
- * PartnersApi - functional programming interface
- * @export
- */
-export const PartnersApiFp = function(configuration?: Configuration) {
-    const localVarAxiosParamCreator = PartnersApiAxiosParamCreator(configuration)
-    return {
-        /**
-         * 
-         * @summary Создает нового партнёра.
-         * @param {CreatePartnerDto} createPartnerDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async partnersControllerCreate(createPartnerDto: CreatePartnerDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PartnerEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.partnersControllerCreate(createPartnerDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает список партнёров.
-         * @param {PaginationDto} [pagination] 
-         * @param {PartnersSortingDto} [sorting] 
-         * @param {string} [name] 
-         * @param {string} [url] 
-         * @param {string} [phone] 
-         * @param {'true' | 'false'} [servicePartner] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async partnersControllerFind(pagination?: PaginationDto, sorting?: PartnersSortingDto, name?: string, url?: string, phone?: string, servicePartner?: 'true' | 'false', options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PartnersControllerFind200Response>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.partnersControllerFind(pagination, sorting, name, url, phone, servicePartner, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает указанного партнёра.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async partnersControllerFindOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PartnerEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.partnersControllerFindOne(id, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Удаляет указанного партнёра.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async partnersControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PartnerEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.partnersControllerRemove(id, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Обновляет указанного партнёра.
-         * @param {string} id 
-         * @param {UpdatePartnerDto} updatePartnerDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async partnersControllerUpdate(id: string, updatePartnerDto: UpdatePartnerDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PartnerEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.partnersControllerUpdate(id, updatePartnerDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-    }
-};
-
-/**
- * PartnersApi - factory interface
- * @export
- */
-export const PartnersApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
-    const localVarFp = PartnersApiFp(configuration)
-    return {
-        /**
-         * 
-         * @summary Создает нового партнёра.
-         * @param {PartnersApiPartnersControllerCreateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        partnersControllerCreate(requestParameters: PartnersApiPartnersControllerCreateRequest, options?: AxiosRequestConfig): AxiosPromise<PartnerEntity> {
-            return localVarFp.partnersControllerCreate(requestParameters.createPartnerDto, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает список партнёров.
-         * @param {PartnersApiPartnersControllerFindRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        partnersControllerFind(requestParameters: PartnersApiPartnersControllerFindRequest = {}, options?: AxiosRequestConfig): AxiosPromise<PartnersControllerFind200Response> {
-            return localVarFp.partnersControllerFind(requestParameters.pagination, requestParameters.sorting, requestParameters.name, requestParameters.url, requestParameters.phone, requestParameters.servicePartner, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает указанного партнёра.
-         * @param {PartnersApiPartnersControllerFindOneRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        partnersControllerFindOne(requestParameters: PartnersApiPartnersControllerFindOneRequest, options?: AxiosRequestConfig): AxiosPromise<PartnerEntity> {
-            return localVarFp.partnersControllerFindOne(requestParameters.id, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Удаляет указанного партнёра.
-         * @param {PartnersApiPartnersControllerRemoveRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        partnersControllerRemove(requestParameters: PartnersApiPartnersControllerRemoveRequest, options?: AxiosRequestConfig): AxiosPromise<PartnerEntity> {
-            return localVarFp.partnersControllerRemove(requestParameters.id, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Обновляет указанного партнёра.
-         * @param {PartnersApiPartnersControllerUpdateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        partnersControllerUpdate(requestParameters: PartnersApiPartnersControllerUpdateRequest, options?: AxiosRequestConfig): AxiosPromise<PartnerEntity> {
-            return localVarFp.partnersControllerUpdate(requestParameters.id, requestParameters.updatePartnerDto, options).then((request) => request(axios, basePath));
-        },
-    };
-};
-
-/**
- * Request parameters for partnersControllerCreate operation in PartnersApi.
- * @export
- * @interface PartnersApiPartnersControllerCreateRequest
- */
-export interface PartnersApiPartnersControllerCreateRequest {
-    /**
-     * 
-     * @type {CreatePartnerDto}
-     * @memberof PartnersApiPartnersControllerCreate
-     */
-    readonly createPartnerDto: CreatePartnerDto
-}
-
-/**
- * Request parameters for partnersControllerFind operation in PartnersApi.
- * @export
- * @interface PartnersApiPartnersControllerFindRequest
- */
-export interface PartnersApiPartnersControllerFindRequest {
-    /**
-     * 
-     * @type {PaginationDto}
-     * @memberof PartnersApiPartnersControllerFind
-     */
-    readonly pagination?: PaginationDto
-
-    /**
-     * 
-     * @type {PartnersSortingDto}
-     * @memberof PartnersApiPartnersControllerFind
-     */
-    readonly sorting?: PartnersSortingDto
-
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersApiPartnersControllerFind
-     */
-    readonly name?: string
-
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersApiPartnersControllerFind
-     */
-    readonly url?: string
-
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersApiPartnersControllerFind
-     */
-    readonly phone?: string
-
-    /**
-     * 
-     * @type {'true' | 'false'}
-     * @memberof PartnersApiPartnersControllerFind
-     */
-    readonly servicePartner?: 'true' | 'false'
-}
-
-/**
- * Request parameters for partnersControllerFindOne operation in PartnersApi.
- * @export
- * @interface PartnersApiPartnersControllerFindOneRequest
- */
-export interface PartnersApiPartnersControllerFindOneRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersApiPartnersControllerFindOne
-     */
-    readonly id: string
-}
-
-/**
- * Request parameters for partnersControllerRemove operation in PartnersApi.
- * @export
- * @interface PartnersApiPartnersControllerRemoveRequest
- */
-export interface PartnersApiPartnersControllerRemoveRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersApiPartnersControllerRemove
-     */
-    readonly id: string
-}
-
-/**
- * Request parameters for partnersControllerUpdate operation in PartnersApi.
- * @export
- * @interface PartnersApiPartnersControllerUpdateRequest
- */
-export interface PartnersApiPartnersControllerUpdateRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersApiPartnersControllerUpdate
-     */
-    readonly id: string
-
-    /**
-     * 
-     * @type {UpdatePartnerDto}
-     * @memberof PartnersApiPartnersControllerUpdate
-     */
-    readonly updatePartnerDto: UpdatePartnerDto
-}
-
-/**
- * PartnersApi - object-oriented interface
- * @export
- * @class PartnersApi
- * @extends {BaseAPI}
- */
-export class PartnersApi extends BaseAPI {
-    /**
-     * 
-     * @summary Создает нового партнёра.
-     * @param {PartnersApiPartnersControllerCreateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PartnersApi
-     */
-    public partnersControllerCreate(requestParameters: PartnersApiPartnersControllerCreateRequest, options?: AxiosRequestConfig) {
-        return PartnersApiFp(this.configuration).partnersControllerCreate(requestParameters.createPartnerDto, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает список партнёров.
-     * @param {PartnersApiPartnersControllerFindRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PartnersApi
-     */
-    public partnersControllerFind(requestParameters: PartnersApiPartnersControllerFindRequest = {}, options?: AxiosRequestConfig) {
-        return PartnersApiFp(this.configuration).partnersControllerFind(requestParameters.pagination, requestParameters.sorting, requestParameters.name, requestParameters.url, requestParameters.phone, requestParameters.servicePartner, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает указанного партнёра.
-     * @param {PartnersApiPartnersControllerFindOneRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PartnersApi
-     */
-    public partnersControllerFindOne(requestParameters: PartnersApiPartnersControllerFindOneRequest, options?: AxiosRequestConfig) {
-        return PartnersApiFp(this.configuration).partnersControllerFindOne(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Удаляет указанного партнёра.
-     * @param {PartnersApiPartnersControllerRemoveRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PartnersApi
-     */
-    public partnersControllerRemove(requestParameters: PartnersApiPartnersControllerRemoveRequest, options?: AxiosRequestConfig) {
-        return PartnersApiFp(this.configuration).partnersControllerRemove(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Обновляет указанного партнёра.
-     * @param {PartnersApiPartnersControllerUpdateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PartnersApi
-     */
-    public partnersControllerUpdate(requestParameters: PartnersApiPartnersControllerUpdateRequest, options?: AxiosRequestConfig) {
-        return PartnersApiFp(this.configuration).partnersControllerUpdate(requestParameters.id, requestParameters.updatePartnerDto, options).then((request) => request(this.axios, this.basePath));
-    }
-}
Index: src/services/api/api/post-categories-api.ts
===================================================================
diff --git a/src/services/api/api/post-categories-api.ts b/src/services/api/api/post-categories-api.ts
deleted file mode 100644
--- a/src/services/api/api/post-categories-api.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,547 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-import type { Configuration } from '../configuration';
-import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
-import globalAxios from 'axios';
-// Some imports not used depending on template conditions
-// @ts-ignore
-import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
-// @ts-ignore
-import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
-// @ts-ignore
-import { CreatePostCategoryDto } from '../models';
-// @ts-ignore
-import { PaginationDto } from '../models';
-// @ts-ignore
-import { PartnersControllerFind400Response } from '../models';
-// @ts-ignore
-import { PartnersControllerFind403Response } from '../models';
-// @ts-ignore
-import { PostCategoriesControllerFind200Response } from '../models';
-// @ts-ignore
-import { PostCategoriesControllerFindOne404Response } from '../models';
-// @ts-ignore
-import { PostCategoriesSortingDto } from '../models';
-// @ts-ignore
-import { PostCategoryEntity } from '../models';
-// @ts-ignore
-import { UpdatePostCategoryDto } from '../models';
-// @ts-ignore
-import { UploadControllerUpload401Response } from '../models';
-/**
- * PostCategoriesApi - axios parameter creator
- * @export
- */
-export const PostCategoriesApiAxiosParamCreator = function (configuration?: Configuration) {
-    return {
-        /**
-         * 
-         * @summary Создает новую категорию статей.
-         * @param {CreatePostCategoryDto} createPostCategoryDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postCategoriesControllerCreate: async (createPostCategoryDto: CreatePostCategoryDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'createPostCategoryDto' is not null or undefined
-            assertParamExists('postCategoriesControllerCreate', 'createPostCategoryDto', createPostCategoryDto)
-            const localVarPath = `/post-categories`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(createPostCategoryDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает список категорий статей.
-         * @param {PaginationDto} [pagination] 
-         * @param {PostCategoriesSortingDto} [sorting] 
-         * @param {string} [name] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postCategoriesControllerFind: async (pagination?: PaginationDto, sorting?: PostCategoriesSortingDto, name?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            const localVarPath = `/post-categories`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-            if (pagination !== undefined) {
-                localVarQueryParameter['pagination'] = pagination;
-            }
-
-            if (sorting !== undefined) {
-                localVarQueryParameter['sorting'] = sorting;
-            }
-
-            if (name !== undefined) {
-                localVarQueryParameter['name'] = name;
-            }
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает указанную категорию статей.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postCategoriesControllerFindOne: async (id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('postCategoriesControllerFindOne', 'id', id)
-            const localVarPath = `/post-categories/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Удаляет указанную категорию статей.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postCategoriesControllerRemove: async (id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('postCategoriesControllerRemove', 'id', id)
-            const localVarPath = `/post-categories/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Обновляет указанную категорию статей.
-         * @param {string} id 
-         * @param {UpdatePostCategoryDto} updatePostCategoryDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postCategoriesControllerUpdate: async (id: string, updatePostCategoryDto: UpdatePostCategoryDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('postCategoriesControllerUpdate', 'id', id)
-            // verify required parameter 'updatePostCategoryDto' is not null or undefined
-            assertParamExists('postCategoriesControllerUpdate', 'updatePostCategoryDto', updatePostCategoryDto)
-            const localVarPath = `/post-categories/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(updatePostCategoryDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-    }
-};
-
-/**
- * PostCategoriesApi - functional programming interface
- * @export
- */
-export const PostCategoriesApiFp = function(configuration?: Configuration) {
-    const localVarAxiosParamCreator = PostCategoriesApiAxiosParamCreator(configuration)
-    return {
-        /**
-         * 
-         * @summary Создает новую категорию статей.
-         * @param {CreatePostCategoryDto} createPostCategoryDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async postCategoriesControllerCreate(createPostCategoryDto: CreatePostCategoryDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCategoryEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.postCategoriesControllerCreate(createPostCategoryDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает список категорий статей.
-         * @param {PaginationDto} [pagination] 
-         * @param {PostCategoriesSortingDto} [sorting] 
-         * @param {string} [name] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async postCategoriesControllerFind(pagination?: PaginationDto, sorting?: PostCategoriesSortingDto, name?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCategoriesControllerFind200Response>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.postCategoriesControllerFind(pagination, sorting, name, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает указанную категорию статей.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async postCategoriesControllerFindOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCategoryEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.postCategoriesControllerFindOne(id, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Удаляет указанную категорию статей.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async postCategoriesControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCategoryEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.postCategoriesControllerRemove(id, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Обновляет указанную категорию статей.
-         * @param {string} id 
-         * @param {UpdatePostCategoryDto} updatePostCategoryDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async postCategoriesControllerUpdate(id: string, updatePostCategoryDto: UpdatePostCategoryDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostCategoryEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.postCategoriesControllerUpdate(id, updatePostCategoryDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-    }
-};
-
-/**
- * PostCategoriesApi - factory interface
- * @export
- */
-export const PostCategoriesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
-    const localVarFp = PostCategoriesApiFp(configuration)
-    return {
-        /**
-         * 
-         * @summary Создает новую категорию статей.
-         * @param {PostCategoriesApiPostCategoriesControllerCreateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postCategoriesControllerCreate(requestParameters: PostCategoriesApiPostCategoriesControllerCreateRequest, options?: AxiosRequestConfig): AxiosPromise<PostCategoryEntity> {
-            return localVarFp.postCategoriesControllerCreate(requestParameters.createPostCategoryDto, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает список категорий статей.
-         * @param {PostCategoriesApiPostCategoriesControllerFindRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postCategoriesControllerFind(requestParameters: PostCategoriesApiPostCategoriesControllerFindRequest = {}, options?: AxiosRequestConfig): AxiosPromise<PostCategoriesControllerFind200Response> {
-            return localVarFp.postCategoriesControllerFind(requestParameters.pagination, requestParameters.sorting, requestParameters.name, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает указанную категорию статей.
-         * @param {PostCategoriesApiPostCategoriesControllerFindOneRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postCategoriesControllerFindOne(requestParameters: PostCategoriesApiPostCategoriesControllerFindOneRequest, options?: AxiosRequestConfig): AxiosPromise<PostCategoryEntity> {
-            return localVarFp.postCategoriesControllerFindOne(requestParameters.id, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Удаляет указанную категорию статей.
-         * @param {PostCategoriesApiPostCategoriesControllerRemoveRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postCategoriesControllerRemove(requestParameters: PostCategoriesApiPostCategoriesControllerRemoveRequest, options?: AxiosRequestConfig): AxiosPromise<PostCategoryEntity> {
-            return localVarFp.postCategoriesControllerRemove(requestParameters.id, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Обновляет указанную категорию статей.
-         * @param {PostCategoriesApiPostCategoriesControllerUpdateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postCategoriesControllerUpdate(requestParameters: PostCategoriesApiPostCategoriesControllerUpdateRequest, options?: AxiosRequestConfig): AxiosPromise<PostCategoryEntity> {
-            return localVarFp.postCategoriesControllerUpdate(requestParameters.id, requestParameters.updatePostCategoryDto, options).then((request) => request(axios, basePath));
-        },
-    };
-};
-
-/**
- * Request parameters for postCategoriesControllerCreate operation in PostCategoriesApi.
- * @export
- * @interface PostCategoriesApiPostCategoriesControllerCreateRequest
- */
-export interface PostCategoriesApiPostCategoriesControllerCreateRequest {
-    /**
-     * 
-     * @type {CreatePostCategoryDto}
-     * @memberof PostCategoriesApiPostCategoriesControllerCreate
-     */
-    readonly createPostCategoryDto: CreatePostCategoryDto
-}
-
-/**
- * Request parameters for postCategoriesControllerFind operation in PostCategoriesApi.
- * @export
- * @interface PostCategoriesApiPostCategoriesControllerFindRequest
- */
-export interface PostCategoriesApiPostCategoriesControllerFindRequest {
-    /**
-     * 
-     * @type {PaginationDto}
-     * @memberof PostCategoriesApiPostCategoriesControllerFind
-     */
-    readonly pagination?: PaginationDto
-
-    /**
-     * 
-     * @type {PostCategoriesSortingDto}
-     * @memberof PostCategoriesApiPostCategoriesControllerFind
-     */
-    readonly sorting?: PostCategoriesSortingDto
-
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoriesApiPostCategoriesControllerFind
-     */
-    readonly name?: string
-}
-
-/**
- * Request parameters for postCategoriesControllerFindOne operation in PostCategoriesApi.
- * @export
- * @interface PostCategoriesApiPostCategoriesControllerFindOneRequest
- */
-export interface PostCategoriesApiPostCategoriesControllerFindOneRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoriesApiPostCategoriesControllerFindOne
-     */
-    readonly id: string
-}
-
-/**
- * Request parameters for postCategoriesControllerRemove operation in PostCategoriesApi.
- * @export
- * @interface PostCategoriesApiPostCategoriesControllerRemoveRequest
- */
-export interface PostCategoriesApiPostCategoriesControllerRemoveRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoriesApiPostCategoriesControllerRemove
-     */
-    readonly id: string
-}
-
-/**
- * Request parameters for postCategoriesControllerUpdate operation in PostCategoriesApi.
- * @export
- * @interface PostCategoriesApiPostCategoriesControllerUpdateRequest
- */
-export interface PostCategoriesApiPostCategoriesControllerUpdateRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoriesApiPostCategoriesControllerUpdate
-     */
-    readonly id: string
-
-    /**
-     * 
-     * @type {UpdatePostCategoryDto}
-     * @memberof PostCategoriesApiPostCategoriesControllerUpdate
-     */
-    readonly updatePostCategoryDto: UpdatePostCategoryDto
-}
-
-/**
- * PostCategoriesApi - object-oriented interface
- * @export
- * @class PostCategoriesApi
- * @extends {BaseAPI}
- */
-export class PostCategoriesApi extends BaseAPI {
-    /**
-     * 
-     * @summary Создает новую категорию статей.
-     * @param {PostCategoriesApiPostCategoriesControllerCreateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PostCategoriesApi
-     */
-    public postCategoriesControllerCreate(requestParameters: PostCategoriesApiPostCategoriesControllerCreateRequest, options?: AxiosRequestConfig) {
-        return PostCategoriesApiFp(this.configuration).postCategoriesControllerCreate(requestParameters.createPostCategoryDto, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает список категорий статей.
-     * @param {PostCategoriesApiPostCategoriesControllerFindRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PostCategoriesApi
-     */
-    public postCategoriesControllerFind(requestParameters: PostCategoriesApiPostCategoriesControllerFindRequest = {}, options?: AxiosRequestConfig) {
-        return PostCategoriesApiFp(this.configuration).postCategoriesControllerFind(requestParameters.pagination, requestParameters.sorting, requestParameters.name, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает указанную категорию статей.
-     * @param {PostCategoriesApiPostCategoriesControllerFindOneRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PostCategoriesApi
-     */
-    public postCategoriesControllerFindOne(requestParameters: PostCategoriesApiPostCategoriesControllerFindOneRequest, options?: AxiosRequestConfig) {
-        return PostCategoriesApiFp(this.configuration).postCategoriesControllerFindOne(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Удаляет указанную категорию статей.
-     * @param {PostCategoriesApiPostCategoriesControllerRemoveRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PostCategoriesApi
-     */
-    public postCategoriesControllerRemove(requestParameters: PostCategoriesApiPostCategoriesControllerRemoveRequest, options?: AxiosRequestConfig) {
-        return PostCategoriesApiFp(this.configuration).postCategoriesControllerRemove(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Обновляет указанную категорию статей.
-     * @param {PostCategoriesApiPostCategoriesControllerUpdateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PostCategoriesApi
-     */
-    public postCategoriesControllerUpdate(requestParameters: PostCategoriesApiPostCategoriesControllerUpdateRequest, options?: AxiosRequestConfig) {
-        return PostCategoriesApiFp(this.configuration).postCategoriesControllerUpdate(requestParameters.id, requestParameters.updatePostCategoryDto, options).then((request) => request(this.axios, this.basePath));
-    }
-}
Index: src/services/api/api/posts-api.ts
===================================================================
diff --git a/src/services/api/api/posts-api.ts b/src/services/api/api/posts-api.ts
deleted file mode 100644
--- a/src/services/api/api/posts-api.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,575 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-import type { Configuration } from '../configuration';
-import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
-import globalAxios from 'axios';
-// Some imports not used depending on template conditions
-// @ts-ignore
-import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
-// @ts-ignore
-import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
-// @ts-ignore
-import { CreatePostDto } from '../models';
-// @ts-ignore
-import { PaginationDto } from '../models';
-// @ts-ignore
-import { PartnersControllerFind400Response } from '../models';
-// @ts-ignore
-import { PartnersControllerFind403Response } from '../models';
-// @ts-ignore
-import { PostEntity } from '../models';
-// @ts-ignore
-import { PostPreviewEntity } from '../models';
-// @ts-ignore
-import { PostsControllerFind200Response } from '../models';
-// @ts-ignore
-import { PostsControllerFindOne404Response } from '../models';
-// @ts-ignore
-import { PostsSortingDto } from '../models';
-// @ts-ignore
-import { UpdatePostDto } from '../models';
-// @ts-ignore
-import { UploadControllerUpload401Response } from '../models';
-/**
- * PostsApi - axios parameter creator
- * @export
- */
-export const PostsApiAxiosParamCreator = function (configuration?: Configuration) {
-    return {
-        /**
-         * 
-         * @summary Создает новую статью.
-         * @param {CreatePostDto} createPostDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postsControllerCreate: async (createPostDto: CreatePostDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'createPostDto' is not null or undefined
-            assertParamExists('postsControllerCreate', 'createPostDto', createPostDto)
-            const localVarPath = `/posts`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(createPostDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает список статей.
-         * @param {PaginationDto} [pagination] 
-         * @param {PostsSortingDto} [sorting] 
-         * @param {string} [title] 
-         * @param {boolean} [published] 
-         * @param {Array<string>} [categories] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postsControllerFind: async (pagination?: PaginationDto, sorting?: PostsSortingDto, title?: string, published?: boolean, categories?: Array<string>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            const localVarPath = `/posts`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-            if (pagination !== undefined) {
-                localVarQueryParameter['pagination'] = pagination;
-            }
-
-            if (sorting !== undefined) {
-                localVarQueryParameter['sorting'] = sorting;
-            }
-
-            if (title !== undefined) {
-                localVarQueryParameter['title'] = title;
-            }
-
-            if (published !== undefined) {
-                localVarQueryParameter['published'] = published;
-            }
-
-            if (categories) {
-                localVarQueryParameter['categories'] = categories;
-            }
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает указанную статью.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postsControllerFindOne: async (id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('postsControllerFindOne', 'id', id)
-            const localVarPath = `/posts/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Удаляет указанную статью.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postsControllerRemove: async (id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('postsControllerRemove', 'id', id)
-            const localVarPath = `/posts/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Обновляет указанную статью.
-         * @param {string} id 
-         * @param {UpdatePostDto} updatePostDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postsControllerUpdate: async (id: string, updatePostDto: UpdatePostDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('postsControllerUpdate', 'id', id)
-            // verify required parameter 'updatePostDto' is not null or undefined
-            assertParamExists('postsControllerUpdate', 'updatePostDto', updatePostDto)
-            const localVarPath = `/posts/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(updatePostDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-    }
-};
-
-/**
- * PostsApi - functional programming interface
- * @export
- */
-export const PostsApiFp = function(configuration?: Configuration) {
-    const localVarAxiosParamCreator = PostsApiAxiosParamCreator(configuration)
-    return {
-        /**
-         * 
-         * @summary Создает новую статью.
-         * @param {CreatePostDto} createPostDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async postsControllerCreate(createPostDto: CreatePostDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostPreviewEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.postsControllerCreate(createPostDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает список статей.
-         * @param {PaginationDto} [pagination] 
-         * @param {PostsSortingDto} [sorting] 
-         * @param {string} [title] 
-         * @param {boolean} [published] 
-         * @param {Array<string>} [categories] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async postsControllerFind(pagination?: PaginationDto, sorting?: PostsSortingDto, title?: string, published?: boolean, categories?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostsControllerFind200Response>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.postsControllerFind(pagination, sorting, title, published, categories, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает указанную статью.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async postsControllerFindOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.postsControllerFindOne(id, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Удаляет указанную статью.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async postsControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostPreviewEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.postsControllerRemove(id, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Обновляет указанную статью.
-         * @param {string} id 
-         * @param {UpdatePostDto} updatePostDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async postsControllerUpdate(id: string, updatePostDto: UpdatePostDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PostPreviewEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.postsControllerUpdate(id, updatePostDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-    }
-};
-
-/**
- * PostsApi - factory interface
- * @export
- */
-export const PostsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
-    const localVarFp = PostsApiFp(configuration)
-    return {
-        /**
-         * 
-         * @summary Создает новую статью.
-         * @param {PostsApiPostsControllerCreateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postsControllerCreate(requestParameters: PostsApiPostsControllerCreateRequest, options?: AxiosRequestConfig): AxiosPromise<PostPreviewEntity> {
-            return localVarFp.postsControllerCreate(requestParameters.createPostDto, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает список статей.
-         * @param {PostsApiPostsControllerFindRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postsControllerFind(requestParameters: PostsApiPostsControllerFindRequest = {}, options?: AxiosRequestConfig): AxiosPromise<PostsControllerFind200Response> {
-            return localVarFp.postsControllerFind(requestParameters.pagination, requestParameters.sorting, requestParameters.title, requestParameters.published, requestParameters.categories, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает указанную статью.
-         * @param {PostsApiPostsControllerFindOneRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postsControllerFindOne(requestParameters: PostsApiPostsControllerFindOneRequest, options?: AxiosRequestConfig): AxiosPromise<PostEntity> {
-            return localVarFp.postsControllerFindOne(requestParameters.id, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Удаляет указанную статью.
-         * @param {PostsApiPostsControllerRemoveRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postsControllerRemove(requestParameters: PostsApiPostsControllerRemoveRequest, options?: AxiosRequestConfig): AxiosPromise<PostPreviewEntity> {
-            return localVarFp.postsControllerRemove(requestParameters.id, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Обновляет указанную статью.
-         * @param {PostsApiPostsControllerUpdateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        postsControllerUpdate(requestParameters: PostsApiPostsControllerUpdateRequest, options?: AxiosRequestConfig): AxiosPromise<PostPreviewEntity> {
-            return localVarFp.postsControllerUpdate(requestParameters.id, requestParameters.updatePostDto, options).then((request) => request(axios, basePath));
-        },
-    };
-};
-
-/**
- * Request parameters for postsControllerCreate operation in PostsApi.
- * @export
- * @interface PostsApiPostsControllerCreateRequest
- */
-export interface PostsApiPostsControllerCreateRequest {
-    /**
-     * 
-     * @type {CreatePostDto}
-     * @memberof PostsApiPostsControllerCreate
-     */
-    readonly createPostDto: CreatePostDto
-}
-
-/**
- * Request parameters for postsControllerFind operation in PostsApi.
- * @export
- * @interface PostsApiPostsControllerFindRequest
- */
-export interface PostsApiPostsControllerFindRequest {
-    /**
-     * 
-     * @type {PaginationDto}
-     * @memberof PostsApiPostsControllerFind
-     */
-    readonly pagination?: PaginationDto
-
-    /**
-     * 
-     * @type {PostsSortingDto}
-     * @memberof PostsApiPostsControllerFind
-     */
-    readonly sorting?: PostsSortingDto
-
-    /**
-     * 
-     * @type {string}
-     * @memberof PostsApiPostsControllerFind
-     */
-    readonly title?: string
-
-    /**
-     * 
-     * @type {boolean}
-     * @memberof PostsApiPostsControllerFind
-     */
-    readonly published?: boolean
-
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof PostsApiPostsControllerFind
-     */
-    readonly categories?: Array<string>
-}
-
-/**
- * Request parameters for postsControllerFindOne operation in PostsApi.
- * @export
- * @interface PostsApiPostsControllerFindOneRequest
- */
-export interface PostsApiPostsControllerFindOneRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof PostsApiPostsControllerFindOne
-     */
-    readonly id: string
-}
-
-/**
- * Request parameters for postsControllerRemove operation in PostsApi.
- * @export
- * @interface PostsApiPostsControllerRemoveRequest
- */
-export interface PostsApiPostsControllerRemoveRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof PostsApiPostsControllerRemove
-     */
-    readonly id: string
-}
-
-/**
- * Request parameters for postsControllerUpdate operation in PostsApi.
- * @export
- * @interface PostsApiPostsControllerUpdateRequest
- */
-export interface PostsApiPostsControllerUpdateRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof PostsApiPostsControllerUpdate
-     */
-    readonly id: string
-
-    /**
-     * 
-     * @type {UpdatePostDto}
-     * @memberof PostsApiPostsControllerUpdate
-     */
-    readonly updatePostDto: UpdatePostDto
-}
-
-/**
- * PostsApi - object-oriented interface
- * @export
- * @class PostsApi
- * @extends {BaseAPI}
- */
-export class PostsApi extends BaseAPI {
-    /**
-     * 
-     * @summary Создает новую статью.
-     * @param {PostsApiPostsControllerCreateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PostsApi
-     */
-    public postsControllerCreate(requestParameters: PostsApiPostsControllerCreateRequest, options?: AxiosRequestConfig) {
-        return PostsApiFp(this.configuration).postsControllerCreate(requestParameters.createPostDto, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает список статей.
-     * @param {PostsApiPostsControllerFindRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PostsApi
-     */
-    public postsControllerFind(requestParameters: PostsApiPostsControllerFindRequest = {}, options?: AxiosRequestConfig) {
-        return PostsApiFp(this.configuration).postsControllerFind(requestParameters.pagination, requestParameters.sorting, requestParameters.title, requestParameters.published, requestParameters.categories, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает указанную статью.
-     * @param {PostsApiPostsControllerFindOneRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PostsApi
-     */
-    public postsControllerFindOne(requestParameters: PostsApiPostsControllerFindOneRequest, options?: AxiosRequestConfig) {
-        return PostsApiFp(this.configuration).postsControllerFindOne(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Удаляет указанную статью.
-     * @param {PostsApiPostsControllerRemoveRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PostsApi
-     */
-    public postsControllerRemove(requestParameters: PostsApiPostsControllerRemoveRequest, options?: AxiosRequestConfig) {
-        return PostsApiFp(this.configuration).postsControllerRemove(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Обновляет указанную статью.
-     * @param {PostsApiPostsControllerUpdateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PostsApi
-     */
-    public postsControllerUpdate(requestParameters: PostsApiPostsControllerUpdateRequest, options?: AxiosRequestConfig) {
-        return PostsApiFp(this.configuration).postsControllerUpdate(requestParameters.id, requestParameters.updatePostDto, options).then((request) => request(this.axios, this.basePath));
-    }
-}
Index: src/services/api/api/public-api.ts
===================================================================
diff --git a/src/services/api/api/public-api.ts b/src/services/api/api/public-api.ts
deleted file mode 100644
--- a/src/services/api/api/public-api.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,430 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-import type { Configuration } from '../configuration';
-import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
-import globalAxios from 'axios';
-// Some imports not used depending on template conditions
-// @ts-ignore
-import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
-// @ts-ignore
-import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
-// @ts-ignore
-import { FiltersDto } from '../models';
-// @ts-ignore
-import { GetBuildingsResultDto } from '../models';
-// @ts-ignore
-import { PaginationDto } from '../models';
-// @ts-ignore
-import { PostsSortingDto } from '../models';
-// @ts-ignore
-import { PublicControllerFindOne404Response } from '../models';
-// @ts-ignore
-import { PublicControllerPosts200Response } from '../models';
-// @ts-ignore
-import { PublicPostEntity } from '../models';
-/**
- * PublicApi - axios parameter creator
- * @export
- */
-export const PublicApiAxiosParamCreator = function (configuration?: Configuration) {
-    return {
-        /**
-         * 
-         * @summary Возвращает список партнёрских зданий и бонусов.
-         * @param {Array<string>} [districts] 
-         * @param {Array<string>} [categories] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        publicControllerBuildings: async (districts?: Array<string>, categories?: Array<string>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            const localVarPath = `/public/buildings`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            if (districts) {
-                localVarQueryParameter['districts'] = districts;
-            }
-
-            if (categories) {
-                localVarQueryParameter['categories'] = categories;
-            }
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает список доступных значений для фильтров.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        publicControllerFilters: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            const localVarPath = `/public/filters`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает указанную статью.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        publicControllerFindOne: async (id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('publicControllerFindOne', 'id', id)
-            const localVarPath = `/public/posts/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает список опубликованных статей.
-         * @param {PaginationDto} [pagination] 
-         * @param {PostsSortingDto} [sorting] 
-         * @param {string} [title] 
-         * @param {Array<string>} [categories] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        publicControllerPosts: async (pagination?: PaginationDto, sorting?: PostsSortingDto, title?: string, categories?: Array<string>, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            const localVarPath = `/public/posts`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            if (pagination !== undefined) {
-                localVarQueryParameter['pagination'] = pagination;
-            }
-
-            if (sorting !== undefined) {
-                localVarQueryParameter['sorting'] = sorting;
-            }
-
-            if (title !== undefined) {
-                localVarQueryParameter['title'] = title;
-            }
-
-            if (categories) {
-                localVarQueryParameter['categories'] = categories;
-            }
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-    }
-};
-
-/**
- * PublicApi - functional programming interface
- * @export
- */
-export const PublicApiFp = function(configuration?: Configuration) {
-    const localVarAxiosParamCreator = PublicApiAxiosParamCreator(configuration)
-    return {
-        /**
-         * 
-         * @summary Возвращает список партнёрских зданий и бонусов.
-         * @param {Array<string>} [districts] 
-         * @param {Array<string>} [categories] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async publicControllerBuildings(districts?: Array<string>, categories?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBuildingsResultDto>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.publicControllerBuildings(districts, categories, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает список доступных значений для фильтров.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async publicControllerFilters(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FiltersDto>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.publicControllerFilters(options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает указанную статью.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async publicControllerFindOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PublicPostEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.publicControllerFindOne(id, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает список опубликованных статей.
-         * @param {PaginationDto} [pagination] 
-         * @param {PostsSortingDto} [sorting] 
-         * @param {string} [title] 
-         * @param {Array<string>} [categories] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async publicControllerPosts(pagination?: PaginationDto, sorting?: PostsSortingDto, title?: string, categories?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<PublicControllerPosts200Response>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.publicControllerPosts(pagination, sorting, title, categories, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-    }
-};
-
-/**
- * PublicApi - factory interface
- * @export
- */
-export const PublicApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
-    const localVarFp = PublicApiFp(configuration)
-    return {
-        /**
-         * 
-         * @summary Возвращает список партнёрских зданий и бонусов.
-         * @param {PublicApiPublicControllerBuildingsRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        publicControllerBuildings(requestParameters: PublicApiPublicControllerBuildingsRequest = {}, options?: AxiosRequestConfig): AxiosPromise<GetBuildingsResultDto> {
-            return localVarFp.publicControllerBuildings(requestParameters.districts, requestParameters.categories, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает список доступных значений для фильтров.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        publicControllerFilters(options?: AxiosRequestConfig): AxiosPromise<FiltersDto> {
-            return localVarFp.publicControllerFilters(options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает указанную статью.
-         * @param {PublicApiPublicControllerFindOneRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        publicControllerFindOne(requestParameters: PublicApiPublicControllerFindOneRequest, options?: AxiosRequestConfig): AxiosPromise<PublicPostEntity> {
-            return localVarFp.publicControllerFindOne(requestParameters.id, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает список опубликованных статей.
-         * @param {PublicApiPublicControllerPostsRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        publicControllerPosts(requestParameters: PublicApiPublicControllerPostsRequest = {}, options?: AxiosRequestConfig): AxiosPromise<PublicControllerPosts200Response> {
-            return localVarFp.publicControllerPosts(requestParameters.pagination, requestParameters.sorting, requestParameters.title, requestParameters.categories, options).then((request) => request(axios, basePath));
-        },
-    };
-};
-
-/**
- * Request parameters for publicControllerBuildings operation in PublicApi.
- * @export
- * @interface PublicApiPublicControllerBuildingsRequest
- */
-export interface PublicApiPublicControllerBuildingsRequest {
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof PublicApiPublicControllerBuildings
-     */
-    readonly districts?: Array<string>
-
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof PublicApiPublicControllerBuildings
-     */
-    readonly categories?: Array<string>
-}
-
-/**
- * Request parameters for publicControllerFindOne operation in PublicApi.
- * @export
- * @interface PublicApiPublicControllerFindOneRequest
- */
-export interface PublicApiPublicControllerFindOneRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicApiPublicControllerFindOne
-     */
-    readonly id: string
-}
-
-/**
- * Request parameters for publicControllerPosts operation in PublicApi.
- * @export
- * @interface PublicApiPublicControllerPostsRequest
- */
-export interface PublicApiPublicControllerPostsRequest {
-    /**
-     * 
-     * @type {PaginationDto}
-     * @memberof PublicApiPublicControllerPosts
-     */
-    readonly pagination?: PaginationDto
-
-    /**
-     * 
-     * @type {PostsSortingDto}
-     * @memberof PublicApiPublicControllerPosts
-     */
-    readonly sorting?: PostsSortingDto
-
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicApiPublicControllerPosts
-     */
-    readonly title?: string
-
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof PublicApiPublicControllerPosts
-     */
-    readonly categories?: Array<string>
-}
-
-/**
- * PublicApi - object-oriented interface
- * @export
- * @class PublicApi
- * @extends {BaseAPI}
- */
-export class PublicApi extends BaseAPI {
-    /**
-     * 
-     * @summary Возвращает список партнёрских зданий и бонусов.
-     * @param {PublicApiPublicControllerBuildingsRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PublicApi
-     */
-    public publicControllerBuildings(requestParameters: PublicApiPublicControllerBuildingsRequest = {}, options?: AxiosRequestConfig) {
-        return PublicApiFp(this.configuration).publicControllerBuildings(requestParameters.districts, requestParameters.categories, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает список доступных значений для фильтров.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PublicApi
-     */
-    public publicControllerFilters(options?: AxiosRequestConfig) {
-        return PublicApiFp(this.configuration).publicControllerFilters(options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает указанную статью.
-     * @param {PublicApiPublicControllerFindOneRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PublicApi
-     */
-    public publicControllerFindOne(requestParameters: PublicApiPublicControllerFindOneRequest, options?: AxiosRequestConfig) {
-        return PublicApiFp(this.configuration).publicControllerFindOne(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает список опубликованных статей.
-     * @param {PublicApiPublicControllerPostsRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PublicApi
-     */
-    public publicControllerPosts(requestParameters: PublicApiPublicControllerPostsRequest = {}, options?: AxiosRequestConfig) {
-        return PublicApiFp(this.configuration).publicControllerPosts(requestParameters.pagination, requestParameters.sorting, requestParameters.title, requestParameters.categories, options).then((request) => request(this.axios, this.basePath));
-    }
-}
Index: src/services/api/api/public-buildings-api.ts
===================================================================
diff --git a/src/services/api/api/public-buildings-api.ts b/src/services/api/api/public-buildings-api.ts
deleted file mode 100644
--- a/src/services/api/api/public-buildings-api.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,121 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Пожликбез APIирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: kurskatm@gmail.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-import type { Configuration } from '../configuration';
-import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
-import globalAxios from 'axios';
-// Some imports not used depending on template conditions
-// @ts-ignore
-import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
-// @ts-ignore
-import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
-// @ts-ignore
-import { BuildingsArrayInner } from '../models';
-/**
- * PublicBuildingsApi - axios parameter creator
- * @export
- */
-export const PublicBuildingsApiAxiosParamCreator = function (configuration?: Configuration) {
-    return {
-        /**
-         * 
-         * @summary Возвращает список заведений от координат.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        publicControllerFindAll: async (options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            const localVarPath = `/buildings`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-    }
-};
-
-/**
- * PublicBuildingsApi - functional programming interface
- * @export
- */
-export const PublicBuildingsApiFp = function(configuration?: Configuration) {
-    const localVarAxiosParamCreator = PublicBuildingsApiAxiosParamCreator(configuration)
-    return {
-        /**
-         * 
-         * @summary Возвращает список заведений от координат.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async publicControllerFindAll(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<BuildingsArrayInner>>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.publicControllerFindAll(options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-    }
-};
-
-/**
- * PublicBuildingsApi - factory interface
- * @export
- */
-export const PublicBuildingsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
-    const localVarFp = PublicBuildingsApiFp(configuration)
-    return {
-        /**
-         * 
-         * @summary Возвращает список заведений от координат.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        publicControllerFindAll(options?: AxiosRequestConfig): AxiosPromise<Array<BuildingsArrayInner>> {
-            return localVarFp.publicControllerFindAll(options).then((request) => request(axios, basePath));
-        },
-    };
-};
-
-/**
- * PublicBuildingsApi - object-oriented interface
- * @export
- * @class PublicBuildingsApi
- * @extends {BaseAPI}
- */
-export class PublicBuildingsApi extends BaseAPI {
-    /**
-     * 
-     * @summary Возвращает список заведений от координат.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof PublicBuildingsApi
-     */
-    public publicControllerFindAll(options?: AxiosRequestConfig) {
-        return PublicBuildingsApiFp(this.configuration).publicControllerFindAll(options).then((request) => request(this.axios, this.basePath));
-    }
-}
Index: src/services/api/api/users-api.ts
===================================================================
diff --git a/src/services/api/api/users-api.ts b/src/services/api/api/users-api.ts
deleted file mode 100644
--- a/src/services/api/api/users-api.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,528 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-import type { Configuration } from '../configuration';
-import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
-import globalAxios from 'axios';
-// Some imports not used depending on template conditions
-// @ts-ignore
-import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from '../common';
-// @ts-ignore
-import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
-// @ts-ignore
-import { CreateUserDto } from '../models';
-// @ts-ignore
-import { PartnersControllerFind400Response } from '../models';
-// @ts-ignore
-import { PartnersControllerFind403Response } from '../models';
-// @ts-ignore
-import { UpdateUserDto } from '../models';
-// @ts-ignore
-import { UploadControllerUpload401Response } from '../models';
-// @ts-ignore
-import { UserEntity } from '../models';
-// @ts-ignore
-import { UsersControllerFindOne404Response } from '../models';
-/**
- * UsersApi - axios parameter creator
- * @export
- */
-export const UsersApiAxiosParamCreator = function (configuration?: Configuration) {
-    return {
-        /**
-         * 
-         * @summary Создает нового пользователя.
-         * @param {CreateUserDto} createUserDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        usersControllerCreate: async (createUserDto: CreateUserDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'createUserDto' is not null or undefined
-            assertParamExists('usersControllerCreate', 'createUserDto', createUserDto)
-            const localVarPath = `/users`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(createUserDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает список пользователей.
-         * @param {number} [page] 
-         * @param {number} [pageSize] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        usersControllerFind: async (page?: number, pageSize?: number, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            const localVarPath = `/users`;
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-            if (page !== undefined) {
-                localVarQueryParameter['page'] = page;
-            }
-
-            if (pageSize !== undefined) {
-                localVarQueryParameter['page_size'] = pageSize;
-            }
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Возвращает указанного пользователя.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        usersControllerFindOne: async (id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('usersControllerFindOne', 'id', id)
-            const localVarPath = `/users/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Удаляет указанного пользователя.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        usersControllerRemove: async (id: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('usersControllerRemove', 'id', id)
-            const localVarPath = `/users/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-        /**
-         * 
-         * @summary Обновляет указанного пользователя.
-         * @param {string} id 
-         * @param {UpdateUserDto} updateUserDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        usersControllerUpdate: async (id: string, updateUserDto: UpdateUserDto, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
-            // verify required parameter 'id' is not null or undefined
-            assertParamExists('usersControllerUpdate', 'id', id)
-            // verify required parameter 'updateUserDto' is not null or undefined
-            assertParamExists('usersControllerUpdate', 'updateUserDto', updateUserDto)
-            const localVarPath = `/users/{id}`
-                .replace(`{${"id"}}`, encodeURIComponent(String(id)));
-            // use dummy base URL string because the URL constructor only accepts absolute URLs.
-            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
-            let baseOptions;
-            if (configuration) {
-                baseOptions = configuration.baseOptions;
-            }
-
-            const localVarRequestOptions = { method: 'PATCH', ...baseOptions, ...options};
-            const localVarHeaderParameter = {} as any;
-            const localVarQueryParameter = {} as any;
-
-            // authentication bearer required
-            // http bearer authentication required
-            await setBearerAuthToObject(localVarHeaderParameter, configuration)
-
-
-    
-            localVarHeaderParameter['Content-Type'] = 'application/json';
-
-            setSearchParams(localVarUrlObj, localVarQueryParameter);
-            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
-            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
-            localVarRequestOptions.data = serializeDataIfNeeded(updateUserDto, localVarRequestOptions, configuration)
-
-            return {
-                url: toPathString(localVarUrlObj),
-                options: localVarRequestOptions,
-            };
-        },
-    }
-};
-
-/**
- * UsersApi - functional programming interface
- * @export
- */
-export const UsersApiFp = function(configuration?: Configuration) {
-    const localVarAxiosParamCreator = UsersApiAxiosParamCreator(configuration)
-    return {
-        /**
-         * 
-         * @summary Создает нового пользователя.
-         * @param {CreateUserDto} createUserDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async usersControllerCreate(createUserDto: CreateUserDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.usersControllerCreate(createUserDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает список пользователей.
-         * @param {number} [page] 
-         * @param {number} [pageSize] 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async usersControllerFind(page?: number, pageSize?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<UserEntity>>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.usersControllerFind(page, pageSize, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Возвращает указанного пользователя.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async usersControllerFindOne(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.usersControllerFindOne(id, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Удаляет указанного пользователя.
-         * @param {string} id 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async usersControllerRemove(id: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.usersControllerRemove(id, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-        /**
-         * 
-         * @summary Обновляет указанного пользователя.
-         * @param {string} id 
-         * @param {UpdateUserDto} updateUserDto 
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        async usersControllerUpdate(id: string, updateUserDto: UpdateUserDto, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserEntity>> {
-            const localVarAxiosArgs = await localVarAxiosParamCreator.usersControllerUpdate(id, updateUserDto, options);
-            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
-        },
-    }
-};
-
-/**
- * UsersApi - factory interface
- * @export
- */
-export const UsersApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
-    const localVarFp = UsersApiFp(configuration)
-    return {
-        /**
-         * 
-         * @summary Создает нового пользователя.
-         * @param {UsersApiUsersControllerCreateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        usersControllerCreate(requestParameters: UsersApiUsersControllerCreateRequest, options?: AxiosRequestConfig): AxiosPromise<UserEntity> {
-            return localVarFp.usersControllerCreate(requestParameters.createUserDto, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает список пользователей.
-         * @param {UsersApiUsersControllerFindRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        usersControllerFind(requestParameters: UsersApiUsersControllerFindRequest = {}, options?: AxiosRequestConfig): AxiosPromise<Array<UserEntity>> {
-            return localVarFp.usersControllerFind(requestParameters.page, requestParameters.pageSize, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Возвращает указанного пользователя.
-         * @param {UsersApiUsersControllerFindOneRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        usersControllerFindOne(requestParameters: UsersApiUsersControllerFindOneRequest, options?: AxiosRequestConfig): AxiosPromise<UserEntity> {
-            return localVarFp.usersControllerFindOne(requestParameters.id, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Удаляет указанного пользователя.
-         * @param {UsersApiUsersControllerRemoveRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        usersControllerRemove(requestParameters: UsersApiUsersControllerRemoveRequest, options?: AxiosRequestConfig): AxiosPromise<void> {
-            return localVarFp.usersControllerRemove(requestParameters.id, options).then((request) => request(axios, basePath));
-        },
-        /**
-         * 
-         * @summary Обновляет указанного пользователя.
-         * @param {UsersApiUsersControllerUpdateRequest} requestParameters Request parameters.
-         * @param {*} [options] Override http request option.
-         * @throws {RequiredError}
-         */
-        usersControllerUpdate(requestParameters: UsersApiUsersControllerUpdateRequest, options?: AxiosRequestConfig): AxiosPromise<UserEntity> {
-            return localVarFp.usersControllerUpdate(requestParameters.id, requestParameters.updateUserDto, options).then((request) => request(axios, basePath));
-        },
-    };
-};
-
-/**
- * Request parameters for usersControllerCreate operation in UsersApi.
- * @export
- * @interface UsersApiUsersControllerCreateRequest
- */
-export interface UsersApiUsersControllerCreateRequest {
-    /**
-     * 
-     * @type {CreateUserDto}
-     * @memberof UsersApiUsersControllerCreate
-     */
-    readonly createUserDto: CreateUserDto
-}
-
-/**
- * Request parameters for usersControllerFind operation in UsersApi.
- * @export
- * @interface UsersApiUsersControllerFindRequest
- */
-export interface UsersApiUsersControllerFindRequest {
-    /**
-     * 
-     * @type {number}
-     * @memberof UsersApiUsersControllerFind
-     */
-    readonly page?: number
-
-    /**
-     * 
-     * @type {number}
-     * @memberof UsersApiUsersControllerFind
-     */
-    readonly pageSize?: number
-}
-
-/**
- * Request parameters for usersControllerFindOne operation in UsersApi.
- * @export
- * @interface UsersApiUsersControllerFindOneRequest
- */
-export interface UsersApiUsersControllerFindOneRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof UsersApiUsersControllerFindOne
-     */
-    readonly id: string
-}
-
-/**
- * Request parameters for usersControllerRemove operation in UsersApi.
- * @export
- * @interface UsersApiUsersControllerRemoveRequest
- */
-export interface UsersApiUsersControllerRemoveRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof UsersApiUsersControllerRemove
-     */
-    readonly id: string
-}
-
-/**
- * Request parameters for usersControllerUpdate operation in UsersApi.
- * @export
- * @interface UsersApiUsersControllerUpdateRequest
- */
-export interface UsersApiUsersControllerUpdateRequest {
-    /**
-     * 
-     * @type {string}
-     * @memberof UsersApiUsersControllerUpdate
-     */
-    readonly id: string
-
-    /**
-     * 
-     * @type {UpdateUserDto}
-     * @memberof UsersApiUsersControllerUpdate
-     */
-    readonly updateUserDto: UpdateUserDto
-}
-
-/**
- * UsersApi - object-oriented interface
- * @export
- * @class UsersApi
- * @extends {BaseAPI}
- */
-export class UsersApi extends BaseAPI {
-    /**
-     * 
-     * @summary Создает нового пользователя.
-     * @param {UsersApiUsersControllerCreateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof UsersApi
-     */
-    public usersControllerCreate(requestParameters: UsersApiUsersControllerCreateRequest, options?: AxiosRequestConfig) {
-        return UsersApiFp(this.configuration).usersControllerCreate(requestParameters.createUserDto, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает список пользователей.
-     * @param {UsersApiUsersControllerFindRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof UsersApi
-     */
-    public usersControllerFind(requestParameters: UsersApiUsersControllerFindRequest = {}, options?: AxiosRequestConfig) {
-        return UsersApiFp(this.configuration).usersControllerFind(requestParameters.page, requestParameters.pageSize, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Возвращает указанного пользователя.
-     * @param {UsersApiUsersControllerFindOneRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof UsersApi
-     */
-    public usersControllerFindOne(requestParameters: UsersApiUsersControllerFindOneRequest, options?: AxiosRequestConfig) {
-        return UsersApiFp(this.configuration).usersControllerFindOne(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Удаляет указанного пользователя.
-     * @param {UsersApiUsersControllerRemoveRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof UsersApi
-     */
-    public usersControllerRemove(requestParameters: UsersApiUsersControllerRemoveRequest, options?: AxiosRequestConfig) {
-        return UsersApiFp(this.configuration).usersControllerRemove(requestParameters.id, options).then((request) => request(this.axios, this.basePath));
-    }
-
-    /**
-     * 
-     * @summary Обновляет указанного пользователя.
-     * @param {UsersApiUsersControllerUpdateRequest} requestParameters Request parameters.
-     * @param {*} [options] Override http request option.
-     * @throws {RequiredError}
-     * @memberof UsersApi
-     */
-    public usersControllerUpdate(requestParameters: UsersApiUsersControllerUpdateRequest, options?: AxiosRequestConfig) {
-        return UsersApiFp(this.configuration).usersControllerUpdate(requestParameters.id, requestParameters.updateUserDto, options).then((request) => request(this.axios, this.basePath));
-    }
-}
Index: src/services/api/apiAdapter.ts
===================================================================
diff --git a/src/services/api/apiAdapter.ts b/src/services/api/apiAdapter.ts
deleted file mode 100644
--- a/src/services/api/apiAdapter.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,38 +0,0 @@
-import globalAxios, { AxiosError } from 'axios';
-import { API_URL } from 'shared/config/api';
-
-import { BuildingsApi } from './api/buildings-api';
-import { PartnersApi } from './api/partners-api';
-
-type GetToken = (resource?: string | undefined) => Promise<string | undefined>;
-
-export class Api {
-  partners: PartnersApi = new PartnersApi();
-  building: BuildingsApi = new BuildingsApi();
-
-  getAccessToken: GetToken;
-
-  constructor(getAccessToken: GetToken) {
-    this.getAccessToken = getAccessToken;
-    this.setDefaults();
-  }
-
-  private setDefaults = () => {
-    globalAxios.interceptors.response.use(
-      (config) => config,
-      (error: AxiosError<any>) => {
-        throw error;
-      },
-    );
-    globalAxios.interceptors.request.use(
-      async (config) => {
-        const token = await this.getAccessToken(API_URL);
-        config.headers.setAuthorization(`Bearer ${token}`, true);
-        return config;
-      },
-      (error) => {
-        Promise.reject(error);
-      },
-    );
-  };
-}
Index: src/services/api/apis/DefaultApi.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/apis/DefaultApi.ts b/src/services/api/apis/DefaultApi.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/apis/DefaultApi.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,630 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ *
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import * as runtime from '../runtime';
+import type {
+  CreateObjectDto,
+  CreateOwnerDto,
+  ObjectEntity,
+  ObjectsControllerAddOwner400Response,
+  ObjectsControllerFind200Response,
+  ObjectsControllerFind401Response,
+  ObjectsControllerFindOne404Response,
+  ObjectsControllerGetOwners200Response,
+  ObjectsControllerRemoveOwner400Response,
+  ObjectsControllerRemoveOwner404Response,
+  OwnerEntity,
+  UpdateObjectDto,
+} from '../models';
+import {
+  CreateObjectDtoFromJSON,
+  CreateObjectDtoToJSON,
+  CreateOwnerDtoFromJSON,
+  CreateOwnerDtoToJSON,
+  ObjectEntityFromJSON,
+  ObjectEntityToJSON,
+  ObjectsControllerAddOwner400ResponseFromJSON,
+  ObjectsControllerAddOwner400ResponseToJSON,
+  ObjectsControllerFind200ResponseFromJSON,
+  ObjectsControllerFind200ResponseToJSON,
+  ObjectsControllerFind401ResponseFromJSON,
+  ObjectsControllerFind401ResponseToJSON,
+  ObjectsControllerFindOne404ResponseFromJSON,
+  ObjectsControllerFindOne404ResponseToJSON,
+  ObjectsControllerGetOwners200ResponseFromJSON,
+  ObjectsControllerGetOwners200ResponseToJSON,
+  ObjectsControllerRemoveOwner400ResponseFromJSON,
+  ObjectsControllerRemoveOwner400ResponseToJSON,
+  ObjectsControllerRemoveOwner404ResponseFromJSON,
+  ObjectsControllerRemoveOwner404ResponseToJSON,
+  OwnerEntityFromJSON,
+  OwnerEntityToJSON,
+  UpdateObjectDtoFromJSON,
+  UpdateObjectDtoToJSON,
+} from '../models';
+
+export interface ObjectsControllerAddOwnerRequest {
+  objectId: number;
+  createOwnerDto: CreateOwnerDto;
+}
+
+export interface ObjectsControllerCreateRequest {
+  createObjectDto: CreateObjectDto;
+}
+
+export interface ObjectsControllerFindRequest {
+  skip?: number;
+  take?: number;
+}
+
+export interface ObjectsControllerFindOneRequest {
+  id: number;
+}
+
+export interface ObjectsControllerGetOwnersRequest {
+  objectId: number;
+  skip?: number;
+  take?: number;
+}
+
+export interface ObjectsControllerRemoveRequest {
+  id: number;
+}
+
+export interface ObjectsControllerRemoveOwnerRequest {
+  objectId: number;
+  id: string;
+}
+
+export interface ObjectsControllerUpdateRequest {
+  id: number;
+  updateObjectDto: UpdateObjectDto;
+}
+
+export interface ProfileControllerCreateRequest {
+  username?: string;
+  primaryEmail?: string;
+  primaryPhone?: string;
+  name?: string;
+  avatar?: any;
+}
+
+/**
+ *
+ */
+export class DefaultApi extends runtime.BaseAPI {
+  /**
+   * Добавляет владельца к объекту.
+   */
+  async objectsControllerAddOwnerRaw(
+    requestParameters: ObjectsControllerAddOwnerRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<runtime.ApiResponse<OwnerEntity>> {
+    if (requestParameters.objectId === null || requestParameters.objectId === undefined) {
+      throw new runtime.RequiredError(
+        'objectId',
+        'Required parameter requestParameters.objectId was null or undefined when calling objectsControllerAddOwner.',
+      );
+    }
+
+    if (requestParameters.createOwnerDto === null || requestParameters.createOwnerDto === undefined) {
+      throw new runtime.RequiredError(
+        'createOwnerDto',
+        'Required parameter requestParameters.createOwnerDto was null or undefined when calling objectsControllerAddOwner.',
+      );
+    }
+
+    const queryParameters: any = {};
+
+    const headerParameters: runtime.HTTPHeaders = {};
+
+    headerParameters['Content-Type'] = 'application/json';
+
+    if (this.configuration && this.configuration.accessToken) {
+      const token = this.configuration.accessToken;
+      const tokenString = await token('bearer', []);
+
+      if (tokenString) {
+        headerParameters['Authorization'] = `Bearer ${tokenString}`;
+      }
+    }
+    const response = await this.request(
+      {
+        path: `/api/objects/{objectId}/owners`.replace(
+          `{${'objectId'}}`,
+          encodeURIComponent(String(requestParameters.objectId)),
+        ),
+        method: 'POST',
+        headers: headerParameters,
+        query: queryParameters,
+        body: CreateOwnerDtoToJSON(requestParameters.createOwnerDto),
+      },
+      initOverrides,
+    );
+
+    return new runtime.JSONApiResponse(response, (jsonValue) => OwnerEntityFromJSON(jsonValue));
+  }
+
+  /**
+   * Добавляет владельца к объекту.
+   */
+  async objectsControllerAddOwner(
+    requestParameters: ObjectsControllerAddOwnerRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<OwnerEntity> {
+    const response = await this.objectsControllerAddOwnerRaw(requestParameters, initOverrides);
+    return await response.value();
+  }
+
+  /**
+   * Создает объект.
+   */
+  async objectsControllerCreateRaw(
+    requestParameters: ObjectsControllerCreateRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<runtime.ApiResponse<ObjectEntity>> {
+    if (requestParameters.createObjectDto === null || requestParameters.createObjectDto === undefined) {
+      throw new runtime.RequiredError(
+        'createObjectDto',
+        'Required parameter requestParameters.createObjectDto was null or undefined when calling objectsControllerCreate.',
+      );
+    }
+
+    const queryParameters: any = {};
+
+    const headerParameters: runtime.HTTPHeaders = {};
+
+    headerParameters['Content-Type'] = 'application/json';
+
+    if (this.configuration && this.configuration.accessToken) {
+      const token = this.configuration.accessToken;
+      const tokenString = await token('bearer', []);
+
+      if (tokenString) {
+        headerParameters['Authorization'] = `Bearer ${tokenString}`;
+      }
+    }
+    const response = await this.request(
+      {
+        path: `/api/objects`,
+        method: 'POST',
+        headers: headerParameters,
+        query: queryParameters,
+        body: CreateObjectDtoToJSON(requestParameters.createObjectDto),
+      },
+      initOverrides,
+    );
+
+    return new runtime.JSONApiResponse(response, (jsonValue) => ObjectEntityFromJSON(jsonValue));
+  }
+
+  /**
+   * Создает объект.
+   */
+  async objectsControllerCreate(
+    requestParameters: ObjectsControllerCreateRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<ObjectEntity> {
+    const response = await this.objectsControllerCreateRaw(requestParameters, initOverrides);
+    return await response.value();
+  }
+
+  /**
+   * Возвращает список объектов.
+   */
+  async objectsControllerFindRaw(
+    requestParameters: ObjectsControllerFindRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<runtime.ApiResponse<ObjectsControllerFind200Response>> {
+    const queryParameters: any = {};
+
+    if (requestParameters.skip !== undefined) {
+      queryParameters['skip'] = requestParameters.skip;
+    }
+
+    if (requestParameters.take !== undefined) {
+      queryParameters['take'] = requestParameters.take;
+    }
+
+    const headerParameters: runtime.HTTPHeaders = {};
+
+    if (this.configuration && this.configuration.accessToken) {
+      const token = this.configuration.accessToken;
+      const tokenString = await token('bearer', []);
+
+      if (tokenString) {
+        headerParameters['Authorization'] = `Bearer ${tokenString}`;
+      }
+    }
+    const response = await this.request(
+      {
+        path: `/api/objects`,
+        method: 'GET',
+        headers: headerParameters,
+        query: queryParameters,
+      },
+      initOverrides,
+    );
+
+    return new runtime.JSONApiResponse(response, (jsonValue) => ObjectsControllerFind200ResponseFromJSON(jsonValue));
+  }
+
+  /**
+   * Возвращает список объектов.
+   */
+  async objectsControllerFind(
+    requestParameters: ObjectsControllerFindRequest = {},
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<ObjectsControllerFind200Response> {
+    const response = await this.objectsControllerFindRaw(requestParameters, initOverrides);
+    return await response.value();
+  }
+
+  /**
+   * Возвращает указанный объект.
+   */
+  async objectsControllerFindOneRaw(
+    requestParameters: ObjectsControllerFindOneRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<runtime.ApiResponse<ObjectEntity>> {
+    if (requestParameters.id === null || requestParameters.id === undefined) {
+      throw new runtime.RequiredError(
+        'id',
+        'Required parameter requestParameters.id was null or undefined when calling objectsControllerFindOne.',
+      );
+    }
+
+    const queryParameters: any = {};
+
+    const headerParameters: runtime.HTTPHeaders = {};
+
+    if (this.configuration && this.configuration.accessToken) {
+      const token = this.configuration.accessToken;
+      const tokenString = await token('bearer', []);
+
+      if (tokenString) {
+        headerParameters['Authorization'] = `Bearer ${tokenString}`;
+      }
+    }
+    const response = await this.request(
+      {
+        path: `/api/objects/{id}`.replace(`{${'id'}}`, encodeURIComponent(String(requestParameters.id))),
+        method: 'GET',
+        headers: headerParameters,
+        query: queryParameters,
+      },
+      initOverrides,
+    );
+
+    return new runtime.JSONApiResponse(response, (jsonValue) => ObjectEntityFromJSON(jsonValue));
+  }
+
+  /**
+   * Возвращает указанный объект.
+   */
+  async objectsControllerFindOne(
+    requestParameters: ObjectsControllerFindOneRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<ObjectEntity> {
+    const response = await this.objectsControllerFindOneRaw(requestParameters, initOverrides);
+    return await response.value();
+  }
+
+  /**
+   * Возвращает владельцев указанного объекта.
+   */
+  async objectsControllerGetOwnersRaw(
+    requestParameters: ObjectsControllerGetOwnersRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<runtime.ApiResponse<ObjectsControllerGetOwners200Response>> {
+    if (requestParameters.objectId === null || requestParameters.objectId === undefined) {
+      throw new runtime.RequiredError(
+        'objectId',
+        'Required parameter requestParameters.objectId was null or undefined when calling objectsControllerGetOwners.',
+      );
+    }
+
+    const queryParameters: any = {};
+
+    if (requestParameters.skip !== undefined) {
+      queryParameters['skip'] = requestParameters.skip;
+    }
+
+    if (requestParameters.take !== undefined) {
+      queryParameters['take'] = requestParameters.take;
+    }
+
+    const headerParameters: runtime.HTTPHeaders = {};
+
+    if (this.configuration && this.configuration.accessToken) {
+      const token = this.configuration.accessToken;
+      const tokenString = await token('bearer', []);
+
+      if (tokenString) {
+        headerParameters['Authorization'] = `Bearer ${tokenString}`;
+      }
+    }
+    const response = await this.request(
+      {
+        path: `/api/objects/{objectId}/owners`.replace(
+          `{${'objectId'}}`,
+          encodeURIComponent(String(requestParameters.objectId)),
+        ),
+        method: 'GET',
+        headers: headerParameters,
+        query: queryParameters,
+      },
+      initOverrides,
+    );
+
+    return new runtime.JSONApiResponse(response, (jsonValue) =>
+      ObjectsControllerGetOwners200ResponseFromJSON(jsonValue),
+    );
+  }
+
+  /**
+   * Возвращает владельцев указанного объекта.
+   */
+  async objectsControllerGetOwners(
+    requestParameters: ObjectsControllerGetOwnersRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<ObjectsControllerGetOwners200Response> {
+    const response = await this.objectsControllerGetOwnersRaw(requestParameters, initOverrides);
+    return await response.value();
+  }
+
+  /**
+   * Удаляет указанный объект.
+   */
+  async objectsControllerRemoveRaw(
+    requestParameters: ObjectsControllerRemoveRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<runtime.ApiResponse<ObjectEntity>> {
+    if (requestParameters.id === null || requestParameters.id === undefined) {
+      throw new runtime.RequiredError(
+        'id',
+        'Required parameter requestParameters.id was null or undefined when calling objectsControllerRemove.',
+      );
+    }
+
+    const queryParameters: any = {};
+
+    const headerParameters: runtime.HTTPHeaders = {};
+
+    if (this.configuration && this.configuration.accessToken) {
+      const token = this.configuration.accessToken;
+      const tokenString = await token('bearer', []);
+
+      if (tokenString) {
+        headerParameters['Authorization'] = `Bearer ${tokenString}`;
+      }
+    }
+    const response = await this.request(
+      {
+        path: `/api/objects/{id}`.replace(`{${'id'}}`, encodeURIComponent(String(requestParameters.id))),
+        method: 'DELETE',
+        headers: headerParameters,
+        query: queryParameters,
+      },
+      initOverrides,
+    );
+
+    return new runtime.JSONApiResponse(response, (jsonValue) => ObjectEntityFromJSON(jsonValue));
+  }
+
+  /**
+   * Удаляет указанный объект.
+   */
+  async objectsControllerRemove(
+    requestParameters: ObjectsControllerRemoveRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<ObjectEntity> {
+    const response = await this.objectsControllerRemoveRaw(requestParameters, initOverrides);
+    return await response.value();
+  }
+
+  /**
+   * Удаляет владельца из объекта.
+   */
+  async objectsControllerRemoveOwnerRaw(
+    requestParameters: ObjectsControllerRemoveOwnerRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<runtime.ApiResponse<OwnerEntity>> {
+    if (requestParameters.objectId === null || requestParameters.objectId === undefined) {
+      throw new runtime.RequiredError(
+        'objectId',
+        'Required parameter requestParameters.objectId was null or undefined when calling objectsControllerRemoveOwner.',
+      );
+    }
+
+    if (requestParameters.id === null || requestParameters.id === undefined) {
+      throw new runtime.RequiredError(
+        'id',
+        'Required parameter requestParameters.id was null or undefined when calling objectsControllerRemoveOwner.',
+      );
+    }
+
+    const queryParameters: any = {};
+
+    const headerParameters: runtime.HTTPHeaders = {};
+
+    if (this.configuration && this.configuration.accessToken) {
+      const token = this.configuration.accessToken;
+      const tokenString = await token('bearer', []);
+
+      if (tokenString) {
+        headerParameters['Authorization'] = `Bearer ${tokenString}`;
+      }
+    }
+    const response = await this.request(
+      {
+        path: `/api/objects/{objectId}/owners/{id}`
+          .replace(`{${'objectId'}}`, encodeURIComponent(String(requestParameters.objectId)))
+          .replace(`{${'id'}}`, encodeURIComponent(String(requestParameters.id))),
+        method: 'DELETE',
+        headers: headerParameters,
+        query: queryParameters,
+      },
+      initOverrides,
+    );
+
+    return new runtime.JSONApiResponse(response, (jsonValue) => OwnerEntityFromJSON(jsonValue));
+  }
+
+  /**
+   * Удаляет владельца из объекта.
+   */
+  async objectsControllerRemoveOwner(
+    requestParameters: ObjectsControllerRemoveOwnerRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<OwnerEntity> {
+    const response = await this.objectsControllerRemoveOwnerRaw(requestParameters, initOverrides);
+    return await response.value();
+  }
+
+  /**
+   * Обновляет указанный объект
+   */
+  async objectsControllerUpdateRaw(
+    requestParameters: ObjectsControllerUpdateRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<runtime.ApiResponse<ObjectEntity>> {
+    if (requestParameters.id === null || requestParameters.id === undefined) {
+      throw new runtime.RequiredError(
+        'id',
+        'Required parameter requestParameters.id was null or undefined when calling objectsControllerUpdate.',
+      );
+    }
+
+    if (requestParameters.updateObjectDto === null || requestParameters.updateObjectDto === undefined) {
+      throw new runtime.RequiredError(
+        'updateObjectDto',
+        'Required parameter requestParameters.updateObjectDto was null or undefined when calling objectsControllerUpdate.',
+      );
+    }
+
+    const queryParameters: any = {};
+
+    const headerParameters: runtime.HTTPHeaders = {};
+
+    headerParameters['Content-Type'] = 'application/json';
+
+    if (this.configuration && this.configuration.accessToken) {
+      const token = this.configuration.accessToken;
+      const tokenString = await token('bearer', []);
+
+      if (tokenString) {
+        headerParameters['Authorization'] = `Bearer ${tokenString}`;
+      }
+    }
+    const response = await this.request(
+      {
+        path: `/api/objects/{id}`.replace(`{${'id'}}`, encodeURIComponent(String(requestParameters.id))),
+        method: 'PATCH',
+        headers: headerParameters,
+        query: queryParameters,
+        body: UpdateObjectDtoToJSON(requestParameters.updateObjectDto),
+      },
+      initOverrides,
+    );
+
+    return new runtime.JSONApiResponse(response, (jsonValue) => ObjectEntityFromJSON(jsonValue));
+  }
+
+  /**
+   * Обновляет указанный объект
+   */
+  async objectsControllerUpdate(
+    requestParameters: ObjectsControllerUpdateRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<ObjectEntity> {
+    const response = await this.objectsControllerUpdateRaw(requestParameters, initOverrides);
+    return await response.value();
+  }
+
+  /**
+   * Обновляет профиль пользователя.
+   */
+  async profileControllerCreateRaw(
+    requestParameters: ProfileControllerCreateRequest,
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<runtime.ApiResponse<void>> {
+    const queryParameters: any = {};
+
+    const headerParameters: runtime.HTTPHeaders = {};
+
+    if (this.configuration && this.configuration.accessToken) {
+      const token = this.configuration.accessToken;
+      const tokenString = await token('bearer', []);
+
+      if (tokenString) {
+        headerParameters['Authorization'] = `Bearer ${tokenString}`;
+      }
+    }
+    const consumes: runtime.Consume[] = [{ contentType: 'multipart/form-data' }];
+    // @ts-ignore: canConsumeForm may be unused
+    const canConsumeForm = runtime.canConsumeForm(consumes);
+
+    let formParams: { append(param: string, value: any): any };
+    let useForm = false;
+    if (useForm) {
+      formParams = new FormData();
+    } else {
+      formParams = new URLSearchParams();
+    }
+
+    if (requestParameters.username !== undefined) {
+      formParams.append('username', requestParameters.username as any);
+    }
+
+    if (requestParameters.primaryEmail !== undefined) {
+      formParams.append('primaryEmail', requestParameters.primaryEmail as any);
+    }
+
+    if (requestParameters.primaryPhone !== undefined) {
+      formParams.append('primaryPhone', requestParameters.primaryPhone as any);
+    }
+
+    if (requestParameters.name !== undefined) {
+      formParams.append('name', requestParameters.name as any);
+    }
+
+    if (requestParameters.avatar !== undefined) {
+      formParams.append('avatar', new Blob(requestParameters.avatar));
+    }
+
+    const response = await this.request(
+      {
+        path: `/api/profile`,
+        method: 'PATCH',
+        headers: headerParameters,
+        query: queryParameters,
+        body: formParams,
+      },
+      initOverrides,
+    );
+
+    return new runtime.VoidApiResponse(response);
+  }
+
+  /**
+   * Обновляет профиль пользователя.
+   */
+  async profileControllerCreate(
+    requestParameters: ProfileControllerCreateRequest = {},
+    initOverrides?: RequestInit | runtime.InitOverrideFunction,
+  ): Promise<void> {
+    await this.profileControllerCreateRaw(requestParameters, initOverrides);
+  }
+}
Index: src/services/api/apis/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/apis/index.ts b/src/services/api/apis/index.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/apis/index.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,3 @@
+/* tslint:disable */
+/* eslint-disable */
+export * from './DefaultApi';
Index: src/services/api/base.ts
===================================================================
diff --git a/src/services/api/base.ts b/src/services/api/base.ts
deleted file mode 100644
--- a/src/services/api/base.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,72 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Пожликбез APIирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: kurskatm@gmail.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-import type { Configuration } from './configuration';
-// Some imports not used depending on template conditions
-// @ts-ignore
-import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
-import globalAxios from 'axios';
-
-export const BASE_PATH = import.meta.env['VITE_API_URL'];
-
-/**
- *
- * @export
- */
-export const COLLECTION_FORMATS = {
-    csv: ",",
-    ssv: " ",
-    tsv: "\t",
-    pipes: "|",
-};
-
-/**
- *
- * @export
- * @interface RequestArgs
- */
-export interface RequestArgs {
-    url: string;
-    options: AxiosRequestConfig;
-}
-
-/**
- *
- * @export
- * @class BaseAPI
- */
-export class BaseAPI {
-    protected configuration: Configuration | undefined;
-
-    constructor(configuration?: Configuration, protected basePath: string = BASE_PATH, protected axios: AxiosInstance = globalAxios) {
-        if (configuration) {
-            this.configuration = configuration;
-            this.basePath = configuration.basePath || this.basePath;
-        }
-    }
-};
-
-/**
- *
- * @export
- * @class RequiredError
- * @extends {Error}
- */
-export class RequiredError extends Error {
-    constructor(public field: string, msg?: string) {
-        super(msg);
-        this.name = "RequiredError"
-    }
-}
Index: src/services/api/common.ts
===================================================================
diff --git a/src/services/api/common.ts b/src/services/api/common.ts
deleted file mode 100644
--- a/src/services/api/common.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,150 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-import type { Configuration } from "./configuration";
-import type { RequestArgs } from "./base";
-import type { AxiosInstance, AxiosResponse } from 'axios';
-import { RequiredError } from "./base";
-
-/**
- *
- * @export
- */
-export const DUMMY_BASE_URL = 'https://example.com'
-
-/**
- *
- * @throws {RequiredError}
- * @export
- */
-export const assertParamExists = function (functionName: string, paramName: string, paramValue: unknown) {
-    if (paramValue === null || paramValue === undefined) {
-        throw new RequiredError(paramName, `Required parameter ${paramName} was null or undefined when calling ${functionName}.`);
-    }
-}
-
-/**
- *
- * @export
- */
-export const setApiKeyToObject = async function (object: any, keyParamName: string, configuration?: Configuration) {
-    if (configuration && configuration.apiKey) {
-        const localVarApiKeyValue = typeof configuration.apiKey === 'function'
-            ? await configuration.apiKey(keyParamName)
-            : await configuration.apiKey;
-        object[keyParamName] = localVarApiKeyValue;
-    }
-}
-
-/**
- *
- * @export
- */
-export const setBasicAuthToObject = function (object: any, configuration?: Configuration) {
-    if (configuration && (configuration.username || configuration.password)) {
-        object["auth"] = { username: configuration.username, password: configuration.password };
-    }
-}
-
-/**
- *
- * @export
- */
-export const setBearerAuthToObject = async function (object: any, configuration?: Configuration) {
-    if (configuration && configuration.accessToken) {
-        const accessToken = typeof configuration.accessToken === 'function'
-            ? await configuration.accessToken()
-            : await configuration.accessToken;
-        object["Authorization"] = "Bearer " + accessToken;
-    }
-}
-
-/**
- *
- * @export
- */
-export const setOAuthToObject = async function (object: any, name: string, scopes: string[], configuration?: Configuration) {
-    if (configuration && configuration.accessToken) {
-        const localVarAccessTokenValue = typeof configuration.accessToken === 'function'
-            ? await configuration.accessToken(name, scopes)
-            : await configuration.accessToken;
-        object["Authorization"] = "Bearer " + localVarAccessTokenValue;
-    }
-}
-
-function setFlattenedQueryParams(urlSearchParams: URLSearchParams, parameter: any, key: string = ""): void {
-    if (parameter == null) return;
-    if (typeof parameter === "object") {
-        if (Array.isArray(parameter)) {
-            (parameter as any[]).forEach(item => setFlattenedQueryParams(urlSearchParams, item, key));
-        } 
-        else {
-            Object.keys(parameter).forEach(currentKey => 
-                setFlattenedQueryParams(urlSearchParams, parameter[currentKey], `${key}${key !== '' ? '.' : ''}${currentKey}`)
-            );
-        }
-    } 
-    else {
-        if (urlSearchParams.has(key)) {
-            urlSearchParams.append(key, parameter);
-        } 
-        else {
-            urlSearchParams.set(key, parameter);
-        }
-    }
-}
-
-/**
- *
- * @export
- */
-export const setSearchParams = function (url: URL, ...objects: any[]) {
-    const searchParams = new URLSearchParams(url.search);
-    setFlattenedQueryParams(searchParams, objects);
-    url.search = searchParams.toString();
-}
-
-/**
- *
- * @export
- */
-export const serializeDataIfNeeded = function (value: any, requestOptions: any, configuration?: Configuration) {
-    const nonString = typeof value !== 'string';
-    const needsSerialization = nonString && configuration && configuration.isJsonMime
-        ? configuration.isJsonMime(requestOptions.headers['Content-Type'])
-        : nonString;
-    return needsSerialization
-        ? JSON.stringify(value !== undefined ? value : {})
-        : (value || "");
-}
-
-/**
- *
- * @export
- */
-export const toPathString = function (url: URL) {
-    return url.pathname + url.search + url.hash
-}
-
-/**
- *
- * @export
- */
-export const createRequestFunction = function (axiosArgs: RequestArgs, globalAxios: AxiosInstance, BASE_PATH: string, configuration?: Configuration) {
-    return <T = unknown, R = AxiosResponse<T>>(axios: AxiosInstance = globalAxios, basePath: string = BASE_PATH) => {
-        const axiosRequestArgs = {...axiosArgs.options, url: (configuration?.basePath || basePath) + axiosArgs.url};
-        return axios.request<T, R>(axiosRequestArgs);
-    };
-}
Index: src/services/api/configuration.ts
===================================================================
diff --git a/src/services/api/configuration.ts b/src/services/api/configuration.ts
deleted file mode 100644
--- a/src/services/api/configuration.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,101 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-export interface ConfigurationParameters {
-    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);
-    username?: string;
-    password?: string;
-    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);
-    basePath?: string;
-    baseOptions?: any;
-    formDataCtor?: new () => any;
-}
-
-export class Configuration {
-    /**
-     * parameter for apiKey security
-     * @param name security name
-     * @memberof Configuration
-     */
-    apiKey?: string | Promise<string> | ((name: string) => string) | ((name: string) => Promise<string>);
-    /**
-     * parameter for basic security
-     *
-     * @type {string}
-     * @memberof Configuration
-     */
-    username?: string;
-    /**
-     * parameter for basic security
-     *
-     * @type {string}
-     * @memberof Configuration
-     */
-    password?: string;
-    /**
-     * parameter for oauth2 security
-     * @param name security name
-     * @param scopes oauth2 scope
-     * @memberof Configuration
-     */
-    accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string) | ((name?: string, scopes?: string[]) => Promise<string>);
-    /**
-     * override base path
-     *
-     * @type {string}
-     * @memberof Configuration
-     */
-    basePath?: string;
-    /**
-     * base options for axios calls
-     *
-     * @type {any}
-     * @memberof Configuration
-     */
-    baseOptions?: any;
-    /**
-     * The FormData constructor that will be used to create multipart form data
-     * requests. You can inject this here so that execution environments that
-     * do not support the FormData class can still run the generated client.
-     *
-     * @type {new () => FormData}
-     */
-    formDataCtor?: new () => any;
-
-    constructor(param: ConfigurationParameters = {}) {
-        this.apiKey = param.apiKey;
-        this.username = param.username;
-        this.password = param.password;
-        this.accessToken = param.accessToken;
-        this.basePath = param.basePath;
-        this.baseOptions = param.baseOptions;
-        this.formDataCtor = param.formDataCtor;
-    }
-
-    /**
-     * Check if the given MIME is a JSON MIME.
-     * JSON MIME examples:
-     *   application/json
-     *   application/json; charset=UTF8
-     *   APPLICATION/JSON
-     *   application/vnd.company+json
-     * @param mime - MIME (Multipurpose Internet Mail Extensions)
-     * @return True if the given MIME is JSON, false otherwise.
-     */
-    public isJsonMime(mime: string): boolean {
-        const jsonMime: RegExp = new RegExp('^(application\/json|[^;/ \t]+\/[^;/ \t]+[+]json)[ \t]*(;.*)?$', 'i');
-        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');
-    }
-}
Index: src/services/api/git_push.sh
===================================================================
diff --git a/src/services/api/git_push.sh b/src/services/api/git_push.sh
deleted file mode 100644
--- a/src/services/api/git_push.sh	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,57 +0,0 @@
-#!/bin/sh
-# ref: https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/
-#
-# Usage example: /bin/sh ./git_push.sh wing328 openapi-petstore-perl "minor update" "gitlab.com"
-
-git_user_id=$1
-git_repo_id=$2
-release_note=$3
-git_host=$4
-
-if [ "$git_host" = "" ]; then
-    git_host="github.com"
-    echo "[INFO] No command line input provided. Set \$git_host to $git_host"
-fi
-
-if [ "$git_user_id" = "" ]; then
-    git_user_id="GIT_USER_ID"
-    echo "[INFO] No command line input provided. Set \$git_user_id to $git_user_id"
-fi
-
-if [ "$git_repo_id" = "" ]; then
-    git_repo_id="GIT_REPO_ID"
-    echo "[INFO] No command line input provided. Set \$git_repo_id to $git_repo_id"
-fi
-
-if [ "$release_note" = "" ]; then
-    release_note="Minor update"
-    echo "[INFO] No command line input provided. Set \$release_note to $release_note"
-fi
-
-# Initialize the local directory as a Git repository
-git init
-
-# Adds the files in the local repository and stages them for commit.
-git add .
-
-# Commits the tracked changes and prepares them to be pushed to a remote repository.
-git commit -m "$release_note"
-
-# Sets the new remote
-git_remote=$(git remote)
-if [ "$git_remote" = "" ]; then # git remote not defined
-
-    if [ "$GIT_TOKEN" = "" ]; then
-        echo "[INFO] \$GIT_TOKEN (environment variable) is not set. Using the git credential in your environment."
-        git remote add origin https://${git_host}/${git_user_id}/${git_repo_id}.git
-    else
-        git remote add origin https://${git_user_id}:"${GIT_TOKEN}"@${git_host}/${git_user_id}/${git_repo_id}.git
-    fi
-
-fi
-
-git pull origin master
-
-# Pushes (Forces) the changes in the local repository up to the remote repository
-echo "Git pushing to https://${git_host}/${git_user_id}/${git_repo_id}.git"
-git push origin master 2>&1 | grep -v 'To https'
Index: src/services/api/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/index.ts b/src/services/api/index.ts
--- a/src/services/api/index.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/services/api/index.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -1,18 +1,5 @@
 /* tslint:disable */
 /* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-export * from "./api";
-export * from "./configuration";
-export * from "./models";
+export * from './runtime';
+export * from './apis';
+export * from './models';
Index: src/services/api/models/CreateObjectDto.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/CreateObjectDto.ts b/src/services/api/models/CreateObjectDto.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/CreateObjectDto.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,183 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+/**
+ * 
+ * @export
+ * @interface CreateObjectDto
+ */
+export interface CreateObjectDto {
+    /**
+     * 
+     * @type {string}
+     * @memberof CreateObjectDto
+     */
+    name: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof CreateObjectDto
+     */
+    sp2type: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof CreateObjectDto
+     */
+    sp2name: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof CreateObjectDto
+     */
+    sp2questions: string;
+    /**
+     * 
+     * @type {number}
+     * @memberof CreateObjectDto
+     */
+    upFloors: number;
+    /**
+     * 
+     * @type {boolean}
+     * @memberof CreateObjectDto
+     */
+    isUnderFloor: boolean;
+    /**
+     * 
+     * @type {number}
+     * @memberof CreateObjectDto
+     */
+    underFloors: number;
+    /**
+     * 
+     * @type {number}
+     * @memberof CreateObjectDto
+     */
+    fireRoomArea: number;
+    /**
+     * 
+     * @type {number}
+     * @memberof CreateObjectDto
+     */
+    tradeArea: number;
+    /**
+     * 
+     * @type {boolean}
+     * @memberof CreateObjectDto
+     */
+    blackTradeRooms: boolean;
+    /**
+     * 
+     * @type {number}
+     * @memberof CreateObjectDto
+     */
+    height: number;
+    /**
+     * 
+     * @type {number}
+     * @memberof CreateObjectDto
+     */
+    volume: number;
+    /**
+     * 
+     * @type {string}
+     * @memberof CreateObjectDto
+     */
+    _class: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof CreateObjectDto
+     */
+    degree: string;
+}
+
+/**
+ * Check if a given object implements the CreateObjectDto interface.
+ */
+export function instanceOfCreateObjectDto(value: object): boolean {
+    let isInstance = true;
+    isInstance = isInstance && "name" in value;
+    isInstance = isInstance && "sp2type" in value;
+    isInstance = isInstance && "sp2name" in value;
+    isInstance = isInstance && "sp2questions" in value;
+    isInstance = isInstance && "upFloors" in value;
+    isInstance = isInstance && "isUnderFloor" in value;
+    isInstance = isInstance && "underFloors" in value;
+    isInstance = isInstance && "fireRoomArea" in value;
+    isInstance = isInstance && "tradeArea" in value;
+    isInstance = isInstance && "blackTradeRooms" in value;
+    isInstance = isInstance && "height" in value;
+    isInstance = isInstance && "volume" in value;
+    isInstance = isInstance && "_class" in value;
+    isInstance = isInstance && "degree" in value;
+
+    return isInstance;
+}
+
+export function CreateObjectDtoFromJSON(json: any): CreateObjectDto {
+    return CreateObjectDtoFromJSONTyped(json, false);
+}
+
+export function CreateObjectDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateObjectDto {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'name': json['name'],
+        'sp2type': json['sp2type'],
+        'sp2name': json['sp2name'],
+        'sp2questions': json['sp2questions'],
+        'upFloors': json['upFloors'],
+        'isUnderFloor': json['isUnderFloor'],
+        'underFloors': json['underFloors'],
+        'fireRoomArea': json['fireRoomArea'],
+        'tradeArea': json['tradeArea'],
+        'blackTradeRooms': json['blackTradeRooms'],
+        'height': json['height'],
+        'volume': json['volume'],
+        '_class': json['class'],
+        'degree': json['degree'],
+    };
+}
+
+export function CreateObjectDtoToJSON(value?: CreateObjectDto | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'name': value.name,
+        'sp2type': value.sp2type,
+        'sp2name': value.sp2name,
+        'sp2questions': value.sp2questions,
+        'upFloors': value.upFloors,
+        'isUnderFloor': value.isUnderFloor,
+        'underFloors': value.underFloors,
+        'fireRoomArea': value.fireRoomArea,
+        'tradeArea': value.tradeArea,
+        'blackTradeRooms': value.blackTradeRooms,
+        'height': value.height,
+        'volume': value.volume,
+        'class': value._class,
+        'degree': value.degree,
+    };
+}
+
Index: src/services/api/models/CreateOwnerDto.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/CreateOwnerDto.ts b/src/services/api/models/CreateOwnerDto.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/CreateOwnerDto.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,66 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+/**
+ * 
+ * @export
+ * @interface CreateOwnerDto
+ */
+export interface CreateOwnerDto {
+    /**
+     * 
+     * @type {string}
+     * @memberof CreateOwnerDto
+     */
+    id: string;
+}
+
+/**
+ * Check if a given object implements the CreateOwnerDto interface.
+ */
+export function instanceOfCreateOwnerDto(value: object): boolean {
+    let isInstance = true;
+    isInstance = isInstance && "id" in value;
+
+    return isInstance;
+}
+
+export function CreateOwnerDtoFromJSON(json: any): CreateOwnerDto {
+    return CreateOwnerDtoFromJSONTyped(json, false);
+}
+
+export function CreateOwnerDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateOwnerDto {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'id': json['id'],
+    };
+}
+
+export function CreateOwnerDtoToJSON(value?: CreateOwnerDto | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'id': value.id,
+    };
+}
+
Index: src/services/api/models/ObjectEntity.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/ObjectEntity.ts b/src/services/api/models/ObjectEntity.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/ObjectEntity.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,192 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+/**
+ * 
+ * @export
+ * @interface ObjectEntity
+ */
+export interface ObjectEntity {
+    /**
+     * 
+     * @type {number}
+     * @memberof ObjectEntity
+     */
+    id: number;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectEntity
+     */
+    name: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectEntity
+     */
+    sp2type: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectEntity
+     */
+    sp2name: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectEntity
+     */
+    sp2questions: string;
+    /**
+     * 
+     * @type {number}
+     * @memberof ObjectEntity
+     */
+    upFloors: number;
+    /**
+     * 
+     * @type {boolean}
+     * @memberof ObjectEntity
+     */
+    isUnderFloor: boolean;
+    /**
+     * 
+     * @type {number}
+     * @memberof ObjectEntity
+     */
+    underFloors: number;
+    /**
+     * 
+     * @type {number}
+     * @memberof ObjectEntity
+     */
+    fireRoomArea: number;
+    /**
+     * 
+     * @type {number}
+     * @memberof ObjectEntity
+     */
+    tradeArea: number;
+    /**
+     * 
+     * @type {boolean}
+     * @memberof ObjectEntity
+     */
+    blackTradeRooms: boolean;
+    /**
+     * 
+     * @type {number}
+     * @memberof ObjectEntity
+     */
+    height: number;
+    /**
+     * 
+     * @type {number}
+     * @memberof ObjectEntity
+     */
+    volume: number;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectEntity
+     */
+    _class: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectEntity
+     */
+    degree: string;
+}
+
+/**
+ * Check if a given object implements the ObjectEntity interface.
+ */
+export function instanceOfObjectEntity(value: object): boolean {
+    let isInstance = true;
+    isInstance = isInstance && "id" in value;
+    isInstance = isInstance && "name" in value;
+    isInstance = isInstance && "sp2type" in value;
+    isInstance = isInstance && "sp2name" in value;
+    isInstance = isInstance && "sp2questions" in value;
+    isInstance = isInstance && "upFloors" in value;
+    isInstance = isInstance && "isUnderFloor" in value;
+    isInstance = isInstance && "underFloors" in value;
+    isInstance = isInstance && "fireRoomArea" in value;
+    isInstance = isInstance && "tradeArea" in value;
+    isInstance = isInstance && "blackTradeRooms" in value;
+    isInstance = isInstance && "height" in value;
+    isInstance = isInstance && "volume" in value;
+    isInstance = isInstance && "_class" in value;
+    isInstance = isInstance && "degree" in value;
+
+    return isInstance;
+}
+
+export function ObjectEntityFromJSON(json: any): ObjectEntity {
+    return ObjectEntityFromJSONTyped(json, false);
+}
+
+export function ObjectEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObjectEntity {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'id': json['id'],
+        'name': json['name'],
+        'sp2type': json['sp2type'],
+        'sp2name': json['sp2name'],
+        'sp2questions': json['sp2questions'],
+        'upFloors': json['upFloors'],
+        'isUnderFloor': json['isUnderFloor'],
+        'underFloors': json['underFloors'],
+        'fireRoomArea': json['fireRoomArea'],
+        'tradeArea': json['tradeArea'],
+        'blackTradeRooms': json['blackTradeRooms'],
+        'height': json['height'],
+        'volume': json['volume'],
+        '_class': json['class'],
+        'degree': json['degree'],
+    };
+}
+
+export function ObjectEntityToJSON(value?: ObjectEntity | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'id': value.id,
+        'name': value.name,
+        'sp2type': value.sp2type,
+        'sp2name': value.sp2name,
+        'sp2questions': value.sp2questions,
+        'upFloors': value.upFloors,
+        'isUnderFloor': value.isUnderFloor,
+        'underFloors': value.underFloors,
+        'fireRoomArea': value.fireRoomArea,
+        'tradeArea': value.tradeArea,
+        'blackTradeRooms': value.blackTradeRooms,
+        'height': value.height,
+        'volume': value.volume,
+        'class': value._class,
+        'degree': value.degree,
+    };
+}
+
Index: src/services/api/models/ObjectsControllerAddOwner400Response.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/ObjectsControllerAddOwner400Response.ts b/src/services/api/models/ObjectsControllerAddOwner400Response.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/ObjectsControllerAddOwner400Response.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,83 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+/**
+ * Владелец уже существует.
+ * @export
+ * @interface ObjectsControllerAddOwner400Response
+ */
+export interface ObjectsControllerAddOwner400Response {
+    /**
+     * 
+     * @type {number}
+     * @memberof ObjectsControllerAddOwner400Response
+     */
+    statusCode: number;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectsControllerAddOwner400Response
+     */
+    message: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectsControllerAddOwner400Response
+     */
+    error?: string;
+}
+
+/**
+ * Check if a given object implements the ObjectsControllerAddOwner400Response interface.
+ */
+export function instanceOfObjectsControllerAddOwner400Response(value: object): boolean {
+    let isInstance = true;
+    isInstance = isInstance && "statusCode" in value;
+    isInstance = isInstance && "message" in value;
+
+    return isInstance;
+}
+
+export function ObjectsControllerAddOwner400ResponseFromJSON(json: any): ObjectsControllerAddOwner400Response {
+    return ObjectsControllerAddOwner400ResponseFromJSONTyped(json, false);
+}
+
+export function ObjectsControllerAddOwner400ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObjectsControllerAddOwner400Response {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'statusCode': json['statusCode'],
+        'message': json['message'],
+        'error': !exists(json, 'error') ? undefined : json['error'],
+    };
+}
+
+export function ObjectsControllerAddOwner400ResponseToJSON(value?: ObjectsControllerAddOwner400Response | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'statusCode': value.statusCode,
+        'message': value.message,
+        'error': value.error,
+    };
+}
+
Index: src/services/api/models/ObjectsControllerFind200Response.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/ObjectsControllerFind200Response.ts b/src/services/api/models/ObjectsControllerFind200Response.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/ObjectsControllerFind200Response.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,82 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+import type { ObjectEntity } from './ObjectEntity';
+import {
+    ObjectEntityFromJSON,
+    ObjectEntityFromJSONTyped,
+    ObjectEntityToJSON,
+} from './ObjectEntity';
+
+/**
+ * 
+ * @export
+ * @interface ObjectsControllerFind200Response
+ */
+export interface ObjectsControllerFind200Response {
+    /**
+     * 
+     * @type {Array<ObjectEntity>}
+     * @memberof ObjectsControllerFind200Response
+     */
+    data: Array<ObjectEntity>;
+    /**
+     * 
+     * @type {number}
+     * @memberof ObjectsControllerFind200Response
+     */
+    total: number;
+}
+
+/**
+ * Check if a given object implements the ObjectsControllerFind200Response interface.
+ */
+export function instanceOfObjectsControllerFind200Response(value: object): boolean {
+    let isInstance = true;
+    isInstance = isInstance && "data" in value;
+    isInstance = isInstance && "total" in value;
+
+    return isInstance;
+}
+
+export function ObjectsControllerFind200ResponseFromJSON(json: any): ObjectsControllerFind200Response {
+    return ObjectsControllerFind200ResponseFromJSONTyped(json, false);
+}
+
+export function ObjectsControllerFind200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObjectsControllerFind200Response {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'data': ((json['data'] as Array<any>).map(ObjectEntityFromJSON)),
+        'total': json['total'],
+    };
+}
+
+export function ObjectsControllerFind200ResponseToJSON(value?: ObjectsControllerFind200Response | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'data': ((value.data as Array<any>).map(ObjectEntityToJSON)),
+        'total': value.total,
+    };
+}
+
Index: src/services/api/models/ObjectsControllerFind200ResponseAllOf.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/ObjectsControllerFind200ResponseAllOf.ts b/src/services/api/models/ObjectsControllerFind200ResponseAllOf.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/ObjectsControllerFind200ResponseAllOf.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,72 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+import type { ObjectEntity } from './ObjectEntity';
+import {
+    ObjectEntityFromJSON,
+    ObjectEntityFromJSONTyped,
+    ObjectEntityToJSON,
+} from './ObjectEntity';
+
+/**
+ * 
+ * @export
+ * @interface ObjectsControllerFind200ResponseAllOf
+ */
+export interface ObjectsControllerFind200ResponseAllOf {
+    /**
+     * 
+     * @type {Array<ObjectEntity>}
+     * @memberof ObjectsControllerFind200ResponseAllOf
+     */
+    data?: Array<ObjectEntity>;
+}
+
+/**
+ * Check if a given object implements the ObjectsControllerFind200ResponseAllOf interface.
+ */
+export function instanceOfObjectsControllerFind200ResponseAllOf(value: object): boolean {
+    let isInstance = true;
+
+    return isInstance;
+}
+
+export function ObjectsControllerFind200ResponseAllOfFromJSON(json: any): ObjectsControllerFind200ResponseAllOf {
+    return ObjectsControllerFind200ResponseAllOfFromJSONTyped(json, false);
+}
+
+export function ObjectsControllerFind200ResponseAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObjectsControllerFind200ResponseAllOf {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'data': !exists(json, 'data') ? undefined : ((json['data'] as Array<any>).map(ObjectEntityFromJSON)),
+    };
+}
+
+export function ObjectsControllerFind200ResponseAllOfToJSON(value?: ObjectsControllerFind200ResponseAllOf | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'data': value.data === undefined ? undefined : ((value.data as Array<any>).map(ObjectEntityToJSON)),
+    };
+}
+
Index: src/services/api/models/ObjectsControllerFind401Response.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/ObjectsControllerFind401Response.ts b/src/services/api/models/ObjectsControllerFind401Response.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/ObjectsControllerFind401Response.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,83 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+/**
+ * Не был передан access token.
+ * @export
+ * @interface ObjectsControllerFind401Response
+ */
+export interface ObjectsControllerFind401Response {
+    /**
+     * 
+     * @type {number}
+     * @memberof ObjectsControllerFind401Response
+     */
+    statusCode: number;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectsControllerFind401Response
+     */
+    message: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectsControllerFind401Response
+     */
+    error?: string;
+}
+
+/**
+ * Check if a given object implements the ObjectsControllerFind401Response interface.
+ */
+export function instanceOfObjectsControllerFind401Response(value: object): boolean {
+    let isInstance = true;
+    isInstance = isInstance && "statusCode" in value;
+    isInstance = isInstance && "message" in value;
+
+    return isInstance;
+}
+
+export function ObjectsControllerFind401ResponseFromJSON(json: any): ObjectsControllerFind401Response {
+    return ObjectsControllerFind401ResponseFromJSONTyped(json, false);
+}
+
+export function ObjectsControllerFind401ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObjectsControllerFind401Response {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'statusCode': json['statusCode'],
+        'message': json['message'],
+        'error': !exists(json, 'error') ? undefined : json['error'],
+    };
+}
+
+export function ObjectsControllerFind401ResponseToJSON(value?: ObjectsControllerFind401Response | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'statusCode': value.statusCode,
+        'message': value.message,
+        'error': value.error,
+    };
+}
+
Index: src/services/api/models/ObjectsControllerFindOne404Response.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/ObjectsControllerFindOne404Response.ts b/src/services/api/models/ObjectsControllerFindOne404Response.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/ObjectsControllerFindOne404Response.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,83 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+/**
+ * Объект с указанным id не найден.
+ * @export
+ * @interface ObjectsControllerFindOne404Response
+ */
+export interface ObjectsControllerFindOne404Response {
+    /**
+     * 
+     * @type {number}
+     * @memberof ObjectsControllerFindOne404Response
+     */
+    statusCode: number;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectsControllerFindOne404Response
+     */
+    message: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectsControllerFindOne404Response
+     */
+    error?: string;
+}
+
+/**
+ * Check if a given object implements the ObjectsControllerFindOne404Response interface.
+ */
+export function instanceOfObjectsControllerFindOne404Response(value: object): boolean {
+    let isInstance = true;
+    isInstance = isInstance && "statusCode" in value;
+    isInstance = isInstance && "message" in value;
+
+    return isInstance;
+}
+
+export function ObjectsControllerFindOne404ResponseFromJSON(json: any): ObjectsControllerFindOne404Response {
+    return ObjectsControllerFindOne404ResponseFromJSONTyped(json, false);
+}
+
+export function ObjectsControllerFindOne404ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObjectsControllerFindOne404Response {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'statusCode': json['statusCode'],
+        'message': json['message'],
+        'error': !exists(json, 'error') ? undefined : json['error'],
+    };
+}
+
+export function ObjectsControllerFindOne404ResponseToJSON(value?: ObjectsControllerFindOne404Response | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'statusCode': value.statusCode,
+        'message': value.message,
+        'error': value.error,
+    };
+}
+
Index: src/services/api/models/ObjectsControllerGetOwners200Response.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/ObjectsControllerGetOwners200Response.ts b/src/services/api/models/ObjectsControllerGetOwners200Response.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/ObjectsControllerGetOwners200Response.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,82 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+import type { OwnerEntity } from './OwnerEntity';
+import {
+    OwnerEntityFromJSON,
+    OwnerEntityFromJSONTyped,
+    OwnerEntityToJSON,
+} from './OwnerEntity';
+
+/**
+ * 
+ * @export
+ * @interface ObjectsControllerGetOwners200Response
+ */
+export interface ObjectsControllerGetOwners200Response {
+    /**
+     * 
+     * @type {Array<OwnerEntity>}
+     * @memberof ObjectsControllerGetOwners200Response
+     */
+    data: Array<OwnerEntity>;
+    /**
+     * 
+     * @type {number}
+     * @memberof ObjectsControllerGetOwners200Response
+     */
+    total: number;
+}
+
+/**
+ * Check if a given object implements the ObjectsControllerGetOwners200Response interface.
+ */
+export function instanceOfObjectsControllerGetOwners200Response(value: object): boolean {
+    let isInstance = true;
+    isInstance = isInstance && "data" in value;
+    isInstance = isInstance && "total" in value;
+
+    return isInstance;
+}
+
+export function ObjectsControllerGetOwners200ResponseFromJSON(json: any): ObjectsControllerGetOwners200Response {
+    return ObjectsControllerGetOwners200ResponseFromJSONTyped(json, false);
+}
+
+export function ObjectsControllerGetOwners200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObjectsControllerGetOwners200Response {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'data': ((json['data'] as Array<any>).map(OwnerEntityFromJSON)),
+        'total': json['total'],
+    };
+}
+
+export function ObjectsControllerGetOwners200ResponseToJSON(value?: ObjectsControllerGetOwners200Response | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'data': ((value.data as Array<any>).map(OwnerEntityToJSON)),
+        'total': value.total,
+    };
+}
+
Index: src/services/api/models/ObjectsControllerGetOwners200ResponseAllOf.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/ObjectsControllerGetOwners200ResponseAllOf.ts b/src/services/api/models/ObjectsControllerGetOwners200ResponseAllOf.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/ObjectsControllerGetOwners200ResponseAllOf.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,72 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+import type { OwnerEntity } from './OwnerEntity';
+import {
+    OwnerEntityFromJSON,
+    OwnerEntityFromJSONTyped,
+    OwnerEntityToJSON,
+} from './OwnerEntity';
+
+/**
+ * 
+ * @export
+ * @interface ObjectsControllerGetOwners200ResponseAllOf
+ */
+export interface ObjectsControllerGetOwners200ResponseAllOf {
+    /**
+     * 
+     * @type {Array<OwnerEntity>}
+     * @memberof ObjectsControllerGetOwners200ResponseAllOf
+     */
+    data?: Array<OwnerEntity>;
+}
+
+/**
+ * Check if a given object implements the ObjectsControllerGetOwners200ResponseAllOf interface.
+ */
+export function instanceOfObjectsControllerGetOwners200ResponseAllOf(value: object): boolean {
+    let isInstance = true;
+
+    return isInstance;
+}
+
+export function ObjectsControllerGetOwners200ResponseAllOfFromJSON(json: any): ObjectsControllerGetOwners200ResponseAllOf {
+    return ObjectsControllerGetOwners200ResponseAllOfFromJSONTyped(json, false);
+}
+
+export function ObjectsControllerGetOwners200ResponseAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObjectsControllerGetOwners200ResponseAllOf {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'data': !exists(json, 'data') ? undefined : ((json['data'] as Array<any>).map(OwnerEntityFromJSON)),
+    };
+}
+
+export function ObjectsControllerGetOwners200ResponseAllOfToJSON(value?: ObjectsControllerGetOwners200ResponseAllOf | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'data': value.data === undefined ? undefined : ((value.data as Array<any>).map(OwnerEntityToJSON)),
+    };
+}
+
Index: src/services/api/models/ObjectsControllerRemoveOwner400Response.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/ObjectsControllerRemoveOwner400Response.ts b/src/services/api/models/ObjectsControllerRemoveOwner400Response.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/ObjectsControllerRemoveOwner400Response.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,83 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+/**
+ * Нельзя удалить автора объекта.
+ * @export
+ * @interface ObjectsControllerRemoveOwner400Response
+ */
+export interface ObjectsControllerRemoveOwner400Response {
+    /**
+     * 
+     * @type {number}
+     * @memberof ObjectsControllerRemoveOwner400Response
+     */
+    statusCode: number;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectsControllerRemoveOwner400Response
+     */
+    message: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectsControllerRemoveOwner400Response
+     */
+    error?: string;
+}
+
+/**
+ * Check if a given object implements the ObjectsControllerRemoveOwner400Response interface.
+ */
+export function instanceOfObjectsControllerRemoveOwner400Response(value: object): boolean {
+    let isInstance = true;
+    isInstance = isInstance && "statusCode" in value;
+    isInstance = isInstance && "message" in value;
+
+    return isInstance;
+}
+
+export function ObjectsControllerRemoveOwner400ResponseFromJSON(json: any): ObjectsControllerRemoveOwner400Response {
+    return ObjectsControllerRemoveOwner400ResponseFromJSONTyped(json, false);
+}
+
+export function ObjectsControllerRemoveOwner400ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObjectsControllerRemoveOwner400Response {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'statusCode': json['statusCode'],
+        'message': json['message'],
+        'error': !exists(json, 'error') ? undefined : json['error'],
+    };
+}
+
+export function ObjectsControllerRemoveOwner400ResponseToJSON(value?: ObjectsControllerRemoveOwner400Response | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'statusCode': value.statusCode,
+        'message': value.message,
+        'error': value.error,
+    };
+}
+
Index: src/services/api/models/ObjectsControllerRemoveOwner404Response.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/ObjectsControllerRemoveOwner404Response.ts b/src/services/api/models/ObjectsControllerRemoveOwner404Response.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/ObjectsControllerRemoveOwner404Response.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,83 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+/**
+ * Владелец с указанным id не найден.
+ * @export
+ * @interface ObjectsControllerRemoveOwner404Response
+ */
+export interface ObjectsControllerRemoveOwner404Response {
+    /**
+     * 
+     * @type {number}
+     * @memberof ObjectsControllerRemoveOwner404Response
+     */
+    statusCode: number;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectsControllerRemoveOwner404Response
+     */
+    message: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof ObjectsControllerRemoveOwner404Response
+     */
+    error?: string;
+}
+
+/**
+ * Check if a given object implements the ObjectsControllerRemoveOwner404Response interface.
+ */
+export function instanceOfObjectsControllerRemoveOwner404Response(value: object): boolean {
+    let isInstance = true;
+    isInstance = isInstance && "statusCode" in value;
+    isInstance = isInstance && "message" in value;
+
+    return isInstance;
+}
+
+export function ObjectsControllerRemoveOwner404ResponseFromJSON(json: any): ObjectsControllerRemoveOwner404Response {
+    return ObjectsControllerRemoveOwner404ResponseFromJSONTyped(json, false);
+}
+
+export function ObjectsControllerRemoveOwner404ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ObjectsControllerRemoveOwner404Response {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'statusCode': json['statusCode'],
+        'message': json['message'],
+        'error': !exists(json, 'error') ? undefined : json['error'],
+    };
+}
+
+export function ObjectsControllerRemoveOwner404ResponseToJSON(value?: ObjectsControllerRemoveOwner404Response | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'statusCode': value.statusCode,
+        'message': value.message,
+        'error': value.error,
+    };
+}
+
Index: src/services/api/models/OwnerEntity.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/OwnerEntity.ts b/src/services/api/models/OwnerEntity.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/OwnerEntity.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,74 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+/**
+ * 
+ * @export
+ * @interface OwnerEntity
+ */
+export interface OwnerEntity {
+    /**
+     * 
+     * @type {string}
+     * @memberof OwnerEntity
+     */
+    id: string;
+    /**
+     * 
+     * @type {boolean}
+     * @memberof OwnerEntity
+     */
+    author?: boolean;
+}
+
+/**
+ * Check if a given object implements the OwnerEntity interface.
+ */
+export function instanceOfOwnerEntity(value: object): boolean {
+    let isInstance = true;
+    isInstance = isInstance && "id" in value;
+
+    return isInstance;
+}
+
+export function OwnerEntityFromJSON(json: any): OwnerEntity {
+    return OwnerEntityFromJSONTyped(json, false);
+}
+
+export function OwnerEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): OwnerEntity {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'id': json['id'],
+        'author': !exists(json, 'author') ? undefined : json['author'],
+    };
+}
+
+export function OwnerEntityToJSON(value?: OwnerEntity | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'id': value.id,
+        'author': value.author,
+    };
+}
+
Index: src/services/api/models/PaginationResultDto.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/PaginationResultDto.ts b/src/services/api/models/PaginationResultDto.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/PaginationResultDto.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,75 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+/**
+ * 
+ * @export
+ * @interface PaginationResultDto
+ */
+export interface PaginationResultDto {
+    /**
+     * 
+     * @type {Array<string>}
+     * @memberof PaginationResultDto
+     */
+    data: Array<string>;
+    /**
+     * 
+     * @type {number}
+     * @memberof PaginationResultDto
+     */
+    total: number;
+}
+
+/**
+ * Check if a given object implements the PaginationResultDto interface.
+ */
+export function instanceOfPaginationResultDto(value: object): boolean {
+    let isInstance = true;
+    isInstance = isInstance && "data" in value;
+    isInstance = isInstance && "total" in value;
+
+    return isInstance;
+}
+
+export function PaginationResultDtoFromJSON(json: any): PaginationResultDto {
+    return PaginationResultDtoFromJSONTyped(json, false);
+}
+
+export function PaginationResultDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginationResultDto {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'data': json['data'],
+        'total': json['total'],
+    };
+}
+
+export function PaginationResultDtoToJSON(value?: PaginationResultDto | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'data': value.data,
+        'total': value.total,
+    };
+}
+
Index: src/services/api/models/UpdateObjectDto.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/UpdateObjectDto.ts b/src/services/api/models/UpdateObjectDto.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/models/UpdateObjectDto.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,169 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ * 
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+import { exists, mapValues } from '../runtime';
+/**
+ * 
+ * @export
+ * @interface UpdateObjectDto
+ */
+export interface UpdateObjectDto {
+    /**
+     * 
+     * @type {string}
+     * @memberof UpdateObjectDto
+     */
+    name?: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof UpdateObjectDto
+     */
+    sp2type?: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof UpdateObjectDto
+     */
+    sp2name?: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof UpdateObjectDto
+     */
+    sp2questions?: string;
+    /**
+     * 
+     * @type {number}
+     * @memberof UpdateObjectDto
+     */
+    upFloors?: number;
+    /**
+     * 
+     * @type {boolean}
+     * @memberof UpdateObjectDto
+     */
+    isUnderFloor?: boolean;
+    /**
+     * 
+     * @type {number}
+     * @memberof UpdateObjectDto
+     */
+    underFloors?: number;
+    /**
+     * 
+     * @type {number}
+     * @memberof UpdateObjectDto
+     */
+    fireRoomArea?: number;
+    /**
+     * 
+     * @type {number}
+     * @memberof UpdateObjectDto
+     */
+    tradeArea?: number;
+    /**
+     * 
+     * @type {boolean}
+     * @memberof UpdateObjectDto
+     */
+    blackTradeRooms?: boolean;
+    /**
+     * 
+     * @type {number}
+     * @memberof UpdateObjectDto
+     */
+    height?: number;
+    /**
+     * 
+     * @type {number}
+     * @memberof UpdateObjectDto
+     */
+    volume?: number;
+    /**
+     * 
+     * @type {string}
+     * @memberof UpdateObjectDto
+     */
+    _class?: string;
+    /**
+     * 
+     * @type {string}
+     * @memberof UpdateObjectDto
+     */
+    degree?: string;
+}
+
+/**
+ * Check if a given object implements the UpdateObjectDto interface.
+ */
+export function instanceOfUpdateObjectDto(value: object): boolean {
+    let isInstance = true;
+
+    return isInstance;
+}
+
+export function UpdateObjectDtoFromJSON(json: any): UpdateObjectDto {
+    return UpdateObjectDtoFromJSONTyped(json, false);
+}
+
+export function UpdateObjectDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateObjectDto {
+    if ((json === undefined) || (json === null)) {
+        return json;
+    }
+    return {
+        
+        'name': !exists(json, 'name') ? undefined : json['name'],
+        'sp2type': !exists(json, 'sp2type') ? undefined : json['sp2type'],
+        'sp2name': !exists(json, 'sp2name') ? undefined : json['sp2name'],
+        'sp2questions': !exists(json, 'sp2questions') ? undefined : json['sp2questions'],
+        'upFloors': !exists(json, 'upFloors') ? undefined : json['upFloors'],
+        'isUnderFloor': !exists(json, 'isUnderFloor') ? undefined : json['isUnderFloor'],
+        'underFloors': !exists(json, 'underFloors') ? undefined : json['underFloors'],
+        'fireRoomArea': !exists(json, 'fireRoomArea') ? undefined : json['fireRoomArea'],
+        'tradeArea': !exists(json, 'tradeArea') ? undefined : json['tradeArea'],
+        'blackTradeRooms': !exists(json, 'blackTradeRooms') ? undefined : json['blackTradeRooms'],
+        'height': !exists(json, 'height') ? undefined : json['height'],
+        'volume': !exists(json, 'volume') ? undefined : json['volume'],
+        '_class': !exists(json, 'class') ? undefined : json['class'],
+        'degree': !exists(json, 'degree') ? undefined : json['degree'],
+    };
+}
+
+export function UpdateObjectDtoToJSON(value?: UpdateObjectDto | null): any {
+    if (value === undefined) {
+        return undefined;
+    }
+    if (value === null) {
+        return null;
+    }
+    return {
+        
+        'name': value.name,
+        'sp2type': value.sp2type,
+        'sp2name': value.sp2name,
+        'sp2questions': value.sp2questions,
+        'upFloors': value.upFloors,
+        'isUnderFloor': value.isUnderFloor,
+        'underFloors': value.underFloors,
+        'fireRoomArea': value.fireRoomArea,
+        'tradeArea': value.tradeArea,
+        'blackTradeRooms': value.blackTradeRooms,
+        'height': value.height,
+        'volume': value.volume,
+        'class': value._class,
+        'degree': value.degree,
+    };
+}
+
Index: src/services/api/models/building-categories-controller-find-one404-response.ts
===================================================================
diff --git a/src/services/api/models/building-categories-controller-find-one404-response.ts b/src/services/api/models/building-categories-controller-find-one404-response.ts
deleted file mode 100644
--- a/src/services/api/models/building-categories-controller-find-one404-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Указанная категория филиалов не найдена.
- * @export
- * @interface BuildingCategoriesControllerFindOne404Response
- */
-export interface BuildingCategoriesControllerFindOne404Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof BuildingCategoriesControllerFindOne404Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoriesControllerFindOne404Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoriesControllerFindOne404Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/building-categories-controller-find200-response-all-of.ts
===================================================================
diff --git a/src/services/api/models/building-categories-controller-find200-response-all-of.ts b/src/services/api/models/building-categories-controller-find200-response-all-of.ts
deleted file mode 100644
--- a/src/services/api/models/building-categories-controller-find200-response-all-of.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,33 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingCategoryEntity } from './building-category-entity';
-
-/**
- * 
- * @export
- * @interface BuildingCategoriesControllerFind200ResponseAllOf
- */
-export interface BuildingCategoriesControllerFind200ResponseAllOf {
-    /**
-     * 
-     * @type {Array<BuildingCategoryEntity>}
-     * @memberof BuildingCategoriesControllerFind200ResponseAllOf
-     */
-    'data'?: Array<BuildingCategoryEntity>;
-}
-
Index: src/services/api/models/building-categories-controller-find200-response.ts
===================================================================
diff --git a/src/services/api/models/building-categories-controller-find200-response.ts b/src/services/api/models/building-categories-controller-find200-response.ts
deleted file mode 100644
--- a/src/services/api/models/building-categories-controller-find200-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,32 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingCategoriesControllerFind200ResponseAllOf } from './building-categories-controller-find200-response-all-of';
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingCategoryEntity } from './building-category-entity';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PaginatedEntity } from './paginated-entity';
-
-/**
- * @type BuildingCategoriesControllerFind200Response
- * @export
- */
-export type BuildingCategoriesControllerFind200Response = BuildingCategoriesControllerFind200ResponseAllOf & PaginatedEntity;
-
-
Index: src/services/api/models/building-categories-sorting-dto.ts
===================================================================
diff --git a/src/services/api/models/building-categories-sorting-dto.ts b/src/services/api/models/building-categories-sorting-dto.ts
deleted file mode 100644
--- a/src/services/api/models/building-categories-sorting-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,86 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface BuildingCategoriesSortingDto
- */
-export interface BuildingCategoriesSortingDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoriesSortingDto
-     */
-    'id'?: BuildingCategoriesSortingDtoIdEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoriesSortingDto
-     */
-    'name'?: BuildingCategoriesSortingDtoNameEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoriesSortingDto
-     */
-    'lowerName'?: BuildingCategoriesSortingDtoLowerNameEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoriesSortingDto
-     */
-    'createdAt'?: BuildingCategoriesSortingDtoCreatedAtEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoriesSortingDto
-     */
-    'updatedAt'?: BuildingCategoriesSortingDtoUpdatedAtEnum;
-}
-
-export const BuildingCategoriesSortingDtoIdEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingCategoriesSortingDtoIdEnum = typeof BuildingCategoriesSortingDtoIdEnum[keyof typeof BuildingCategoriesSortingDtoIdEnum];
-export const BuildingCategoriesSortingDtoNameEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingCategoriesSortingDtoNameEnum = typeof BuildingCategoriesSortingDtoNameEnum[keyof typeof BuildingCategoriesSortingDtoNameEnum];
-export const BuildingCategoriesSortingDtoLowerNameEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingCategoriesSortingDtoLowerNameEnum = typeof BuildingCategoriesSortingDtoLowerNameEnum[keyof typeof BuildingCategoriesSortingDtoLowerNameEnum];
-export const BuildingCategoriesSortingDtoCreatedAtEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingCategoriesSortingDtoCreatedAtEnum = typeof BuildingCategoriesSortingDtoCreatedAtEnum[keyof typeof BuildingCategoriesSortingDtoCreatedAtEnum];
-export const BuildingCategoriesSortingDtoUpdatedAtEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingCategoriesSortingDtoUpdatedAtEnum = typeof BuildingCategoriesSortingDtoUpdatedAtEnum[keyof typeof BuildingCategoriesSortingDtoUpdatedAtEnum];
-
-
Index: src/services/api/models/building-category-entity.ts
===================================================================
diff --git a/src/services/api/models/building-category-entity.ts b/src/services/api/models/building-category-entity.ts
deleted file mode 100644
--- a/src/services/api/models/building-category-entity.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,54 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface BuildingCategoryEntity
- */
-export interface BuildingCategoryEntity {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoryEntity
-     */
-    'id': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoryEntity
-     */
-    'name': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoryEntity
-     */
-    'lowerName': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoryEntity
-     */
-    'createdAt': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingCategoryEntity
-     */
-    'updatedAt': string;
-}
-
Index: src/services/api/models/building-entity-categories-inner.ts
===================================================================
diff --git a/src/services/api/models/building-entity-categories-inner.ts b/src/services/api/models/building-entity-categories-inner.ts
deleted file mode 100644
--- a/src/services/api/models/building-entity-categories-inner.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,54 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface BuildingEntityCategoriesInner
- */
-export interface BuildingEntityCategoriesInner {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntityCategoriesInner
-     */
-    'id': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntityCategoriesInner
-     */
-    'name': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntityCategoriesInner
-     */
-    'lowerName': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntityCategoriesInner
-     */
-    'createdAt': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntityCategoriesInner
-     */
-    'updatedAt': string;
-}
-
Index: src/services/api/models/building-entity-coordinate.ts
===================================================================
diff --git a/src/services/api/models/building-entity-coordinate.ts b/src/services/api/models/building-entity-coordinate.ts
deleted file mode 100644
--- a/src/services/api/models/building-entity-coordinate.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,36 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Пожликбез APIирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: kurskatm@gmail.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface BuildingEntityCoordinate
- */
-export interface BuildingEntityCoordinate {
-    /**
-     * 
-     * @type {number}
-     * @memberof BuildingEntityCoordinate
-     */
-    'lat': number;
-    /**
-     * 
-     * @type {number}
-     * @memberof BuildingEntityCoordinate
-     */
-    'lon': number;
-}
-
Index: src/services/api/models/building-entity-offers-inner.ts
===================================================================
diff --git a/src/services/api/models/building-entity-offers-inner.ts b/src/services/api/models/building-entity-offers-inner.ts
deleted file mode 100644
--- a/src/services/api/models/building-entity-offers-inner.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,48 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface BuildingEntityOffersInner
- */
-export interface BuildingEntityOffersInner {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntityOffersInner
-     */
-    'id': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntityOffersInner
-     */
-    'buildingId': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntityOffersInner
-     */
-    'name': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntityOffersInner
-     */
-    'description': string;
-}
-
Index: src/services/api/models/building-entity.ts
===================================================================
diff --git a/src/services/api/models/building-entity.ts b/src/services/api/models/building-entity.ts
deleted file mode 100644
--- a/src/services/api/models/building-entity.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,108 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingEntityCategoriesInner } from './building-entity-categories-inner';
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingEntityOffersInner } from './building-entity-offers-inner';
-
-/**
- * 
- * @export
- * @interface BuildingEntity
- */
-export interface BuildingEntity {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntity
-     */
-    'id': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntity
-     */
-    'partnerId': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntity
-     */
-    'phone': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntity
-     */
-    'city': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntity
-     */
-    'district': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntity
-     */
-    'street': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntity
-     */
-    'houseNumber': string;
-    /**
-     * 
-     * @type {number}
-     * @memberof BuildingEntity
-     */
-    'lat': number;
-    /**
-     * 
-     * @type {number}
-     * @memberof BuildingEntity
-     */
-    'lon': number;
-    /**
-     * 
-     * @type {Array<BuildingEntityCategoriesInner>}
-     * @memberof BuildingEntity
-     */
-    'categories': Array<BuildingEntityCategoriesInner>;
-    /**
-     * 
-     * @type {Array<BuildingEntityOffersInner>}
-     * @memberof BuildingEntity
-     */
-    'offers': Array<BuildingEntityOffersInner>;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntity
-     */
-    'createdAt': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingEntity
-     */
-    'updatedAt': string;
-}
-
Index: src/services/api/models/building-offer-entity.ts
===================================================================
diff --git a/src/services/api/models/building-offer-entity.ts b/src/services/api/models/building-offer-entity.ts
deleted file mode 100644
--- a/src/services/api/models/building-offer-entity.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,48 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface BuildingOfferEntity
- */
-export interface BuildingOfferEntity {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingOfferEntity
-     */
-    'id': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingOfferEntity
-     */
-    'buildingId': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingOfferEntity
-     */
-    'name': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingOfferEntity
-     */
-    'description': string;
-}
-
Index: src/services/api/models/building-offers-controller-create404-response.ts
===================================================================
diff --git a/src/services/api/models/building-offers-controller-create404-response.ts b/src/services/api/models/building-offers-controller-create404-response.ts
deleted file mode 100644
--- a/src/services/api/models/building-offers-controller-create404-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Филиал не найден.
- * @export
- * @interface BuildingOffersControllerCreate404Response
- */
-export interface BuildingOffersControllerCreate404Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof BuildingOffersControllerCreate404Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingOffersControllerCreate404Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingOffersControllerCreate404Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/building-offers-controller-remove404-response.ts
===================================================================
diff --git a/src/services/api/models/building-offers-controller-remove404-response.ts b/src/services/api/models/building-offers-controller-remove404-response.ts
deleted file mode 100644
--- a/src/services/api/models/building-offers-controller-remove404-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Указанное предложение филиала не найдено.
- * @export
- * @interface BuildingOffersControllerRemove404Response
- */
-export interface BuildingOffersControllerRemove404Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof BuildingOffersControllerRemove404Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingOffersControllerRemove404Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingOffersControllerRemove404Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/buildings-array-inner.ts
===================================================================
diff --git a/src/services/api/models/buildings-array-inner.ts b/src/services/api/models/buildings-array-inner.ts
deleted file mode 100644
--- a/src/services/api/models/buildings-array-inner.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,81 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Пожликбез APIирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: kurskatm@gmail.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingEntityCoordinate } from './building-entity-coordinate';
-
-/**
- * 
- * @export
- * @interface BuildingsArrayInner
- */
-export interface BuildingsArrayInner {
-    /**
-     * 
-     * @type {number}
-     * @memberof BuildingsArrayInner
-     */
-    'id': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsArrayInner
-     */
-    'partnerId': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsArrayInner
-     */
-    'phone': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsArrayInner
-     */
-    'district': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsArrayInner
-     */
-    'street': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsArrayInner
-     */
-    'housenumber': string;
-    /**
-     * 
-     * @type {BuildingEntityCoordinate}
-     * @memberof BuildingsArrayInner
-     */
-    'coordinate': BuildingEntityCoordinate;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsArrayInner
-     */
-    'createdAt': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsArrayInner
-     */
-    'updatedAt': string;
-}
-
Index: src/services/api/models/buildings-controller-create404-response.ts
===================================================================
diff --git a/src/services/api/models/buildings-controller-create404-response.ts b/src/services/api/models/buildings-controller-create404-response.ts
deleted file mode 100644
--- a/src/services/api/models/buildings-controller-create404-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Указанная категория филиала не найдена.
- * @export
- * @interface BuildingsControllerCreate404Response
- */
-export interface BuildingsControllerCreate404Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof BuildingsControllerCreate404Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsControllerCreate404Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsControllerCreate404Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/buildings-controller-find-all200-response-all-of.ts
===================================================================
diff --git a/src/services/api/models/buildings-controller-find-all200-response-all-of.ts b/src/services/api/models/buildings-controller-find-all200-response-all-of.ts
deleted file mode 100644
--- a/src/services/api/models/buildings-controller-find-all200-response-all-of.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,33 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Пожликбез APIирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: kurskatm@gmail.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingEntity } from './building-entity';
-
-/**
- * 
- * @export
- * @interface BuildingsControllerFindAll200ResponseAllOf
- */
-export interface BuildingsControllerFindAll200ResponseAllOf {
-    /**
-     * 
-     * @type {Array<BuildingEntity>}
-     * @memberof BuildingsControllerFindAll200ResponseAllOf
-     */
-    'data'?: Array<BuildingEntity>;
-}
-
Index: src/services/api/models/buildings-controller-find-all200-response.ts
===================================================================
diff --git a/src/services/api/models/buildings-controller-find-all200-response.ts b/src/services/api/models/buildings-controller-find-all200-response.ts
deleted file mode 100644
--- a/src/services/api/models/buildings-controller-find-all200-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,32 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Пожликбез APIирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: kurskatm@gmail.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingEntity } from './building-entity';
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingsControllerFindAll200ResponseAllOf } from './buildings-controller-find-all200-response-all-of';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PaginationResultDto } from './pagination-result-dto';
-
-/**
- * @type BuildingsControllerFindAll200Response
- * @export
- */
-export type BuildingsControllerFindAll200Response = BuildingsControllerFindAll200ResponseAllOf & PaginationResultDto;
-
-
Index: src/services/api/models/buildings-controller-find-one404-response.ts
===================================================================
diff --git a/src/services/api/models/buildings-controller-find-one404-response.ts b/src/services/api/models/buildings-controller-find-one404-response.ts
deleted file mode 100644
--- a/src/services/api/models/buildings-controller-find-one404-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Указанный филиал не найден.
- * @export
- * @interface BuildingsControllerFindOne404Response
- */
-export interface BuildingsControllerFindOne404Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof BuildingsControllerFindOne404Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsControllerFindOne404Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsControllerFindOne404Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/buildings-controller-find200-response-all-of.ts
===================================================================
diff --git a/src/services/api/models/buildings-controller-find200-response-all-of.ts b/src/services/api/models/buildings-controller-find200-response-all-of.ts
deleted file mode 100644
--- a/src/services/api/models/buildings-controller-find200-response-all-of.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,33 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingEntity } from './building-entity';
-
-/**
- * 
- * @export
- * @interface BuildingsControllerFind200ResponseAllOf
- */
-export interface BuildingsControllerFind200ResponseAllOf {
-    /**
-     * 
-     * @type {Array<BuildingEntity>}
-     * @memberof BuildingsControllerFind200ResponseAllOf
-     */
-    'data'?: Array<BuildingEntity>;
-}
-
Index: src/services/api/models/buildings-controller-find200-response.ts
===================================================================
diff --git a/src/services/api/models/buildings-controller-find200-response.ts b/src/services/api/models/buildings-controller-find200-response.ts
deleted file mode 100644
--- a/src/services/api/models/buildings-controller-find200-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,32 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingEntity } from './building-entity';
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingsControllerFind200ResponseAllOf } from './buildings-controller-find200-response-all-of';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PaginatedEntity } from './paginated-entity';
-
-/**
- * @type BuildingsControllerFind200Response
- * @export
- */
-export type BuildingsControllerFind200Response = BuildingsControllerFind200ResponseAllOf & PaginatedEntity;
-
-
Index: src/services/api/models/buildings-sorting-dto.ts
===================================================================
diff --git a/src/services/api/models/buildings-sorting-dto.ts b/src/services/api/models/buildings-sorting-dto.ts
deleted file mode 100644
--- a/src/services/api/models/buildings-sorting-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,158 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface BuildingsSortingDto
- */
-export interface BuildingsSortingDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsSortingDto
-     */
-    'id'?: BuildingsSortingDtoIdEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsSortingDto
-     */
-    'partnerId'?: BuildingsSortingDtoPartnerIdEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsSortingDto
-     */
-    'phone'?: BuildingsSortingDtoPhoneEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsSortingDto
-     */
-    'city'?: BuildingsSortingDtoCityEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsSortingDto
-     */
-    'district'?: BuildingsSortingDtoDistrictEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsSortingDto
-     */
-    'street'?: BuildingsSortingDtoStreetEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsSortingDto
-     */
-    'houseNumber'?: BuildingsSortingDtoHouseNumberEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsSortingDto
-     */
-    'lat'?: BuildingsSortingDtoLatEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsSortingDto
-     */
-    'lon'?: BuildingsSortingDtoLonEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsSortingDto
-     */
-    'createdAt'?: BuildingsSortingDtoCreatedAtEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof BuildingsSortingDto
-     */
-    'updatedAt'?: BuildingsSortingDtoUpdatedAtEnum;
-}
-
-export const BuildingsSortingDtoIdEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingsSortingDtoIdEnum = typeof BuildingsSortingDtoIdEnum[keyof typeof BuildingsSortingDtoIdEnum];
-export const BuildingsSortingDtoPartnerIdEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingsSortingDtoPartnerIdEnum = typeof BuildingsSortingDtoPartnerIdEnum[keyof typeof BuildingsSortingDtoPartnerIdEnum];
-export const BuildingsSortingDtoPhoneEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingsSortingDtoPhoneEnum = typeof BuildingsSortingDtoPhoneEnum[keyof typeof BuildingsSortingDtoPhoneEnum];
-export const BuildingsSortingDtoCityEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingsSortingDtoCityEnum = typeof BuildingsSortingDtoCityEnum[keyof typeof BuildingsSortingDtoCityEnum];
-export const BuildingsSortingDtoDistrictEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingsSortingDtoDistrictEnum = typeof BuildingsSortingDtoDistrictEnum[keyof typeof BuildingsSortingDtoDistrictEnum];
-export const BuildingsSortingDtoStreetEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingsSortingDtoStreetEnum = typeof BuildingsSortingDtoStreetEnum[keyof typeof BuildingsSortingDtoStreetEnum];
-export const BuildingsSortingDtoHouseNumberEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingsSortingDtoHouseNumberEnum = typeof BuildingsSortingDtoHouseNumberEnum[keyof typeof BuildingsSortingDtoHouseNumberEnum];
-export const BuildingsSortingDtoLatEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingsSortingDtoLatEnum = typeof BuildingsSortingDtoLatEnum[keyof typeof BuildingsSortingDtoLatEnum];
-export const BuildingsSortingDtoLonEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingsSortingDtoLonEnum = typeof BuildingsSortingDtoLonEnum[keyof typeof BuildingsSortingDtoLonEnum];
-export const BuildingsSortingDtoCreatedAtEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingsSortingDtoCreatedAtEnum = typeof BuildingsSortingDtoCreatedAtEnum[keyof typeof BuildingsSortingDtoCreatedAtEnum];
-export const BuildingsSortingDtoUpdatedAtEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type BuildingsSortingDtoUpdatedAtEnum = typeof BuildingsSortingDtoUpdatedAtEnum[keyof typeof BuildingsSortingDtoUpdatedAtEnum];
-
-
Index: src/services/api/models/create-building-category-dto.ts
===================================================================
diff --git a/src/services/api/models/create-building-category-dto.ts b/src/services/api/models/create-building-category-dto.ts
deleted file mode 100644
--- a/src/services/api/models/create-building-category-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,30 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface CreateBuildingCategoryDto
- */
-export interface CreateBuildingCategoryDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof CreateBuildingCategoryDto
-     */
-    'name': string;
-}
-
Index: src/services/api/models/create-building-dto.ts
===================================================================
diff --git a/src/services/api/models/create-building-dto.ts b/src/services/api/models/create-building-dto.ts
deleted file mode 100644
--- a/src/services/api/models/create-building-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,78 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface CreateBuildingDto
- */
-export interface CreateBuildingDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof CreateBuildingDto
-     */
-    'partnerId': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreateBuildingDto
-     */
-    'phone'?: string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreateBuildingDto
-     */
-    'city': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreateBuildingDto
-     */
-    'district'?: string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreateBuildingDto
-     */
-    'street': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreateBuildingDto
-     */
-    'houseNumber': string;
-    /**
-     * 
-     * @type {number}
-     * @memberof CreateBuildingDto
-     */
-    'lat': number;
-    /**
-     * 
-     * @type {number}
-     * @memberof CreateBuildingDto
-     */
-    'lon': number;
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof CreateBuildingDto
-     */
-    'categories'?: Array<string>;
-}
-
Index: src/services/api/models/create-building-offer-dto.ts
===================================================================
diff --git a/src/services/api/models/create-building-offer-dto.ts b/src/services/api/models/create-building-offer-dto.ts
deleted file mode 100644
--- a/src/services/api/models/create-building-offer-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,36 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface CreateBuildingOfferDto
- */
-export interface CreateBuildingOfferDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof CreateBuildingOfferDto
-     */
-    'name': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreateBuildingOfferDto
-     */
-    'description': string;
-}
-
Index: src/services/api/models/create-partner-dto.ts
===================================================================
diff --git a/src/services/api/models/create-partner-dto.ts b/src/services/api/models/create-partner-dto.ts
deleted file mode 100644
--- a/src/services/api/models/create-partner-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,54 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface CreatePartnerDto
- */
-export interface CreatePartnerDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof CreatePartnerDto
-     */
-    'logo'?: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreatePartnerDto
-     */
-    'name': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreatePartnerDto
-     */
-    'url'?: string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreatePartnerDto
-     */
-    'phone'?: string | null;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof CreatePartnerDto
-     */
-    'servicePartner'?: boolean;
-}
-
Index: src/services/api/models/create-post-category-dto.ts
===================================================================
diff --git a/src/services/api/models/create-post-category-dto.ts b/src/services/api/models/create-post-category-dto.ts
deleted file mode 100644
--- a/src/services/api/models/create-post-category-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,30 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface CreatePostCategoryDto
- */
-export interface CreatePostCategoryDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof CreatePostCategoryDto
-     */
-    'name': string;
-}
-
Index: src/services/api/models/create-post-dto.ts
===================================================================
diff --git a/src/services/api/models/create-post-dto.ts b/src/services/api/models/create-post-dto.ts
deleted file mode 100644
--- a/src/services/api/models/create-post-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,66 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface CreatePostDto
- */
-export interface CreatePostDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof CreatePostDto
-     */
-    'title': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreatePostDto
-     */
-    'description': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreatePostDto
-     */
-    'content': string;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof CreatePostDto
-     */
-    'published'?: boolean;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreatePostDto
-     */
-    'previewUrl'?: string;
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof CreatePostDto
-     */
-    'assets'?: Array<string>;
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof CreatePostDto
-     */
-    'categories'?: Array<string>;
-}
-
Index: src/services/api/models/create-user-dto.ts
===================================================================
diff --git a/src/services/api/models/create-user-dto.ts b/src/services/api/models/create-user-dto.ts
deleted file mode 100644
--- a/src/services/api/models/create-user-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,54 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface CreateUserDto
- */
-export interface CreateUserDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof CreateUserDto
-     */
-    'username'?: string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreateUserDto
-     */
-    'primaryEmail'?: string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreateUserDto
-     */
-    'primaryPhone'?: string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreateUserDto
-     */
-    'name'?: string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof CreateUserDto
-     */
-    'password'?: string | null;
-}
-
Index: src/services/api/models/filters-dto.ts
===================================================================
diff --git a/src/services/api/models/filters-dto.ts b/src/services/api/models/filters-dto.ts
deleted file mode 100644
--- a/src/services/api/models/filters-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,36 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface FiltersDto
- */
-export interface FiltersDto {
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof FiltersDto
-     */
-    'categories': Array<string>;
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof FiltersDto
-     */
-    'districts': Array<string>;
-}
-
Index: src/services/api/models/get-buildings-result-dto-buildings-value.ts
===================================================================
diff --git a/src/services/api/models/get-buildings-result-dto-buildings-value.ts b/src/services/api/models/get-buildings-result-dto-buildings-value.ts
deleted file mode 100644
--- a/src/services/api/models/get-buildings-result-dto-buildings-value.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,105 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingEntityOffersInner } from './building-entity-offers-inner';
-
-/**
- * 
- * @export
- * @interface GetBuildingsResultDtoBuildingsValue
- */
-export interface GetBuildingsResultDtoBuildingsValue {
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoBuildingsValue
-     */
-    'id': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoBuildingsValue
-     */
-    'partnerId': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoBuildingsValue
-     */
-    'phone': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoBuildingsValue
-     */
-    'city': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoBuildingsValue
-     */
-    'district': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoBuildingsValue
-     */
-    'street': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoBuildingsValue
-     */
-    'houseNumber': string;
-    /**
-     * 
-     * @type {number}
-     * @memberof GetBuildingsResultDtoBuildingsValue
-     */
-    'lat': number;
-    /**
-     * 
-     * @type {number}
-     * @memberof GetBuildingsResultDtoBuildingsValue
-     */
-    'lon': number;
-    /**
-     * 
-     * @type {Array<BuildingEntityOffersInner>}
-     * @memberof GetBuildingsResultDtoBuildingsValue
-     */
-    'offers': Array<BuildingEntityOffersInner>;
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoBuildingsValue
-     */
-    'createdAt': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoBuildingsValue
-     */
-    'updatedAt': string;
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof GetBuildingsResultDtoBuildingsValue
-     */
-    'categories': Array<string>;
-}
-
Index: src/services/api/models/get-buildings-result-dto-partners-value.ts
===================================================================
diff --git a/src/services/api/models/get-buildings-result-dto-partners-value.ts b/src/services/api/models/get-buildings-result-dto-partners-value.ts
deleted file mode 100644
--- a/src/services/api/models/get-buildings-result-dto-partners-value.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,72 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface GetBuildingsResultDtoPartnersValue
- */
-export interface GetBuildingsResultDtoPartnersValue {
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoPartnersValue
-     */
-    'id': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoPartnersValue
-     */
-    'logo': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoPartnersValue
-     */
-    'name': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoPartnersValue
-     */
-    'url': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoPartnersValue
-     */
-    'phone': string | null;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof GetBuildingsResultDtoPartnersValue
-     */
-    'servicePartner': boolean;
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoPartnersValue
-     */
-    'createdAt': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof GetBuildingsResultDtoPartnersValue
-     */
-    'updatedAt': string;
-}
-
Index: src/services/api/models/get-buildings-result-dto.ts
===================================================================
diff --git a/src/services/api/models/get-buildings-result-dto.ts b/src/services/api/models/get-buildings-result-dto.ts
deleted file mode 100644
--- a/src/services/api/models/get-buildings-result-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,51 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingEntityCategoriesInner } from './building-entity-categories-inner';
-// May contain unused imports in some cases
-// @ts-ignore
-import { GetBuildingsResultDtoBuildingsValue } from './get-buildings-result-dto-buildings-value';
-// May contain unused imports in some cases
-// @ts-ignore
-import { GetBuildingsResultDtoPartnersValue } from './get-buildings-result-dto-partners-value';
-
-/**
- * 
- * @export
- * @interface GetBuildingsResultDto
- */
-export interface GetBuildingsResultDto {
-    /**
-     * 
-     * @type {{ [key: string]: GetBuildingsResultDtoPartnersValue; }}
-     * @memberof GetBuildingsResultDto
-     */
-    'partners': { [key: string]: GetBuildingsResultDtoPartnersValue; };
-    /**
-     * 
-     * @type {{ [key: string]: GetBuildingsResultDtoBuildingsValue; }}
-     * @memberof GetBuildingsResultDto
-     */
-    'buildings': { [key: string]: GetBuildingsResultDtoBuildingsValue; };
-    /**
-     * 
-     * @type {{ [key: string]: BuildingEntityCategoriesInner; }}
-     * @memberof GetBuildingsResultDto
-     */
-    'categories': { [key: string]: BuildingEntityCategoriesInner; };
-}
-
Index: src/services/api/models/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/models/index.ts b/src/services/api/models/index.ts
--- a/src/services/api/models/index.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/services/api/models/index.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -1,68 +1,17 @@
-export * from './building-categories-controller-find200-response';
-export * from './building-categories-controller-find200-response-all-of';
-export * from './building-categories-controller-find-one404-response';
-export * from './building-categories-sorting-dto';
-export * from './building-category-entity';
-export * from './building-entity';
-export * from './building-entity-categories-inner';
-export * from './building-entity-offers-inner';
-export * from './building-offer-entity';
-export * from './building-offers-controller-create404-response';
-export * from './building-offers-controller-remove404-response';
-export * from './buildings-controller-create404-response';
-export * from './buildings-controller-find200-response';
-export * from './buildings-controller-find200-response-all-of';
-export * from './buildings-controller-find-one404-response';
-export * from './buildings-sorting-dto';
-export * from './create-building-category-dto';
-export * from './create-building-dto';
-export * from './create-building-offer-dto';
-export * from './create-partner-dto';
-export * from './create-post-category-dto';
-export * from './create-post-dto';
-export * from './create-user-dto';
-export * from './filters-dto';
-export * from './get-buildings-result-dto';
-export * from './get-buildings-result-dto-buildings-value';
-export * from './get-buildings-result-dto-partners-value';
-export * from './paginated-entity';
-export * from './pagination-dto';
-export * from './partner-entity';
-export * from './partners-controller-create400-response';
-export * from './partners-controller-find200-response';
-export * from './partners-controller-find200-response-all-of';
-export * from './partners-controller-find400-response';
-export * from './partners-controller-find403-response';
-export * from './partners-controller-find-one404-response';
-export * from './partners-sorting-dto';
-export * from './post-categories-controller-find200-response';
-export * from './post-categories-controller-find200-response-all-of';
-export * from './post-categories-controller-find-one404-response';
-export * from './post-categories-sorting-dto';
-export * from './post-category-entity';
-export * from './post-entity';
-export * from './post-entity-assets-inner';
-export * from './post-preview-entity';
-export * from './posts-controller-find200-response';
-export * from './posts-controller-find200-response-all-of';
-export * from './posts-controller-find-one404-response';
-export * from './posts-sorting-dto';
-export * from './public-controller-find-one404-response';
-export * from './public-controller-posts200-response';
-export * from './public-controller-posts200-response-all-of';
-export * from './public-post-entity';
-export * from './public-post-preview-entity';
-export * from './update-building-categories-on-building-dto';
-export * from './update-building-category-dto';
-export * from './update-building-dto';
-export * from './update-building-offer-dto';
-export * from './update-partner-dto';
-export * from './update-post-category-dto';
-export * from './update-post-dto';
-export * from './update-user-dto';
-export * from './upload-controller-upload401-response';
-export * from './upload-controller-upload422-response';
-export * from './upload-result-dto';
-export * from './upload-result-dto-files-inner';
-export * from './user-entity';
-export * from './users-controller-find-one404-response';
+/* tslint:disable */
+/* eslint-disable */
+export * from './CreateObjectDto';
+export * from './CreateOwnerDto';
+export * from './ObjectEntity';
+export * from './ObjectsControllerAddOwner400Response';
+export * from './ObjectsControllerFind200Response';
+export * from './ObjectsControllerFind200ResponseAllOf';
+export * from './ObjectsControllerFind401Response';
+export * from './ObjectsControllerFindOne404Response';
+export * from './ObjectsControllerGetOwners200Response';
+export * from './ObjectsControllerGetOwners200ResponseAllOf';
+export * from './ObjectsControllerRemoveOwner400Response';
+export * from './ObjectsControllerRemoveOwner404Response';
+export * from './OwnerEntity';
+export * from './PaginationResultDto';
+export * from './UpdateObjectDto';
Index: src/services/api/models/paginated-entity.ts
===================================================================
diff --git a/src/services/api/models/paginated-entity.ts b/src/services/api/models/paginated-entity.ts
deleted file mode 100644
--- a/src/services/api/models/paginated-entity.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,36 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface PaginatedEntity
- */
-export interface PaginatedEntity {
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof PaginatedEntity
-     */
-    'data': Array<string>;
-    /**
-     * 
-     * @type {number}
-     * @memberof PaginatedEntity
-     */
-    'total': number;
-}
-
Index: src/services/api/models/pagination-dto.ts
===================================================================
diff --git a/src/services/api/models/pagination-dto.ts b/src/services/api/models/pagination-dto.ts
deleted file mode 100644
--- a/src/services/api/models/pagination-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,36 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface PaginationDto
- */
-export interface PaginationDto {
-    /**
-     * 
-     * @type {number}
-     * @memberof PaginationDto
-     */
-    'take'?: number | null;
-    /**
-     * 
-     * @type {number}
-     * @memberof PaginationDto
-     */
-    'skip'?: number | null;
-}
-
Index: src/services/api/models/pagination-result-dto.ts
===================================================================
diff --git a/src/services/api/models/pagination-result-dto.ts b/src/services/api/models/pagination-result-dto.ts
deleted file mode 100644
--- a/src/services/api/models/pagination-result-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,36 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Пожликбез APIирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: kurskatm@gmail.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface PaginationResultDto
- */
-export interface PaginationResultDto {
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof PaginationResultDto
-     */
-    'data': Array<string>;
-    /**
-     * 
-     * @type {number}
-     * @memberof PaginationResultDto
-     */
-    'total': number;
-}
-
Index: src/services/api/models/partner-entity.ts
===================================================================
diff --git a/src/services/api/models/partner-entity.ts b/src/services/api/models/partner-entity.ts
deleted file mode 100644
--- a/src/services/api/models/partner-entity.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,72 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface PartnerEntity
- */
-export interface PartnerEntity {
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnerEntity
-     */
-    'id': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnerEntity
-     */
-    'logo': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnerEntity
-     */
-    'name': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnerEntity
-     */
-    'url': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnerEntity
-     */
-    'phone': string | null;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof PartnerEntity
-     */
-    'servicePartner': boolean;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnerEntity
-     */
-    'createdAt': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnerEntity
-     */
-    'updatedAt': string;
-}
-
Index: src/services/api/models/partners-controller-create400-response.ts
===================================================================
diff --git a/src/services/api/models/partners-controller-create400-response.ts b/src/services/api/models/partners-controller-create400-response.ts
deleted file mode 100644
--- a/src/services/api/models/partners-controller-create400-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Картинка не найдена во временном бакете.
- * @export
- * @interface PartnersControllerCreate400Response
- */
-export interface PartnersControllerCreate400Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof PartnersControllerCreate400Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersControllerCreate400Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersControllerCreate400Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/partners-controller-find-all200-response-all-of.ts
===================================================================
diff --git a/src/services/api/models/partners-controller-find-all200-response-all-of.ts b/src/services/api/models/partners-controller-find-all200-response-all-of.ts
deleted file mode 100644
--- a/src/services/api/models/partners-controller-find-all200-response-all-of.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,33 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Пожликбез APIирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: kurskatm@gmail.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { PartnerEntity } from './partner-entity';
-
-/**
- * 
- * @export
- * @interface PartnersControllerFindAll200ResponseAllOf
- */
-export interface PartnersControllerFindAll200ResponseAllOf {
-    /**
-     * 
-     * @type {Array<PartnerEntity>}
-     * @memberof PartnersControllerFindAll200ResponseAllOf
-     */
-    'data'?: Array<PartnerEntity>;
-}
-
Index: src/services/api/models/partners-controller-find-all200-response.ts
===================================================================
diff --git a/src/services/api/models/partners-controller-find-all200-response.ts b/src/services/api/models/partners-controller-find-all200-response.ts
deleted file mode 100644
--- a/src/services/api/models/partners-controller-find-all200-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,32 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Пожликбез APIирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: kurskatm@gmail.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { PaginationResultDto } from './pagination-result-dto';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PartnerEntity } from './partner-entity';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PartnersControllerFindAll200ResponseAllOf } from './partners-controller-find-all200-response-all-of';
-
-/**
- * @type PartnersControllerFindAll200Response
- * @export
- */
-export type PartnersControllerFindAll200Response = PaginationResultDto & PartnersControllerFindAll200ResponseAllOf;
-
-
Index: src/services/api/models/partners-controller-find-all401-response.ts
===================================================================
diff --git a/src/services/api/models/partners-controller-find-all401-response.ts b/src/services/api/models/partners-controller-find-all401-response.ts
deleted file mode 100644
--- a/src/services/api/models/partners-controller-find-all401-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Пожликбез APIирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: kurskatm@gmail.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Не был передан access token.
- * @export
- * @interface PartnersControllerFindAll401Response
- */
-export interface PartnersControllerFindAll401Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof PartnersControllerFindAll401Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersControllerFindAll401Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersControllerFindAll401Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/partners-controller-find-all403-response.ts
===================================================================
diff --git a/src/services/api/models/partners-controller-find-all403-response.ts b/src/services/api/models/partners-controller-find-all403-response.ts
deleted file mode 100644
--- a/src/services/api/models/partners-controller-find-all403-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Пожликбез APIирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: kurskatm@gmail.com
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Недостаточно прав.
- * @export
- * @interface PartnersControllerFindAll403Response
- */
-export interface PartnersControllerFindAll403Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof PartnersControllerFindAll403Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersControllerFindAll403Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersControllerFindAll403Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/partners-controller-find-one404-response.ts
===================================================================
diff --git a/src/services/api/models/partners-controller-find-one404-response.ts b/src/services/api/models/partners-controller-find-one404-response.ts
deleted file mode 100644
--- a/src/services/api/models/partners-controller-find-one404-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Указанный партнёр не найден.
- * @export
- * @interface PartnersControllerFindOne404Response
- */
-export interface PartnersControllerFindOne404Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof PartnersControllerFindOne404Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersControllerFindOne404Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersControllerFindOne404Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/partners-controller-find200-response-all-of.ts
===================================================================
diff --git a/src/services/api/models/partners-controller-find200-response-all-of.ts b/src/services/api/models/partners-controller-find200-response-all-of.ts
deleted file mode 100644
--- a/src/services/api/models/partners-controller-find200-response-all-of.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,33 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { PartnerEntity } from './partner-entity';
-
-/**
- * 
- * @export
- * @interface PartnersControllerFind200ResponseAllOf
- */
-export interface PartnersControllerFind200ResponseAllOf {
-    /**
-     * 
-     * @type {Array<PartnerEntity>}
-     * @memberof PartnersControllerFind200ResponseAllOf
-     */
-    'data'?: Array<PartnerEntity>;
-}
-
Index: src/services/api/models/partners-controller-find200-response.ts
===================================================================
diff --git a/src/services/api/models/partners-controller-find200-response.ts b/src/services/api/models/partners-controller-find200-response.ts
deleted file mode 100644
--- a/src/services/api/models/partners-controller-find200-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,32 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { PaginatedEntity } from './paginated-entity';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PartnerEntity } from './partner-entity';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PartnersControllerFind200ResponseAllOf } from './partners-controller-find200-response-all-of';
-
-/**
- * @type PartnersControllerFind200Response
- * @export
- */
-export type PartnersControllerFind200Response = PaginatedEntity & PartnersControllerFind200ResponseAllOf;
-
-
Index: src/services/api/models/partners-controller-find400-response.ts
===================================================================
diff --git a/src/services/api/models/partners-controller-find400-response.ts b/src/services/api/models/partners-controller-find400-response.ts
deleted file mode 100644
--- a/src/services/api/models/partners-controller-find400-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Ошибка валидации.
- * @export
- * @interface PartnersControllerFind400Response
- */
-export interface PartnersControllerFind400Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof PartnersControllerFind400Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersControllerFind400Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersControllerFind400Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/partners-controller-find403-response.ts
===================================================================
diff --git a/src/services/api/models/partners-controller-find403-response.ts b/src/services/api/models/partners-controller-find403-response.ts
deleted file mode 100644
--- a/src/services/api/models/partners-controller-find403-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Недостаточно прав.
- * @export
- * @interface PartnersControllerFind403Response
- */
-export interface PartnersControllerFind403Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof PartnersControllerFind403Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersControllerFind403Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersControllerFind403Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/partners-sorting-dto.ts
===================================================================
diff --git a/src/services/api/models/partners-sorting-dto.ts b/src/services/api/models/partners-sorting-dto.ts
deleted file mode 100644
--- a/src/services/api/models/partners-sorting-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,122 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface PartnersSortingDto
- */
-export interface PartnersSortingDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersSortingDto
-     */
-    'id'?: PartnersSortingDtoIdEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersSortingDto
-     */
-    'logo'?: PartnersSortingDtoLogoEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersSortingDto
-     */
-    'name'?: PartnersSortingDtoNameEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersSortingDto
-     */
-    'url'?: PartnersSortingDtoUrlEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersSortingDto
-     */
-    'phone'?: PartnersSortingDtoPhoneEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersSortingDto
-     */
-    'servicePartner'?: PartnersSortingDtoServicePartnerEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersSortingDto
-     */
-    'createdAt'?: PartnersSortingDtoCreatedAtEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PartnersSortingDto
-     */
-    'updatedAt'?: PartnersSortingDtoUpdatedAtEnum;
-}
-
-export const PartnersSortingDtoIdEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PartnersSortingDtoIdEnum = typeof PartnersSortingDtoIdEnum[keyof typeof PartnersSortingDtoIdEnum];
-export const PartnersSortingDtoLogoEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PartnersSortingDtoLogoEnum = typeof PartnersSortingDtoLogoEnum[keyof typeof PartnersSortingDtoLogoEnum];
-export const PartnersSortingDtoNameEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PartnersSortingDtoNameEnum = typeof PartnersSortingDtoNameEnum[keyof typeof PartnersSortingDtoNameEnum];
-export const PartnersSortingDtoUrlEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PartnersSortingDtoUrlEnum = typeof PartnersSortingDtoUrlEnum[keyof typeof PartnersSortingDtoUrlEnum];
-export const PartnersSortingDtoPhoneEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PartnersSortingDtoPhoneEnum = typeof PartnersSortingDtoPhoneEnum[keyof typeof PartnersSortingDtoPhoneEnum];
-export const PartnersSortingDtoServicePartnerEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PartnersSortingDtoServicePartnerEnum = typeof PartnersSortingDtoServicePartnerEnum[keyof typeof PartnersSortingDtoServicePartnerEnum];
-export const PartnersSortingDtoCreatedAtEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PartnersSortingDtoCreatedAtEnum = typeof PartnersSortingDtoCreatedAtEnum[keyof typeof PartnersSortingDtoCreatedAtEnum];
-export const PartnersSortingDtoUpdatedAtEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PartnersSortingDtoUpdatedAtEnum = typeof PartnersSortingDtoUpdatedAtEnum[keyof typeof PartnersSortingDtoUpdatedAtEnum];
-
-
Index: src/services/api/models/post-categories-controller-find-one404-response.ts
===================================================================
diff --git a/src/services/api/models/post-categories-controller-find-one404-response.ts b/src/services/api/models/post-categories-controller-find-one404-response.ts
deleted file mode 100644
--- a/src/services/api/models/post-categories-controller-find-one404-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Указанная категория статей не найдена.
- * @export
- * @interface PostCategoriesControllerFindOne404Response
- */
-export interface PostCategoriesControllerFindOne404Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof PostCategoriesControllerFindOne404Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoriesControllerFindOne404Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoriesControllerFindOne404Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/post-categories-controller-find200-response-all-of.ts
===================================================================
diff --git a/src/services/api/models/post-categories-controller-find200-response-all-of.ts b/src/services/api/models/post-categories-controller-find200-response-all-of.ts
deleted file mode 100644
--- a/src/services/api/models/post-categories-controller-find200-response-all-of.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,33 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { PostCategoryEntity } from './post-category-entity';
-
-/**
- * 
- * @export
- * @interface PostCategoriesControllerFind200ResponseAllOf
- */
-export interface PostCategoriesControllerFind200ResponseAllOf {
-    /**
-     * 
-     * @type {Array<PostCategoryEntity>}
-     * @memberof PostCategoriesControllerFind200ResponseAllOf
-     */
-    'data'?: Array<PostCategoryEntity>;
-}
-
Index: src/services/api/models/post-categories-controller-find200-response.ts
===================================================================
diff --git a/src/services/api/models/post-categories-controller-find200-response.ts b/src/services/api/models/post-categories-controller-find200-response.ts
deleted file mode 100644
--- a/src/services/api/models/post-categories-controller-find200-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,32 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { PaginatedEntity } from './paginated-entity';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PostCategoriesControllerFind200ResponseAllOf } from './post-categories-controller-find200-response-all-of';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PostCategoryEntity } from './post-category-entity';
-
-/**
- * @type PostCategoriesControllerFind200Response
- * @export
- */
-export type PostCategoriesControllerFind200Response = PaginatedEntity & PostCategoriesControllerFind200ResponseAllOf;
-
-
Index: src/services/api/models/post-categories-sorting-dto.ts
===================================================================
diff --git a/src/services/api/models/post-categories-sorting-dto.ts b/src/services/api/models/post-categories-sorting-dto.ts
deleted file mode 100644
--- a/src/services/api/models/post-categories-sorting-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,86 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface PostCategoriesSortingDto
- */
-export interface PostCategoriesSortingDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoriesSortingDto
-     */
-    'id'?: PostCategoriesSortingDtoIdEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoriesSortingDto
-     */
-    'name'?: PostCategoriesSortingDtoNameEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoriesSortingDto
-     */
-    'lowerName'?: PostCategoriesSortingDtoLowerNameEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoriesSortingDto
-     */
-    'createdAt'?: PostCategoriesSortingDtoCreatedAtEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoriesSortingDto
-     */
-    'updatedAt'?: PostCategoriesSortingDtoUpdatedAtEnum;
-}
-
-export const PostCategoriesSortingDtoIdEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PostCategoriesSortingDtoIdEnum = typeof PostCategoriesSortingDtoIdEnum[keyof typeof PostCategoriesSortingDtoIdEnum];
-export const PostCategoriesSortingDtoNameEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PostCategoriesSortingDtoNameEnum = typeof PostCategoriesSortingDtoNameEnum[keyof typeof PostCategoriesSortingDtoNameEnum];
-export const PostCategoriesSortingDtoLowerNameEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PostCategoriesSortingDtoLowerNameEnum = typeof PostCategoriesSortingDtoLowerNameEnum[keyof typeof PostCategoriesSortingDtoLowerNameEnum];
-export const PostCategoriesSortingDtoCreatedAtEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PostCategoriesSortingDtoCreatedAtEnum = typeof PostCategoriesSortingDtoCreatedAtEnum[keyof typeof PostCategoriesSortingDtoCreatedAtEnum];
-export const PostCategoriesSortingDtoUpdatedAtEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PostCategoriesSortingDtoUpdatedAtEnum = typeof PostCategoriesSortingDtoUpdatedAtEnum[keyof typeof PostCategoriesSortingDtoUpdatedAtEnum];
-
-
Index: src/services/api/models/post-category-entity.ts
===================================================================
diff --git a/src/services/api/models/post-category-entity.ts b/src/services/api/models/post-category-entity.ts
deleted file mode 100644
--- a/src/services/api/models/post-category-entity.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,54 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface PostCategoryEntity
- */
-export interface PostCategoryEntity {
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoryEntity
-     */
-    'id': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoryEntity
-     */
-    'name': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoryEntity
-     */
-    'lowerName': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoryEntity
-     */
-    'createdAt': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostCategoryEntity
-     */
-    'updatedAt': string;
-}
-
Index: src/services/api/models/post-entity-assets-inner.ts
===================================================================
diff --git a/src/services/api/models/post-entity-assets-inner.ts b/src/services/api/models/post-entity-assets-inner.ts
deleted file mode 100644
--- a/src/services/api/models/post-entity-assets-inner.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface PostEntityAssetsInner
- */
-export interface PostEntityAssetsInner {
-    /**
-     * 
-     * @type {string}
-     * @memberof PostEntityAssetsInner
-     */
-    'postId': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostEntityAssetsInner
-     */
-    'fileName': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostEntityAssetsInner
-     */
-    'fileUrl': string;
-}
-
Index: src/services/api/models/post-entity.ts
===================================================================
diff --git a/src/services/api/models/post-entity.ts b/src/services/api/models/post-entity.ts
deleted file mode 100644
--- a/src/services/api/models/post-entity.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,90 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingEntityCategoriesInner } from './building-entity-categories-inner';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PostEntityAssetsInner } from './post-entity-assets-inner';
-
-/**
- * 
- * @export
- * @interface PostEntity
- */
-export interface PostEntity {
-    /**
-     * 
-     * @type {string}
-     * @memberof PostEntity
-     */
-    'id': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostEntity
-     */
-    'title': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostEntity
-     */
-    'description': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostEntity
-     */
-    'previewUrl': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostEntity
-     */
-    'content': string;
-    /**
-     * 
-     * @type {Array<PostEntityAssetsInner>}
-     * @memberof PostEntity
-     */
-    'assets': Array<PostEntityAssetsInner>;
-    /**
-     * 
-     * @type {Array<BuildingEntityCategoriesInner>}
-     * @memberof PostEntity
-     */
-    'categories': Array<BuildingEntityCategoriesInner>;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof PostEntity
-     */
-    'published'?: boolean;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostEntity
-     */
-    'createdAt': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostEntity
-     */
-    'updatedAt': string;
-}
-
Index: src/services/api/models/post-preview-entity.ts
===================================================================
diff --git a/src/services/api/models/post-preview-entity.ts b/src/services/api/models/post-preview-entity.ts
deleted file mode 100644
--- a/src/services/api/models/post-preview-entity.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,75 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingEntityCategoriesInner } from './building-entity-categories-inner';
-
-/**
- * 
- * @export
- * @interface PostPreviewEntity
- */
-export interface PostPreviewEntity {
-    /**
-     * 
-     * @type {string}
-     * @memberof PostPreviewEntity
-     */
-    'id': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostPreviewEntity
-     */
-    'title': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostPreviewEntity
-     */
-    'description': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostPreviewEntity
-     */
-    'previewUrl': string | null;
-    /**
-     * 
-     * @type {Array<BuildingEntityCategoriesInner>}
-     * @memberof PostPreviewEntity
-     */
-    'categories': Array<BuildingEntityCategoriesInner>;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof PostPreviewEntity
-     */
-    'published'?: boolean;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostPreviewEntity
-     */
-    'createdAt': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostPreviewEntity
-     */
-    'updatedAt': string;
-}
-
Index: src/services/api/models/posts-controller-find-one404-response.ts
===================================================================
diff --git a/src/services/api/models/posts-controller-find-one404-response.ts b/src/services/api/models/posts-controller-find-one404-response.ts
deleted file mode 100644
--- a/src/services/api/models/posts-controller-find-one404-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Указанная статья не найдена.
- * @export
- * @interface PostsControllerFindOne404Response
- */
-export interface PostsControllerFindOne404Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof PostsControllerFindOne404Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostsControllerFindOne404Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostsControllerFindOne404Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/posts-controller-find200-response-all-of.ts
===================================================================
diff --git a/src/services/api/models/posts-controller-find200-response-all-of.ts b/src/services/api/models/posts-controller-find200-response-all-of.ts
deleted file mode 100644
--- a/src/services/api/models/posts-controller-find200-response-all-of.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,33 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { PostPreviewEntity } from './post-preview-entity';
-
-/**
- * 
- * @export
- * @interface PostsControllerFind200ResponseAllOf
- */
-export interface PostsControllerFind200ResponseAllOf {
-    /**
-     * 
-     * @type {Array<PostPreviewEntity>}
-     * @memberof PostsControllerFind200ResponseAllOf
-     */
-    'data'?: Array<PostPreviewEntity>;
-}
-
Index: src/services/api/models/posts-controller-find200-response.ts
===================================================================
diff --git a/src/services/api/models/posts-controller-find200-response.ts b/src/services/api/models/posts-controller-find200-response.ts
deleted file mode 100644
--- a/src/services/api/models/posts-controller-find200-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,32 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { PaginatedEntity } from './paginated-entity';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PostPreviewEntity } from './post-preview-entity';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PostsControllerFind200ResponseAllOf } from './posts-controller-find200-response-all-of';
-
-/**
- * @type PostsControllerFind200Response
- * @export
- */
-export type PostsControllerFind200Response = PaginatedEntity & PostsControllerFind200ResponseAllOf;
-
-
Index: src/services/api/models/posts-sorting-dto.ts
===================================================================
diff --git a/src/services/api/models/posts-sorting-dto.ts b/src/services/api/models/posts-sorting-dto.ts
deleted file mode 100644
--- a/src/services/api/models/posts-sorting-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,110 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface PostsSortingDto
- */
-export interface PostsSortingDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof PostsSortingDto
-     */
-    'id'?: PostsSortingDtoIdEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostsSortingDto
-     */
-    'title'?: PostsSortingDtoTitleEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostsSortingDto
-     */
-    'description'?: PostsSortingDtoDescriptionEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostsSortingDto
-     */
-    'previewUrl'?: PostsSortingDtoPreviewUrlEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostsSortingDto
-     */
-    'published'?: PostsSortingDtoPublishedEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostsSortingDto
-     */
-    'createdAt'?: PostsSortingDtoCreatedAtEnum;
-    /**
-     * 
-     * @type {string}
-     * @memberof PostsSortingDto
-     */
-    'updatedAt'?: PostsSortingDtoUpdatedAtEnum;
-}
-
-export const PostsSortingDtoIdEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PostsSortingDtoIdEnum = typeof PostsSortingDtoIdEnum[keyof typeof PostsSortingDtoIdEnum];
-export const PostsSortingDtoTitleEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PostsSortingDtoTitleEnum = typeof PostsSortingDtoTitleEnum[keyof typeof PostsSortingDtoTitleEnum];
-export const PostsSortingDtoDescriptionEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PostsSortingDtoDescriptionEnum = typeof PostsSortingDtoDescriptionEnum[keyof typeof PostsSortingDtoDescriptionEnum];
-export const PostsSortingDtoPreviewUrlEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PostsSortingDtoPreviewUrlEnum = typeof PostsSortingDtoPreviewUrlEnum[keyof typeof PostsSortingDtoPreviewUrlEnum];
-export const PostsSortingDtoPublishedEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PostsSortingDtoPublishedEnum = typeof PostsSortingDtoPublishedEnum[keyof typeof PostsSortingDtoPublishedEnum];
-export const PostsSortingDtoCreatedAtEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PostsSortingDtoCreatedAtEnum = typeof PostsSortingDtoCreatedAtEnum[keyof typeof PostsSortingDtoCreatedAtEnum];
-export const PostsSortingDtoUpdatedAtEnum = {
-    Asc: 'asc',
-    Desc: 'desc'
-} as const;
-
-export type PostsSortingDtoUpdatedAtEnum = typeof PostsSortingDtoUpdatedAtEnum[keyof typeof PostsSortingDtoUpdatedAtEnum];
-
-
Index: src/services/api/models/public-controller-find-one404-response.ts
===================================================================
diff --git a/src/services/api/models/public-controller-find-one404-response.ts b/src/services/api/models/public-controller-find-one404-response.ts
deleted file mode 100644
--- a/src/services/api/models/public-controller-find-one404-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Указанная статья не найдена.
- * @export
- * @interface PublicControllerFindOne404Response
- */
-export interface PublicControllerFindOne404Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof PublicControllerFindOne404Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicControllerFindOne404Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicControllerFindOne404Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/public-controller-posts200-response-all-of.ts
===================================================================
diff --git a/src/services/api/models/public-controller-posts200-response-all-of.ts b/src/services/api/models/public-controller-posts200-response-all-of.ts
deleted file mode 100644
--- a/src/services/api/models/public-controller-posts200-response-all-of.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,33 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { PublicPostPreviewEntity } from './public-post-preview-entity';
-
-/**
- * 
- * @export
- * @interface PublicControllerPosts200ResponseAllOf
- */
-export interface PublicControllerPosts200ResponseAllOf {
-    /**
-     * 
-     * @type {Array<PublicPostPreviewEntity>}
-     * @memberof PublicControllerPosts200ResponseAllOf
-     */
-    'data'?: Array<PublicPostPreviewEntity>;
-}
-
Index: src/services/api/models/public-controller-posts200-response.ts
===================================================================
diff --git a/src/services/api/models/public-controller-posts200-response.ts b/src/services/api/models/public-controller-posts200-response.ts
deleted file mode 100644
--- a/src/services/api/models/public-controller-posts200-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,32 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { PaginatedEntity } from './paginated-entity';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PublicControllerPosts200ResponseAllOf } from './public-controller-posts200-response-all-of';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PublicPostPreviewEntity } from './public-post-preview-entity';
-
-/**
- * @type PublicControllerPosts200Response
- * @export
- */
-export type PublicControllerPosts200Response = PaginatedEntity & PublicControllerPosts200ResponseAllOf;
-
-
Index: src/services/api/models/public-post-entity.ts
===================================================================
diff --git a/src/services/api/models/public-post-entity.ts b/src/services/api/models/public-post-entity.ts
deleted file mode 100644
--- a/src/services/api/models/public-post-entity.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,90 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingEntityCategoriesInner } from './building-entity-categories-inner';
-// May contain unused imports in some cases
-// @ts-ignore
-import { PostEntityAssetsInner } from './post-entity-assets-inner';
-
-/**
- * 
- * @export
- * @interface PublicPostEntity
- */
-export interface PublicPostEntity {
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicPostEntity
-     */
-    'id': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicPostEntity
-     */
-    'title': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicPostEntity
-     */
-    'description': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicPostEntity
-     */
-    'previewUrl': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicPostEntity
-     */
-    'content': string;
-    /**
-     * 
-     * @type {Array<PostEntityAssetsInner>}
-     * @memberof PublicPostEntity
-     */
-    'assets': Array<PostEntityAssetsInner>;
-    /**
-     * 
-     * @type {Array<BuildingEntityCategoriesInner>}
-     * @memberof PublicPostEntity
-     */
-    'categories': Array<BuildingEntityCategoriesInner>;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof PublicPostEntity
-     */
-    'published'?: boolean;
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicPostEntity
-     */
-    'createdAt': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicPostEntity
-     */
-    'updatedAt': string;
-}
-
Index: src/services/api/models/public-post-preview-entity.ts
===================================================================
diff --git a/src/services/api/models/public-post-preview-entity.ts b/src/services/api/models/public-post-preview-entity.ts
deleted file mode 100644
--- a/src/services/api/models/public-post-preview-entity.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,69 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { BuildingEntityCategoriesInner } from './building-entity-categories-inner';
-
-/**
- * 
- * @export
- * @interface PublicPostPreviewEntity
- */
-export interface PublicPostPreviewEntity {
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicPostPreviewEntity
-     */
-    'id': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicPostPreviewEntity
-     */
-    'title': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicPostPreviewEntity
-     */
-    'description': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicPostPreviewEntity
-     */
-    'previewUrl': string | null;
-    /**
-     * 
-     * @type {Array<BuildingEntityCategoriesInner>}
-     * @memberof PublicPostPreviewEntity
-     */
-    'categories': Array<BuildingEntityCategoriesInner>;
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicPostPreviewEntity
-     */
-    'createdAt': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof PublicPostPreviewEntity
-     */
-    'updatedAt': string;
-}
-
Index: src/services/api/models/update-building-categories-on-building-dto.ts
===================================================================
diff --git a/src/services/api/models/update-building-categories-on-building-dto.ts b/src/services/api/models/update-building-categories-on-building-dto.ts
deleted file mode 100644
--- a/src/services/api/models/update-building-categories-on-building-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,30 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface UpdateBuildingCategoriesOnBuildingDto
- */
-export interface UpdateBuildingCategoriesOnBuildingDto {
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof UpdateBuildingCategoriesOnBuildingDto
-     */
-    'categories': Array<string>;
-}
-
Index: src/services/api/models/update-building-category-dto.ts
===================================================================
diff --git a/src/services/api/models/update-building-category-dto.ts b/src/services/api/models/update-building-category-dto.ts
deleted file mode 100644
--- a/src/services/api/models/update-building-category-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,30 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface UpdateBuildingCategoryDto
- */
-export interface UpdateBuildingCategoryDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateBuildingCategoryDto
-     */
-    'name'?: string;
-}
-
Index: src/services/api/models/update-building-dto.ts
===================================================================
diff --git a/src/services/api/models/update-building-dto.ts b/src/services/api/models/update-building-dto.ts
deleted file mode 100644
--- a/src/services/api/models/update-building-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,78 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface UpdateBuildingDto
- */
-export interface UpdateBuildingDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateBuildingDto
-     */
-    'partnerId'?: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateBuildingDto
-     */
-    'phone'?: string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateBuildingDto
-     */
-    'city'?: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateBuildingDto
-     */
-    'district'?: string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateBuildingDto
-     */
-    'street'?: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateBuildingDto
-     */
-    'houseNumber'?: string;
-    /**
-     * 
-     * @type {number}
-     * @memberof UpdateBuildingDto
-     */
-    'lat'?: number;
-    /**
-     * 
-     * @type {number}
-     * @memberof UpdateBuildingDto
-     */
-    'lon'?: number;
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof UpdateBuildingDto
-     */
-    'categories'?: Array<string>;
-}
-
Index: src/services/api/models/update-building-offer-dto.ts
===================================================================
diff --git a/src/services/api/models/update-building-offer-dto.ts b/src/services/api/models/update-building-offer-dto.ts
deleted file mode 100644
--- a/src/services/api/models/update-building-offer-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,36 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface UpdateBuildingOfferDto
- */
-export interface UpdateBuildingOfferDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateBuildingOfferDto
-     */
-    'name'?: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateBuildingOfferDto
-     */
-    'description'?: string;
-}
-
Index: src/services/api/models/update-partner-dto.ts
===================================================================
diff --git a/src/services/api/models/update-partner-dto.ts b/src/services/api/models/update-partner-dto.ts
deleted file mode 100644
--- a/src/services/api/models/update-partner-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,54 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface UpdatePartnerDto
- */
-export interface UpdatePartnerDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdatePartnerDto
-     */
-    'logo'?: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdatePartnerDto
-     */
-    'name'?: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdatePartnerDto
-     */
-    'url'?: string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdatePartnerDto
-     */
-    'phone'?: string | null;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof UpdatePartnerDto
-     */
-    'servicePartner'?: boolean;
-}
-
Index: src/services/api/models/update-post-category-dto.ts
===================================================================
diff --git a/src/services/api/models/update-post-category-dto.ts b/src/services/api/models/update-post-category-dto.ts
deleted file mode 100644
--- a/src/services/api/models/update-post-category-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,30 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface UpdatePostCategoryDto
- */
-export interface UpdatePostCategoryDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdatePostCategoryDto
-     */
-    'name'?: string;
-}
-
Index: src/services/api/models/update-post-dto.ts
===================================================================
diff --git a/src/services/api/models/update-post-dto.ts b/src/services/api/models/update-post-dto.ts
deleted file mode 100644
--- a/src/services/api/models/update-post-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,66 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface UpdatePostDto
- */
-export interface UpdatePostDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdatePostDto
-     */
-    'title'?: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdatePostDto
-     */
-    'description'?: string;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdatePostDto
-     */
-    'content'?: string;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof UpdatePostDto
-     */
-    'published'?: boolean;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdatePostDto
-     */
-    'previewUrl'?: string;
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof UpdatePostDto
-     */
-    'assets'?: Array<string>;
-    /**
-     * 
-     * @type {Array<string>}
-     * @memberof UpdatePostDto
-     */
-    'categories'?: Array<string>;
-}
-
Index: src/services/api/models/update-user-dto.ts
===================================================================
diff --git a/src/services/api/models/update-user-dto.ts b/src/services/api/models/update-user-dto.ts
deleted file mode 100644
--- a/src/services/api/models/update-user-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,60 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface UpdateUserDto
- */
-export interface UpdateUserDto {
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateUserDto
-     */
-    'username'?: string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateUserDto
-     */
-    'primaryEmail'?: string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateUserDto
-     */
-    'primaryPhone'?: string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateUserDto
-     */
-    'name'?: string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof UpdateUserDto
-     */
-    'avatar'?: string | null;
-    /**
-     * 
-     * @type {{ [key: string]: any; }}
-     * @memberof UpdateUserDto
-     */
-    'customData'?: { [key: string]: any; } | null;
-}
-
Index: src/services/api/models/upload-controller-upload401-response.ts
===================================================================
diff --git a/src/services/api/models/upload-controller-upload401-response.ts b/src/services/api/models/upload-controller-upload401-response.ts
deleted file mode 100644
--- a/src/services/api/models/upload-controller-upload401-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Неправильный access_token.
- * @export
- * @interface UploadControllerUpload401Response
- */
-export interface UploadControllerUpload401Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof UploadControllerUpload401Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof UploadControllerUpload401Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof UploadControllerUpload401Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/upload-controller-upload422-response.ts
===================================================================
diff --git a/src/services/api/models/upload-controller-upload422-response.ts b/src/services/api/models/upload-controller-upload422-response.ts
deleted file mode 100644
--- a/src/services/api/models/upload-controller-upload422-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Отсутствует поле \"files\" / превышен размер \"5MB\" / больше 10 файлов
- * @export
- * @interface UploadControllerUpload422Response
- */
-export interface UploadControllerUpload422Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof UploadControllerUpload422Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof UploadControllerUpload422Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof UploadControllerUpload422Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/models/upload-result-dto-files-inner.ts
===================================================================
diff --git a/src/services/api/models/upload-result-dto-files-inner.ts b/src/services/api/models/upload-result-dto-files-inner.ts
deleted file mode 100644
--- a/src/services/api/models/upload-result-dto-files-inner.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,48 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface UploadResultDtoFilesInner
- */
-export interface UploadResultDtoFilesInner {
-    /**
-     * 
-     * @type {string}
-     * @memberof UploadResultDtoFilesInner
-     */
-    'originalFileName': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof UploadResultDtoFilesInner
-     */
-    'fileName': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof UploadResultDtoFilesInner
-     */
-    'fileUrl': string;
-    /**
-     * 
-     * @type {number}
-     * @memberof UploadResultDtoFilesInner
-     */
-    'expiresAt'?: number;
-}
-
Index: src/services/api/models/upload-result-dto.ts
===================================================================
diff --git a/src/services/api/models/upload-result-dto.ts b/src/services/api/models/upload-result-dto.ts
deleted file mode 100644
--- a/src/services/api/models/upload-result-dto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,33 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-// May contain unused imports in some cases
-// @ts-ignore
-import { UploadResultDtoFilesInner } from './upload-result-dto-files-inner';
-
-/**
- * 
- * @export
- * @interface UploadResultDto
- */
-export interface UploadResultDto {
-    /**
-     * 
-     * @type {Array<UploadResultDtoFilesInner>}
-     * @memberof UploadResultDto
-     */
-    'files': Array<UploadResultDtoFilesInner>;
-}
-
Index: src/services/api/models/user-entity.ts
===================================================================
diff --git a/src/services/api/models/user-entity.ts b/src/services/api/models/user-entity.ts
deleted file mode 100644
--- a/src/services/api/models/user-entity.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,78 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * 
- * @export
- * @interface UserEntity
- */
-export interface UserEntity {
-    /**
-     * 
-     * @type {string}
-     * @memberof UserEntity
-     */
-    'id': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof UserEntity
-     */
-    'username': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof UserEntity
-     */
-    'primaryEmail': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof UserEntity
-     */
-    'primaryPhone': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof UserEntity
-     */
-    'name': string | null;
-    /**
-     * 
-     * @type {string}
-     * @memberof UserEntity
-     */
-    'avatar': string | null;
-    /**
-     * 
-     * @type {{ [key: string]: any; }}
-     * @memberof UserEntity
-     */
-    'customData': { [key: string]: any; };
-    /**
-     * 
-     * @type {number}
-     * @memberof UserEntity
-     */
-    'createdAt': number;
-    /**
-     * 
-     * @type {boolean}
-     * @memberof UserEntity
-     */
-    'isSuspended': boolean;
-}
-
Index: src/services/api/models/users-controller-find-one404-response.ts
===================================================================
diff --git a/src/services/api/models/users-controller-find-one404-response.ts b/src/services/api/models/users-controller-find-one404-response.ts
deleted file mode 100644
--- a/src/services/api/models/users-controller-find-one404-response.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,42 +0,0 @@
-/* tslint:disable */
-/* eslint-disable */
-/**
- * Новосибирск BMW Клуб API
- * API спецификация api.bmw-nsk.ru
- *
- * The version of the OpenAPI document: 1.0
- * Contact: evist0@dblade.tech
- *
- * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
- * https://openapi-generator.tech
- * Do not edit the class manually.
- */
-
-
-
-/**
- * Указанный пользователь не найден.
- * @export
- * @interface UsersControllerFindOne404Response
- */
-export interface UsersControllerFindOne404Response {
-    /**
-     * 
-     * @type {number}
-     * @memberof UsersControllerFindOne404Response
-     */
-    'statusCode': number;
-    /**
-     * 
-     * @type {string}
-     * @memberof UsersControllerFindOne404Response
-     */
-    'message': string;
-    /**
-     * 
-     * @type {string}
-     * @memberof UsersControllerFindOne404Response
-     */
-    'error'?: string;
-}
-
Index: src/services/api/runtime.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/services/api/runtime.ts b/src/services/api/runtime.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/services/api/runtime.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,451 @@
+/* tslint:disable */
+/* eslint-disable */
+/**
+ * пожликбез.рф API
+ * API спецификация пожликбез.рф
+ *
+ * The version of the OpenAPI document: 1.0
+ *
+ *
+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
+ * https://openapi-generator.tech
+ * Do not edit the class manually.
+ */
+
+export const BASE_PATH = 'https://пожликбез.рф'.replace(/\/+$/, '');
+
+export interface ConfigurationParameters {
+  basePath?: string; // override base path
+  fetchApi?: FetchAPI; // override for fetch implementation
+  middleware?: Middleware[]; // middleware to apply before/after fetch requests
+  queryParamsStringify?: (params: HTTPQuery) => string; // stringify function for query strings
+  username?: string; // parameter for basic security
+  password?: string; // parameter for basic security
+  apiKey?: string | ((name: string) => string); // parameter for apiKey security
+  accessToken?: string | Promise<string> | ((name?: string, scopes?: string[]) => string | Promise<string>); // parameter for oauth2 security
+  headers?: HTTPHeaders; //header params we want to use on every request
+  credentials?: RequestCredentials; //value for the credentials param we want to use on each request
+}
+
+export class Configuration {
+  constructor(private configuration: ConfigurationParameters = {}) {}
+
+  set config(configuration: Configuration) {
+    this.configuration = configuration;
+  }
+
+  get basePath(): string {
+    return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH;
+  }
+
+  get fetchApi(): FetchAPI | undefined {
+    return this.configuration.fetchApi;
+  }
+
+  get middleware(): Middleware[] {
+    return this.configuration.middleware || [];
+  }
+
+  get queryParamsStringify(): (params: HTTPQuery) => string {
+    return this.configuration.queryParamsStringify || querystring;
+  }
+
+  get username(): string | undefined {
+    return this.configuration.username;
+  }
+
+  get password(): string | undefined {
+    return this.configuration.password;
+  }
+
+  get apiKey(): ((name: string) => string) | undefined {
+    const apiKey = this.configuration.apiKey;
+    if (apiKey) {
+      return typeof apiKey === 'function' ? apiKey : () => apiKey;
+    }
+    return undefined;
+  }
+
+  get accessToken(): ((name?: string, scopes?: string[]) => string | Promise<string>) | undefined {
+    const accessToken = this.configuration.accessToken;
+    if (accessToken) {
+      return typeof accessToken === 'function' ? accessToken : async () => accessToken;
+    }
+    return undefined;
+  }
+
+  get headers(): HTTPHeaders | undefined {
+    return this.configuration.headers;
+  }
+
+  get credentials(): RequestCredentials | undefined {
+    return this.configuration.credentials;
+  }
+}
+
+export const DefaultConfig = new Configuration();
+
+/**
+ * This is the base class for all generated API classes.
+ */
+export class BaseAPI {
+  private static readonly jsonRegex = new RegExp(
+    '^(:?application/json|[^;/ \t]+/[^;/ \t]+[+]json)[ \t]*(:?;.*)?$',
+    'i',
+  );
+  private middleware: Middleware[];
+
+  constructor(protected configuration = DefaultConfig) {
+    this.middleware = configuration.middleware;
+  }
+
+  withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {
+    const next = this.clone<T>();
+    next.middleware = next.middleware.concat(...middlewares);
+    return next;
+  }
+
+  withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>) {
+    const middlewares = preMiddlewares.map((pre) => ({ pre }));
+    return this.withMiddleware<T>(...middlewares);
+  }
+
+  withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>) {
+    const middlewares = postMiddlewares.map((post) => ({ post }));
+    return this.withMiddleware<T>(...middlewares);
+  }
+
+  /**
+   * Check if the given MIME is a JSON MIME.
+   * JSON MIME examples:
+   *   application/json
+   *   application/json; charset=UTF8
+   *   APPLICATION/JSON
+   *   application/vnd.company+json
+   * @param mime - MIME (Multipurpose Internet Mail Extensions)
+   * @return True if the given MIME is JSON, false otherwise.
+   */
+  protected isJsonMime(mime: string | null | undefined): boolean {
+    if (!mime) {
+      return false;
+    }
+    return BaseAPI.jsonRegex.test(mime);
+  }
+
+  protected async request(context: RequestOpts, initOverrides?: RequestInit | InitOverrideFunction): Promise<Response> {
+    const { url, init } = await this.createFetchParams(context, initOverrides);
+    const response = await this.fetchApi(url, init);
+    if (response && response.status >= 200 && response.status < 300) {
+      return response;
+    }
+    throw new ResponseError(response, 'Response returned an error code');
+  }
+
+  private async createFetchParams(context: RequestOpts, initOverrides?: RequestInit | InitOverrideFunction) {
+    let url = this.configuration.basePath + context.path;
+    if (context.query !== undefined && Object.keys(context.query).length !== 0) {
+      // only add the querystring to the URL if there are query parameters.
+      // this is done to avoid urls ending with a "?" character which buggy webservers
+      // do not handle correctly sometimes.
+      url += '?' + this.configuration.queryParamsStringify(context.query);
+    }
+
+    const headers = Object.assign({}, this.configuration.headers, context.headers);
+    Object.keys(headers).forEach((key) => (headers[key] === undefined ? delete headers[key] : {}));
+
+    const initOverrideFn = typeof initOverrides === 'function' ? initOverrides : async () => initOverrides;
+
+    const initParams = {
+      method: context.method,
+      headers,
+      body: context.body,
+      credentials: this.configuration.credentials,
+    };
+
+    const overriddenInit: RequestInit = {
+      ...initParams,
+      ...(await initOverrideFn({
+        init: initParams,
+        context,
+      })),
+    };
+
+    const init: RequestInit = {
+      ...overriddenInit,
+      body:
+        isFormData(overriddenInit.body) || overriddenInit.body instanceof URLSearchParams || isBlob(overriddenInit.body)
+          ? overriddenInit.body
+          : JSON.stringify(overriddenInit.body),
+    };
+
+    return { url, init };
+  }
+
+  private fetchApi = async (url: string, init: RequestInit) => {
+    let fetchParams = { url, init };
+    for (const middleware of this.middleware) {
+      if (middleware.pre) {
+        fetchParams =
+          (await middleware.pre({
+            fetch: this.fetchApi,
+            ...fetchParams,
+          })) || fetchParams;
+      }
+    }
+    let response: Response | undefined = undefined;
+    try {
+      response = await (this.configuration.fetchApi || fetch)(fetchParams.url, fetchParams.init);
+    } catch (e) {
+      for (const middleware of this.middleware) {
+        if (middleware.onError) {
+          response =
+            (await middleware.onError({
+              fetch: this.fetchApi,
+              url: fetchParams.url,
+              init: fetchParams.init,
+              error: e,
+              response: response ? response.clone() : undefined,
+            })) || response;
+        }
+      }
+      if (response === undefined) {
+        if (e instanceof Error) {
+          throw new FetchError(e, 'The request failed and the interceptors did not return an alternative response');
+        } else {
+          throw e;
+        }
+      }
+    }
+    for (const middleware of this.middleware) {
+      if (middleware.post) {
+        response =
+          (await middleware.post({
+            fetch: this.fetchApi,
+            url: fetchParams.url,
+            init: fetchParams.init,
+            response: response.clone(),
+          })) || response;
+      }
+    }
+    return response;
+  };
+
+  /**
+   * Create a shallow clone of `this` by constructing a new instance
+   * and then shallow cloning data members.
+   */
+  private clone<T extends BaseAPI>(this: T): T {
+    const constructor = this.constructor as any;
+    const next = new constructor(this.configuration);
+    next.middleware = this.middleware.slice();
+    return next;
+  }
+}
+
+function isBlob(value: any): value is Blob {
+  return typeof Blob !== 'undefined' && value instanceof Blob;
+}
+
+function isFormData(value: any): value is FormData {
+  return typeof FormData !== 'undefined' && value instanceof FormData;
+}
+
+export class ResponseError extends Error {
+  override name: 'ResponseError' = 'ResponseError';
+  constructor(public response: Response, msg?: string) {
+    super(msg);
+  }
+}
+
+export class FetchError extends Error {
+  override name: 'FetchError' = 'FetchError';
+  constructor(public cause: Error, msg?: string) {
+    super(msg);
+  }
+}
+
+export class RequiredError extends Error {
+  override name: 'RequiredError' = 'RequiredError';
+  constructor(public field: string, msg?: string) {
+    super(msg);
+  }
+}
+
+export const COLLECTION_FORMATS = {
+  csv: ',',
+  ssv: ' ',
+  tsv: '\t',
+  pipes: '|',
+};
+
+export type FetchAPI = WindowOrWorkerGlobalScope['fetch'];
+
+export type Json = any;
+export type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD';
+export type HTTPHeaders = { [key: string]: string };
+export type HTTPQuery = {
+  [key: string]:
+    | string
+    | number
+    | null
+    | boolean
+    | Array<string | number | null | boolean>
+    | Set<string | number | null | boolean>
+    | HTTPQuery;
+};
+export type HTTPBody = Json | FormData | URLSearchParams;
+export type HTTPRequestInit = {
+  headers?: HTTPHeaders;
+  method: HTTPMethod;
+  credentials?: RequestCredentials;
+  body?: HTTPBody;
+};
+export type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original';
+
+export type InitOverrideFunction = (requestContext: {
+  init: HTTPRequestInit;
+  context: RequestOpts;
+}) => Promise<RequestInit>;
+
+export interface FetchParams {
+  url: string;
+  init: RequestInit;
+}
+
+export interface RequestOpts {
+  path: string;
+  method: HTTPMethod;
+  headers: HTTPHeaders;
+  query?: HTTPQuery;
+  body?: HTTPBody;
+}
+
+export function exists(json: any, key: string) {
+  const value = json[key];
+  return value !== null && value !== undefined;
+}
+
+export function querystring(params: HTTPQuery, prefix: string = ''): string {
+  return Object.keys(params)
+    .map((key) => querystringSingleKey(key, params[key], prefix))
+    .filter((part) => part.length > 0)
+    .join('&');
+}
+
+function querystringSingleKey(
+  key: string,
+  value:
+    | string
+    | number
+    | null
+    | undefined
+    | boolean
+    | Array<string | number | null | boolean>
+    | Set<string | number | null | boolean>
+    | HTTPQuery,
+  keyPrefix: string = '',
+): string {
+  const fullKey = keyPrefix + (keyPrefix.length ? `[${key}]` : key);
+  if (value instanceof Array) {
+    const multiValue = value
+      .map((singleValue) => encodeURIComponent(String(singleValue)))
+      .join(`&${encodeURIComponent(fullKey)}=`);
+    return `${encodeURIComponent(fullKey)}=${multiValue}`;
+  }
+  if (value instanceof Set) {
+    const valueAsArray = Array.from(value);
+    return querystringSingleKey(key, valueAsArray, keyPrefix);
+  }
+  if (value instanceof Date) {
+    return `${encodeURIComponent(fullKey)}=${encodeURIComponent(value.toISOString())}`;
+  }
+  if (value instanceof Object) {
+    return querystring(value as HTTPQuery, fullKey);
+  }
+  return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`;
+}
+
+export function mapValues(data: any, fn: (item: any) => any) {
+  return Object.keys(data).reduce((acc, key) => ({ ...acc, [key]: fn(data[key]) }), {});
+}
+
+export function canConsumeForm(consumes: Consume[]): boolean {
+  for (const consume of consumes) {
+    if ('multipart/form-data' === consume.contentType) {
+      return true;
+    }
+  }
+  return false;
+}
+
+export interface Consume {
+  contentType: string;
+}
+
+export interface RequestContext {
+  fetch: FetchAPI;
+  url: string;
+  init: RequestInit;
+}
+
+export interface ResponseContext {
+  fetch: FetchAPI;
+  url: string;
+  init: RequestInit;
+  response: Response;
+}
+
+export interface ErrorContext {
+  fetch: FetchAPI;
+  url: string;
+  init: RequestInit;
+  error: unknown;
+  response?: Response;
+}
+
+export interface Middleware {
+  pre?(context: RequestContext): Promise<FetchParams | void>;
+  post?(context: ResponseContext): Promise<Response | void>;
+  onError?(context: ErrorContext): Promise<Response | void>;
+}
+
+export interface ApiResponse<T> {
+  raw: Response;
+  value(): Promise<T>;
+}
+
+export interface ResponseTransformer<T> {
+  (json: any): T;
+}
+
+export class JSONApiResponse<T> {
+  constructor(public raw: Response, private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue) {}
+
+  async value(): Promise<T> {
+    return this.transformer(await this.raw.json());
+  }
+}
+
+export class VoidApiResponse {
+  constructor(public raw: Response) {}
+
+  async value(): Promise<void> {
+    return undefined;
+  }
+}
+
+export class BlobApiResponse {
+  constructor(public raw: Response) {}
+
+  async value(): Promise<Blob> {
+    return await this.raw.blob();
+  }
+}
+
+export class TextApiResponse {
+  constructor(public raw: Response) {}
+
+  async value(): Promise<string> {
+    return await this.raw.text();
+  }
+}
Index: src/shared/config/api.ts
===================================================================
diff --git a/src/shared/config/api.ts b/src/shared/config/api.ts
deleted file mode 100644
--- a/src/shared/config/api.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ /dev/null	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
@@ -1,6 +0,0 @@
-export const API_URL = import.meta.env.VITE_API_URL;
-
-export enum Scope {
-  WritePartners = 'write:partners',
-  ReadPartners = 'read:partners',
-}
Index: src/shared/config/logto.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/shared/config/logto.ts b/src/shared/config/logto.ts
--- a/src/shared/config/logto.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/shared/config/logto.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -1,10 +1,22 @@
 import { LogtoConfig } from '@logto/react';
 
-import { API_URL } from './api';
+export enum Resources {
+  API = 'https://пожликбез.рф/api',
+}
+
+export enum Scope {
+  // https://docs.logto.io/docs/recipes/integrate-logto/react/#fetch-user-information
+  Email = 'email',
+  Phone = 'phone',
+
+  // Scope для API
+  ReadAllObjects = 'read-all:objects',
+  WriteAllObjects = 'write-all:objects',
+}
 
 export const logtoConfig: LogtoConfig = {
   endpoint: import.meta.env.VITE_LOGTO_ENDPOINT,
   appId: import.meta.env.VITE_LOGTO_APP_ID,
-  resources: [API_URL],
-  // scopes: Object.values(Scope),
+  resources: Object.values(Resources),
+  scopes: Object.values(Scope),
 };
Index: src/shared/hooks/useApi.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/shared/hooks/useApi.ts b/src/shared/hooks/useApi.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/shared/hooks/useApi.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,9 @@
+import React, { useContext } from 'react';
+
+import { DefaultApi } from 'services/api';
+
+export const ApiContext = React.createContext<DefaultApi | null>(null);
+
+export const useApi = (): DefaultApi => {
+  return useContext(ApiContext)!;
+};
Index: src/shared/hooks/useToggle.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/shared/hooks/useToggle.ts b/src/shared/hooks/useToggle.ts
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/src/shared/hooks/useToggle.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,20 @@
+import { useState } from 'react';
+
+export function useToggle(
+  initialStatus?: boolean,
+  callbackOnToggle?: (newStatus: boolean) => void,
+): [boolean, () => void, (newStatus: boolean) => void] {
+  const [status, setStatus] = useState(initialStatus ?? false);
+
+  const toggleStatus = () => {
+    setStatus((prevState) => !prevState);
+    if (callbackOnToggle) callbackOnToggle(!status);
+  };
+
+  const setStatusManually = (newStatus: boolean) => {
+    setStatus(newStatus);
+    if (callbackOnToggle) callbackOnToggle(newStatus);
+  };
+
+  return [status, toggleStatus, setStatusManually];
+}
Index: src/shared/ui/DadataGeoPicker.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/shared/ui/DadataGeoPicker.tsx b/src/shared/ui/DadataGeoPicker.tsx
--- a/src/shared/ui/DadataGeoPicker.tsx	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/shared/ui/DadataGeoPicker.tsx	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -3,14 +3,14 @@
 import { AddressSuggestions, DaDataAddress, DaDataSuggestion } from 'react-dadata';
 
 import Input from 'antd/es/input/Input';
-import { CreateBuildingDto } from 'services/api';
+// import { CreateBuildingDto } from 'services/api';
 import { commonConfig } from 'shared/config/common';
 
 import 'react-dadata/dist/react-dadata.css';
 
 type Props = {
   onChange: (v: DaDataSuggestion<DaDataAddress>) => void;
-  value: Omit<CreateBuildingDto, 'phone' | 'categories' | 'partnerId'> & {
+  value: unknown & {
     rawValue: DaDataSuggestion<DaDataAddress>;
   };
 };
Index: src/shared/ui/TooltipCustom.tsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/shared/ui/TooltipCustom.tsx b/src/shared/ui/TooltipCustom.tsx
--- a/src/shared/ui/TooltipCustom.tsx	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/src/shared/ui/TooltipCustom.tsx	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -1,15 +1,15 @@
-import React from 'react';
+import React, { forwardRef } from 'react';
 
 import AntTooltip from 'antd/es/tooltip';
 import styled from 'styled-components';
 
 import type { TooltipProps } from 'antd/es/tooltip';
 
-const Tooltip: React.FC<TooltipProps> = ({ className, children, overlay, ...restProps }) => (
-  <AntTooltip arrow={{ pointAtCenter: true }} overlay={overlay} overlayClassName={className} {...restProps}>
+const Tooltip: React.FC<TooltipProps> = forwardRef(({ className, children, overlay, ...restProps }, ref) => (
+  <AntTooltip arrow={{ pointAtCenter: true }} overlay={overlay} overlayClassName={className} ref={ref} {...restProps}>
     {children}
   </AntTooltip>
-);
+));
 
 export const TooltipCustom = styled(Tooltip)`
   max-width: 400px !important;
Index: tsconfig.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tsconfig.json b/tsconfig.json
--- a/tsconfig.json	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/tsconfig.json	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -17,6 +17,7 @@
     "noEmit": true,
     "jsx": "react-jsx"
   },
+  "extends": "./tsconfig.paths.json",
   "include": ["src", "prettier.config.js"],
   "exclude": ["node_modules/**/*"],
   "references": [{ "path": "./tsconfig.node.json" }]
Index: tsconfig.paths.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tsconfig.paths.json b/tsconfig.paths.json
new file mode 100644
--- /dev/null	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
+++ b/tsconfig.paths.json	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -0,0 +1,12 @@
+{
+  "compilerOptions": {
+    "paths": {
+      "app/*": ["app/*"],
+      "components/*": ["components/*"],
+      "pages/*": ["pages/*"],
+      "services/*": ["services/*"],
+      "shared/*": ["shared/*"],
+      "widgets/*": ["widgets/*"]
+    }
+  }
+}
Index: vite.config.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/vite.config.ts b/vite.config.ts
--- a/vite.config.ts	(revision 6d68cf45c89f4d1ed8ad25e1c86587793cb37ea5)
+++ b/vite.config.ts	(revision 6b8628a27872f15a055b725b44d751dcc1395822)
@@ -6,4 +6,7 @@
 // https://vitejs.dev/config/
 export default defineConfig({
   plugins: [react(), tsconfigPaths(), eslint()],
+  optimizeDeps: {
+    include: ['antd', '@styled-icons/material'],
+  },
 });
diff --git a/src/services/api/.npmignore b/src/services/api/.npmignore
deleted file mode 100644
index 999d88df6939a13529be54ef2e68fb3248257ad8..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

